* 介绍
  :PROPERTIES:
  :CUSTOM_ID: 介绍
  :END:
  本项目包含[[https://leetcode-cn.com/problemset/all/][LeetCode]]、[[https://leetcode-cn.com/problemset/lcof/][《剑指Offer（第 2版）》]]、[[https://leetcode-cn.com/problemset/lcci/][《程序员面试金典（第6版）》]]等题目的相关题解。所有题解均由多种编程语言实现，
  包括但不限于：Java、Python、C++、JavaScript、C#、Go，日常更新。欢迎Star 🌟 关注本项目「[[https://github.com/doocs/leetcode][GitHub]] / [[https://gitee.com/doocs/leetcode][Gitee]]」，获取项目最新
  动态。

  [[./README_EN.org][English Version]]

* 站点
  :PROPERTIES:
  :CUSTOM_ID: 站点
  :END:

  - Netlify: https://lc.netlify.app
  - Gitee Pages: https://doocs.gitee.io/leetcode
  - GitHub Pages: https://doocs.github.io/leetcode

* LeetCode 全解
  :PROPERTIES:
  :CUSTOM_ID: leetcode-全解
  :END:

  - [[./solution/README.org][LeetCode]]
  - [[./lcof/README.org][LeetCode 《剑指 Offer（第 2 版）》]]
  - [[./lcci/README.org][LeetCode 《程序员面试金典（第 6 版）》]]

* 基础算法通关
  :PROPERTIES:
  :CUSTOM_ID: 基础算法通关
  :END:
** 排序算法
   :PROPERTIES:
   :CUSTOM_ID: 排序算法
   :END:

   - [[./basic/sorting/BubbleSort/README.org][冒泡排序]]
   - [[./basic/sorting/InsertionSort/README.org][插入排序]]
   - [[./basic/sorting/SelectionSort/README.org][选择排序]]
   - [[./basic/sorting/MergeSort/README.org][归并排序]]
   - [[./basic/sorting/QuickSort/README.org][快速排序]]
   - [[./basic/sorting/ShellSort/README.org][希尔排序]]

** 查找算法
   :PROPERTIES:
   :CUSTOM_ID: 查找算法
   :END:

   - [[./basic/searching/BinarySearch/README.org][二分查找]]
   - [[./basic/searching/BinarySearch-II/README.org][二分查找 II]]

* 高频考题
  :PROPERTIES:
  :CUSTOM_ID: 高频考题
  :END:
** 数组
   :PROPERTIES:
   :CUSTOM_ID: 数组
   :END:

   - [[./solution/0000-0099/0026.Remove Duplicates from Sorted Array/README.org][删除排序数组中的重复项]]
   - [[./solution/0000-0099/0080.Remove Duplicates from Sorted Array II/README.org][删除排序数组中的重复项 II]]
   - [[./solution/0000-0099/0027.Remove Element/README.org][移除元素]]
   - [[./solution/0200-0299/0283.Move Zeroes/README.org][移动零]]
   - [[./lcof/面试题03. 数组中重复的数字/README.org][数组中重复的数字]]
   - [[./solution/0100-0199/0189.Rotate Array/README.org][旋转数组]]
   - [[./solution/0000-0099/0054.Spiral Matrix/README.org][螺旋矩阵]]
   - [[./solution/0000-0099/0001.Two Sum/README.org][两数之和]]
   - [[./solution/0000-0099/0015.3Sum/README.org][三数之和]]
   - [[./solution/0000-0099/0018.4Sum/README.org][四数之和]]
   - [[./solution/0200-0299/0259.3Sum Smaller/README.org][较小的三数之和]]
   - [[./solution/0000-0099/0016.3Sum Closest/README.org][最接近的三数之和]]
   - [[./solution/0000-0099/0088.Merge Sorted Array/README.org][合并两个有序数组]]
   - [[./solution/0100-0199/0153.Find Minimum in Rotated Sorted Array/README.org][寻找旋转排序数组中的最小值]]
   - [[./solution/0100-0199/0154.Find Minimum in Rotated Sorted Array II/README.org][寻找旋转排序数组中的最小值 II]]
   - [[./solution/0200-0299/0238.Product of Array Except Self/README.org][除自身以外数组的乘积]]

** 字符串
   :PROPERTIES:
   :CUSTOM_ID: 字符串
   :END:

   - [[./solution/0000-0099/0003.Longest Substring Without Repeating Characters/README.org][无重复字符的最长子串]]
   - [[./solution/0000-0099/0014.Longest Common Prefix/README.org][最长公共前缀]]
   - [[./solution/0300-0399/0345.Reverse Vowels of a String/README.org][反转字符串中的元音字母]]
   - [[./solution/0000-0099/0008.String to Integer %28atoi%29/README.org][字符串转换整数 (atoi)]]
   - [[./solution/0300-0399/0383.Ransom Note/README.org][赎金信]]

** 链表
   :PROPERTIES:
   :CUSTOM_ID: 链表
   :END:

   - [[./solution/0000-0099/0002.Add Two Numbers/README.org][两数相加]]
   - [[./solution/0400-0499/0445.Add Two Numbers II/README.org][两数相加 II]]
   - [[./lcof/面试题06. 从尾到头打印链表/README.org][从尾到头打印链表]]
   - [[./solution/0200-0299/0237.Delete Node in a Linked List/README.org][删除链表中的节点]]
   - [[./solution/0000-0099/0083.Remove Duplicates from Sorted List/README.org][删除排序链表中的重复元素]]
   - [[./solution/0000-0099/0082.Remove Duplicates from Sorted List II/README.org][删除排序链表中的重复元素 II]]
   - [[./solution/0200-0299/0203.Remove Linked List Elements/README.org][移除链表元素]]
   - [[./lcci/02.02.Kth Node From End of List/README.org][链表中倒数第 k 个节点]]
   - [[./solution/0000-0099/0024.Swap Nodes in Pairs/README.org][两两交换链表中的节点]]
   - [[./solution/0000-0099/0021.Merge Two Sorted Lists/README.org][合并两个有序链表]]
   - [[./solution/0000-0099/0023.Merge k Sorted Lists/README.org][合并 K 个排序链表]]
   - [[./solution/0100-0199/0147.Insertion Sort List/README.org][对链表进行插入排序]]
   - [[./solution/0100-0199/0148.Sort List/README.org][排序链表]]
   - [[./solution/0200-0299/0206.Reverse Linked List/README.org][反转链表]]
   - [[./solution/0000-0099/0092.Reverse Linked List II/README.org][反转链表 II]]
   - [[./solution/0100-0199/0143.Reorder List/README.org][重排链表]]
   - [[./solution/0000-0099/0061.Rotate List/README.org][旋转链表]]
   - [[./solution/0200-0299/0234.Palindrome Linked List/README.org][回文链表]]
   - [[./solution/0100-0199/0160.Intersection of Two Linked Lists/README.org][相交链表]]
   - [[./solution/0300-0399/0328.Odd Even Linked List/README.org][奇偶链表]]
   - [[./solution/0100-0199/0141.Linked List Cycle/README.org][环形链表]]
   - [[./solution/0100-0199/0142.Linked List Cycle II/README.org][环形链表 II]]
   - [[./solution/0700-0799/0707.Design Linked List/README.org][设计链表]]

** 二叉树
   :PROPERTIES:
   :CUSTOM_ID: 二叉树
   :END:

   - [[./solution/0100-0199/0144.Binary Tree Preorder Traversal/README.org][二叉树的前序遍历]]
   - [[./solution/0100-0199/0145.Binary Tree Postorder Traversal/README.org][二叉树的后序遍历]]
   - [[./solution/0000-0099/0094.Binary Tree Inorder Traversal/README.org][二叉树的中序遍历]]
   - [[./solution/0100-0199/0101.Symmetric Tree/README.org][对称二叉树]]
   - [[./lcof/面试题26. 树的子结构/README.org][树的子结构]]
   - [[./solution/0200-0299/0226.Invert Binary Tree/README.org][翻转二叉树]]
   - [[./solution/0100-0199/0102.Binary Tree Level Order Traversal/README.org][二叉树的层次遍历]]
   - [[./solution/0100-0199/0107.Binary Tree Level Order Traversal II/README.org][二叉树的层次遍历 II]]
   - [[./solution/0100-0199/0199.Binary Tree Right Side View/README.org][二叉树的右视图]]
   - [[./solution/0100-0199/0104.Maximum Depth of Binary Tree/README.org][二叉树的最大深度]]
   - [[./solution/0100-0199/0111.Minimum Depth of Binary Tree/README.org][二叉树的最小深度]]
   - [[./solution/0200-0299/0257.Binary Tree Paths/README.org][二叉树的所有路径]]
   - [[./solution/0100-0199/0112.Path Sum/README.org][路径总和]]
   - [[./solution/0100-0199/0113.Path Sum II/README.org][路径总和 II]]
   - [[./solution/0100-0199/0105.Construct Binary Tree from Preorder and Inorder Traversal/README.org][从前序与中序遍历序列构造二叉树]]
   - [[./solution/0100-0199/0106.Construct Binary Tree from Inorder and Postorder Traversal/README.org][从中序与后序遍历序列构造二叉树]]
   - [[./lcof/面试题33. 二叉搜索树的后序遍历序列/README.org][二叉搜索树的后序遍历序列]]
   - [[./solution/0100-0199/0173.Binary Search Tree Iterator/README.org][二叉搜索树迭代器]]
   - [[./solution/0200-0299/0235.Lowest Common Ancestor of a Binary Search Tree/README.org][二叉树的最近公共祖先]]
   - [[./solution/0200-0299/0236.Lowest Common Ancestor of a Binary Tree/README.org][二叉搜索树的最近公共祖先]]
   - [[./lcci/17.12.BiNode/README.org][将二叉搜索树转换为单链表]]
   - [[./solution/0400-0499/0426.Convert Binary Search Tree to Sorted Doubly Linked List/README.org][将二叉搜索树转化为排序的双向链表]]
   - [[./solution/0500-0599/0545.Boundary of Binary Tree/README.org][二叉树的边界]]
   - [[./solution/0100-0199/0116.Populating Next Right Pointers in Each Node/README.org][填充每个节点的下一个右侧节点指针]]
   - [[./solution/0100-0199/0117.Populating Next Right Pointers in Each Node II/README.org][填充每个节点的下一个右侧节点指针 II]]

** 数学
   :PROPERTIES:
   :CUSTOM_ID: 数学
   :END:

   - [[./solution/0000-0099/0012.Integer to Roman/README.org][整数转罗马数字]]
   - [[./solution/0000-0099/0013.Roman to Integer/README.org][罗马数字转整数]]
   - [[./solution/0100-0199/0136.Single Number/README.org][只出现一次的数字]]
   - [[./solution/0100-0199/0137.Single Number II/README.org][只出现一次的数字 II]]
   - [[./solution/0200-0299/0260.Single Number III/README.org][只出现一次的数字 III]]
   - [[./solution/0600-0699/0645.Set Mismatch/README.org][错误的集合]]
   - [[./solution/0100-0199/0191.Number of 1 Bits/README.org][位 1 的个数]]
   - [[./solution/0200-0299/0204.Count Primes/README.org][计数质数]]
   - [[./lcof/面试题65. 不用加减乘除做加法/README.org][不用加减乘除做加法]]
   - [[./solution/0200-0299/0268.Missing Number/README.org][丢失的数字]]

** 栈和队列
   :PROPERTIES:
   :CUSTOM_ID: 栈和队列
   :END:

   - [[./solution/0000-0099/0020.Valid Parentheses/README.org][有效的括号]]
   - [[./solution/0100-0199/0155.Min Stack/README.org][最小栈]]
   - [[./lcof/面试题59 - II. 队列的最大值/README.org][队列的最大值]]
   - [[./solution/0200-0299/0232.Implement Queue using Stacks/README.org][用栈实现队列]]
   - [[./solution/0200-0299/0225.Implement Stack using Queues/README.org][用队列实现栈]]
   - [[./solution/0100-0199/0150.Evaluate Reverse Polish Notation/README.org][逆波兰表达式求值]]
   - [[./solution/0900-0999/0933.Number of Recent Calls/README.org][最近的请求次数]]
   - [[./solution/0700-0799/0739.Daily Temperatures/README.org][每日温度]]
   - [[./solution/0200-0299/0227.Basic Calculator II/README.org][基本计算器 II]]
   - [[./solution/0400-0499/0496.Next Greater Element I/README.org][下一个更大元素 I]]
   - [[./solution/0500-0599/0503.Next Greater Element II/README.org][下一个更大元素 II]]

** 动态规划
   :PROPERTIES:
   :CUSTOM_ID: 动态规划
   :END:

   - [[./solution/0000-0099/0070.Climbing Stairs/README.org][爬楼梯]]
   - [[./solution/0000-0099/0042.Trapping Rain Water/README.org][接雨水]]
   - [[./solution/0000-0099/0053.Maximum Subarray/README.org][最大子序和]]
   - [[./lcof/面试题47. 礼物的最大价值/README.org][礼物的最大价值]]
   - [[./solution/0000-0099/0064.Minimum Path Sum/README.org][最小路径和]]
   - [[./solution/0000-0099/0091.Decode Ways/README.org][解码方法]]
   - [[./solution/0100-0199/0152.Maximum Product Subarray/README.org][乘积最大子序列]]
   - [[./solution/0100-0199/0198.House Robber/README.org][打家劫舍]]
   - [[./solution/0200-0299/0213.House Robber II/README.org][打家劫舍 II]]
   - [[./solution/0300-0399/0300.Longest Increasing Subsequence/README.org][最长上升子序列]]
   - [[./solution/0300-0399/0354.Russian Doll Envelopes/README.org][俄罗斯套娃信封问题]]
   - [[./solution/1100-1199/1143.Longest Common Subsequence/README.org][最长公共子序列]]

** 回溯算法
   :PROPERTIES:
   :CUSTOM_ID: 回溯算法
   :END:

   - [[./solution/0000-0099/0078.Subsets/README.org][子集]]
   - [[./solution/0000-0099/0090.Subsets II/README.org][子集 II]]

** 设计
   :PROPERTIES:
   :CUSTOM_ID: 设计
   :END:

   - [[./solution/0100-0199/0146.Lru Cache/README.org][LRU 缓存机制]]
   - [[./solution/0200-0299/0208.Implement Trie %28Prefix Tree%29/README.org][实现 Trie (前缀树)]]
   - [[./solution/1800-1899/1804.Implement Trie II %28Prefix Tree%29/README.org][实现 Trie （前缀树） II]]
   - [[./solution/0600-0699/0622.Design Circular Queue/README.org][设计循环队列]]
   - [[./solution/0600-0699/0641.Design Circular Deque/README.org][设计循环双端队列]]
   - [[./solution/0700-0799/0705.Design HashSet/README.org][设计哈希集合]]
   - [[./solution/0700-0799/0706.Design HashMap/README.org][设计哈希映射]]

** 数据库
   :PROPERTIES:
   :CUSTOM_ID: 数据库
   :END:

   - [[./solution/0100-0199/0175.Combine Two Tables/README.org][组合两个表]]
   - [[./solution/0100-0199/0176.Second Highest Salary/README.org][第二高的薪水]]
   - [[./solution/0100-0199/0177.Nth Highest Salary/README.org][第 N 高的薪水]]
   - [[./solution/0100-0199/0178.Rank Scores/README.org][分数排名]]

* 维护者
  :PROPERTIES:
  :CUSTOM_ID: 维护者
  :END:

  - [[https://github.com/yanglbme][Yang Libin]]
  - [[https://github.com/MaoLongLong][Mao Longlong]]

* 加入我们
  :PROPERTIES:
  :CUSTOM_ID: 加入我们
  :END:
  刷编程题的最大好处就是可以锻炼解决问题的思维能力。相信我，「如何去思考」​本身也是一项需要不断学习和练习的技能。非常感谢
  前微软工程师、现蚂蚁金服技术专家[@kfstorm](https://github.com/kfstorm) 贡献了本项目的所有[[https://github.com/doocs/leetcode/pull/245][C# 题解]]。

  如果你对本项目感兴趣，并且希望加入我们刷题小分队，欢迎随时提交[[https://github.com/doocs/leetcode/pulls][PR]]。请参考如下步骤：

  1. 将本项目 fork 到你的个人 GitHub / Gitee 帐户，然后 clone到你的本地机器；
  2. 对项目做出一些变更，然后使用 git add、commit、push等命令将你的本地变更提交到你的远程 GitHub / Gitee 仓库；
  3. 将你的变更以 PR的形式提交过来，项目的维护人员会在第一时间对你的变更进行 review！
  4. 你也可以参考帮助文档「[[https://help.github.com/cn][GitHub]] / [[https://gitee.com/help][Gitee]]」了解更多细节。

  [[https://www.gitpod.io][Gitpod.io]]是一个免费的在线开发环境，你也可以使用它参与本项目。

* 贡献者
  :PROPERTIES:
  :CUSTOM_ID: 贡献者
  :END:
  非常感谢以下所有朋友对本项目的贡献，你们是最可爱的人！

* 赞助者
  :PROPERTIES:
  :CUSTOM_ID: 赞助者
  :END:
  特别感谢以下个人、组织对本项目的赞助！

  #+begin_quote
  "/You help the developer community practice for interviews, and there
  is nothing better we could ask for./" --
  [[https://opencollective.com/alan-yessenbayev][Alan Yessenbayev]]
  #+end_quote

* 推荐者
  :PROPERTIES:
  :CUSTOM_ID: 推荐者
  :END:
  知名互联网科技博主 [@爱可可-爱生活](https://weibo.com/fly51fly)微博推荐。

* 许可证
  :PROPERTIES:
  :CUSTOM_ID: 许可证
  :END:
  知识共享 版权归属-相同方式共享 4.0 国际 公共许可证
