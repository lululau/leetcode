* [[https://leetcode-cn.com/problems/pile-box-lcci][08.13. Pile Box]]
  :PROPERTIES:
  :CUSTOM_ID: pile-box
  :END:
[[./lcci/08.13.Pile Box/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You have a stack of n boxes, with widths wi, heights hi, and depths di.
The boxes cannot be rotated and can only be stacked on top of one
another if each box in the stack is strictly larger than the box above
it in width, height, and depth. Implement a method to compute the height
of the tallest possible stack. The height of a stack is the sum of the
heights of each box.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The input use [wi, di, hi] to represents each box.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: box = [[1, 1, 1], [2, 2, 2], [3, 3, 3]]

  <strong> Output</strong>: 6

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: box = [[1, 1, 1], [2, 3, 4], [2, 6, 7], [3, 4, 5]]

  <strong> Output</strong>: 10

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

box.length <= 3000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
