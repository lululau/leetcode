* [[https://leetcode-cn.com/problems/rank-from-stream-lcci][面试题
10.10. 数字流的秩]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-10.10.-数字流的秩
  :END:
[[./lcci/10.10.Rank from Stream/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

假设你正在读取一串整数。每隔一段时间，你希望能找出数字 x 的秩(小于或等于
x 的值的个数)。请实现数据结构和算法来支持这些操作，也就是说：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

实现 track(int x) 方法，每读入一个数字都会调用该方法；

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

实现 getRankOfNumber(int x) 方法，返回小于或等于 x 的值的个数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：本题相对原题稍作改动

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong>
  [&quot;StreamRank&quot;, &quot;getRankOfNumber&quot;, &quot;track&quot;, &quot;getRankOfNumber&quot;]
  [[], [1], [0], [0]]
  <strong>输出:
  </strong>[null,0,null,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

x <= 50000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

track 和 getRankOfNumber 方法的调用次数均不超过 2000 次

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
