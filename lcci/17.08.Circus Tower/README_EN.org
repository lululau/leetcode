* [[https://leetcode-cn.com/problems/circus-tower-lcci][17.08. Circus
Tower]]
  :PROPERTIES:
  :CUSTOM_ID: circus-tower
  :END:
[[./lcci/17.08.Circus Tower/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A circus is designing a tower routine consisting of people standing atop
one anoth­er's shoulders. For practical and aesthetic reasons, each
person must be both shorter and lighter than the person below him or
her. Given the heights and weights of each person in the circus, write a
method to compute the largest possible number of people in such a tower.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>height = [65,70,56,75,60,68] weight = [100,150,90,190,95,110]

  <strong>Output: </strong>6

  <strong>Explanation: </strong>The longest tower is length 6 and includes from top to bottom: (56,90), (60,95), (65,100), (68,110), (70,150), (75,190)</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

height.length == weight.length <= 10000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
