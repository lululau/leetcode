* [[https://leetcode-cn.com/problems/zero-matrix-lcci][面试题 01.08.
零矩阵]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-01.08.-零矩阵
  :END:
[[./lcci/01.08.Zero Matrix/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

编写一种算法，若M × N矩阵中某个元素为0，则将其所在的行与列清零。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  [
    [1,1,1],
    [1,0,1],
    [1,1,1]
  ]
  <strong>输出：</strong>
  [
    [1,0,1],
    [0,0,0],
    [1,0,1]
  ]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  [
    [0,1,2,0],
    [3,4,5,2],
    [1,3,1,5]
  ]
  <strong>输出：</strong>
  [
    [0,0,0,0],
    [0,4,5,0],
    [0,3,1,0]
  ]
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

用 set 记录需要清零的行 =zero_rows= 跟列
=zero_cols=，之后分别将需要清零的行、列上的所有元素清零。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def setZeroes(self, matrix: List[List[int]]) -> None:
          """
          Do not return anything, modify matrix in-place instead.
          """
          rows, cols = len(matrix), len(matrix[0])
          zero_rows, zero_cols = set(), set()
          for i in range(rows):
              for j in range(cols):
                  if matrix[i][j] == 0:
                      zero_rows.add(i)
                      zero_cols.add(j)

          # 行清零
          for i in zero_rows:
              for j in range(cols):
                  matrix[i][j] = 0

          # 列清零
          for j in zero_cols:
              for i in range(rows):
                  matrix[i][j] = 0

          return matrix
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public void setZeroes(int[][] matrix) {
          int rows = matrix.length, cols = matrix[0].length;
          Set<Integer> zeroRows = new HashSet<>();
          Set<Integer> zeroCols = new HashSet<>();
          for (int i = 0; i < rows; ++i) {
              for (int j = 0; j < cols; ++j) {
                  if (matrix[i][j] == 0) {
                      zeroRows.add(i);
                      zeroCols.add(j);
                  }
              }
          }

          // 行清零
          for (int row : zeroRows) {
              for (int j = 0; j < cols; ++j) {
                  matrix[row][j] = 0;
              }
          }

          // 列清零
          for (int col : zeroCols) {
              for (int i = 0; i < rows; ++i) {
                  matrix[i][col] = 0;
              }
          }
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[][]} matrix
   * @return {void} Do not return anything, modify matrix in-place instead.
   */
  var setZeroes = function(matrix) {
      let m = matrix.length, n = matrix[0].length;
      let rows = new Array(m).fill(false);
      let cols = new Array(n).fill(false);
      // 标记
      for (let i = 0; i < m; i++) {
          for (let j = 0; j < n; j++) {
              if (matrix[i][j] == 0) {
                  rows[i] = true;
                  cols[j] = true;
              }
          }
      }
      // 清零
      for (let i = 0; i < m; i++) {
          for (let j = 0; j < n; j++) {
              if (matrix[i][j] != 0 && (rows[i] || cols[j])) {
                  matrix[i][j] = 0;
              }
          }
      }
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
