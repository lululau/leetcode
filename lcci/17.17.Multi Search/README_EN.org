* [[https://leetcode-cn.com/problems/multi-search-lcci][17.17. Multi
Search]]
  :PROPERTIES:
  :CUSTOM_ID: multi-search
  :END:
[[./lcci/17.17.Multi Search/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string band an array of smaller strings T, design a method to
search b for each small string in T. Output positions of all strings
in smalls that appear in big, where positions[i] is all positions of
smalls[i].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>

  big = &quot;mississippi&quot;

  smalls = [&quot;is&quot;,&quot;ppi&quot;,&quot;hi&quot;,&quot;sis&quot;,&quot;i&quot;,&quot;ssippi&quot;]

  <strong>Output: </strong> [[1,4],[8],[],[3],[1,4,7,10],[5]]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= len(big) <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= len(smalls[i]) <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The total number of characters in smalls will not exceed 100000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

No duplicated strings in smalls.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All characters are lowercase letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
