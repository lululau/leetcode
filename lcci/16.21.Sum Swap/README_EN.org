* [[https://leetcode-cn.com/problems/sum-swap-lcci][16.21. Sum Swap]]
  :PROPERTIES:
  :CUSTOM_ID: sum-swap
  :END:
[[./lcci/16.21.Sum Swap/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two arrays of integers, find a pair of values (one value from each
array) that you can swap to give the two arrays the same sum.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array, where the first element is the element in the first
array that will be swapped, and the second element is another one in the
second array. If there are more than one answers, return any one of
them. If there is no answer, return an empty array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> array1 = [4, 1, 2, 1, 1, 2], array2 = [3, 6, 3, 3]

  <strong>Output:</strong> [1, 3]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> array1 = <code>[1, 2, 3], array2 = [4, 5, 6]</code>

  <strong>Output: </strong>[]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= array1.length, array2.length <= 100000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def findSwapValues(self, array1: List[int], array2: List[int]) -> List[int]:
          diff = sum(array1) - sum(array2)
          if diff & 1: return []
          diff >>= 1
          s = set(array2)
          for e in array1:
              if (e - diff) in s: return [e, e - diff]
          return []
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int[] findSwapValues(int[] array1, int[] array2) {
          int diff = sum(array1) - sum(array2);
          if ((diff & 1) == 1) {
              return new int[]{};
          }
          diff >>= 1;
          Set<Integer> s = Arrays.stream(array2).boxed().collect(Collectors.toSet());
          for (int e : array1) {
              if (s.contains((e - diff))) {
                  return new int[]{e, e - diff};
              }
          }
          return new int[]{};
      }

      private int sum(int[] array) {
          int res = 0;
          for (int e : array) {
              res += e;
          }
          return res;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
