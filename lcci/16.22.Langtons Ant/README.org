* [[https://leetcode-cn.com/problems/langtons-ant-lcci][面试题 16.22.
兰顿蚂蚁]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-16.22.-兰顿蚂蚁
  :END:
[[./lcci/16.22.Langtons Ant/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

一只蚂蚁坐在由白色和黑色方格构成的无限网格上。开始时，网格全白，蚂蚁面向右侧。每行走一步，蚂蚁执行以下操作。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

1) 如果在白色方格上，则翻转方格的颜色，向右(顺时针)转 90
   度，并向前移动一个单位。
2) 如果在黑色方格上，则翻转方格的颜色，向左(逆时针方向)转 90
   度，并向前移动一个单位。

   #+begin_html
     </p>
   #+end_html

#+begin_html
  <p>
#+end_html

编写程序来模拟蚂蚁执行的前 K 个动作，并返回最终的网格。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

网格由数组表示，每个元素是一个字符串，代表网格中的一行，黑色方格由 'X' 表示，白色方格由 '_' 表示，蚂蚁所在的位置由 'L',
'U', 'R', 'D' 表示，分别表示蚂蚁 左、上、右、下
的朝向。只需要返回能够包含蚂蚁走过的所有方格的最小矩形。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 0
  <strong>输出: </strong>[&quot;R&quot;]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 2
  <strong>输出:
  </strong>[
  &nbsp; &quot;_X&quot;,
  &nbsp; &quot;LX&quot;
  ]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 5
  <strong>输出:
  </strong>[
  &nbsp; &quot;_U&quot;,
  &nbsp; &quot;X_&quot;,
  &nbsp; &quot;XX&quot;
  ]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

K <= 100000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
