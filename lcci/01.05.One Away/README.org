* [[https://leetcode-cn.com/problems/one-away-lcci][面试题 01.05.
一次编辑]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-01.05.-一次编辑
  :END:
[[./lcci/01.05.One Away/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

字符串有三种编辑操作:插入一个字符、删除一个字符或者替换一个字符。
给定两个字符串，编写一个函数判定它们是否只需要一次(或者零次)编辑。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 
  first = &quot;pale&quot;
  second = &quot;ple&quot;
  <strong>输出:</strong> True</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 
  first = &quot;pales&quot;
  second = &quot;pal&quot;
  <strong>输出:</strong> False
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

双指针。

先判断两字符串长度差 =diff= 是否大于 1，若是直接返回 false。

接着开始遍历两字符串。若两个指针 =i=, =j= 所指向的字符 =first[i]= 与
=second[j]= 不相同：

- 若 =diff == 1=，则 =i++=
- 若 =diff == -1=，则 =j++=
- 若 =diff == 0=，则 =i++=, =j++=

同时编辑次数 =op= 减 1。

若两个指针 =i=, =j= 所指向的字符相同，则 =i++=, =j++=。

判断剩余编辑次数是否小于 0，若是，说明不满足一次编辑条件，直接返回
false。

遍历结束，直接返回 true。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def oneEditAway(self, first: str, second: str) -> bool:
          n1, n2 = len(first), len(second)
          diff = n1 - n2
          if abs(diff) > 1:
              return False
          i, j, op = 0, 0, 1
          while i < n1 and j < n2:
              not_same = first[i] != second[j]
              if not_same:
                  if diff == 1:
                      i += 1
                  elif diff == -1:
                      j += 1
                  else:
                      i += 1
                      j += 1
                  op -= 1
              else:
                  i += 1
                  j += 1
              if op < 0:
                  return False
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean oneEditAway(String first, String second) {
          int n1 = first.length(), n2 = second.length();
          int diff = n1 - n2;
          if (Math.abs(diff) > 1) {
              return false;
          }
          int op = 1;
          for (int i = 0, j = 0; i < n1 && j < n2; ++i, ++j) {
              boolean notSame = first.charAt(i) != second.charAt(j);
              if (notSame) {
                  if (diff == 1) {
                      // --j, ++i, ++j => ++i
                      --j;
                  } else if (diff == -1) {
                      // --i, ++i, ++j => ++j
                      --i;
                  }
                  --op;
              }
              if (op < 0) {
                  return false;
              }
          }
          return true;
      }
  }
#+end_src

*** *C++*
    :PROPERTIES:
    :CUSTOM_ID: c
    :END:
#+begin_src cpp
  class Solution {
  public:
      bool oneEditAway(string first, string second) {
          int n1 = first.size(), n2 = second.size();
          int diff = n1 - n2;
          if (abs(diff) > 1) {
              return false;
          }
          int op = 1;
          for (int i = 0, j = 0; i < n1 && j < n2; ++i, ++j) {
              bool notSame = first[i] != second[j];
              if (notSame) {
                  if (diff == 1) {
                      --j;
                  } else if (diff == -1) {
                      --i;
                  }
                  --op;
              }
              if (op < 0) {
                  return false;
              }
          }
          return true;
      }
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
