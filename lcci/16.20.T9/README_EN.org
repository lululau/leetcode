* [[https://leetcode-cn.com/problems/t9-lcci][16.20. T9]]
  :PROPERTIES:
  :CUSTOM_ID: t9
  :END:
[[./lcci/16.20.T9/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

On old cell phones, users typed on a numeric keypad and the phone would
provide a list of words that matched these numbers. Each digit mapped to
a set of 0 - 4 letters. Implement an algo­rithm to return a list of
matching words, given a sequence of digits. You are provided a list of
valid words. The mapping is shown in the diagram below:

#+begin_html
  </p>
#+end_html

[[./images/17_telephone_keypad.png]]

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> num = &quot;8733&quot;, words = [&quot;tree&quot;, &quot;used&quot;]

  <strong>Output:</strong> [&quot;tree&quot;, &quot;used&quot;]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> num = &quot;2&quot;, words = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]

  <strong>Output:</strong> [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

num.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i].length == num.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There are no number 0 and 1 in num.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
