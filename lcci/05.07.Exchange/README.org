* [[https://leetcode-cn.com/problems/exchange-lcci][面试题 05.07.
配对交换]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-05.07.-配对交换
  :END:
[[./lcci/05.07.Exchange/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

配对交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong> 输入</strong>：num = 2（或者0b10）
  <strong> 输出</strong> 1 (或者 0b01)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong> 输入</strong>：num = 3
  <strong> 输出</strong>：3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

num的范围在[0, 2^30 - 1]之间，不会发生整数溢出。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int exchangeBits(int num) {
          int t1 = num >> 1;
          int t2 = num << 1;
          return t1 & 0x55555555 | t2 & 0xaaaaaaaa;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
