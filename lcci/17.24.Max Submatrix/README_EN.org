* [[https://leetcode-cn.com/problems/max-submatrix-lcci][17.24. Max
Submatrix]]
  :PROPERTIES:
  :CUSTOM_ID: max-submatrix
  :END:
[[./lcci/17.24.Max Submatrix/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an NxN matrix of positive and negative integers, write code to
find the submatrix with the largest possible sum.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array [r1, c1, r2, c2], where r1, c1 are the row number and
the column number of the submatrix's upper left corner respectively,
and r2, c2 are the row number of and the column number of lower right
corner. If there are more than one answers, return any one of them.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: This problem is slightly different from the original one in the
book.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:

  </strong><code>[

  &nbsp;  [-1,<strong>0</strong>],

  &nbsp;  [0,-1]

  ]</code>

  <strong>Output: </strong>[0,1,0,1]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= matrix.length, matrix[0].length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
