* [[https://leetcode-cn.com/problems/diving-board-lcci][16.11. Diving
Board]]
  :PROPERTIES:
  :CUSTOM_ID: diving-board
  :END:
[[./lcci/16.11.Diving Board/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are building a diving board by placing a bunch of planks of wood
end-to-end. There are two types of planks, one of length shorter and one
of length longer. You must use exactly K planks of wood. Write a method
to generate all possible lengths for the diving board.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

return all lengths in non-decreasing order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>

  shorter = 1

  longer = 2

  k = 3

  <strong>Output: </strong> {3,4,5,6}

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 < shorter <= longer

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= k <= 100000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
