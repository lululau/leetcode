* [[https://leetcode-cn.com/problems/successor-lcci][面试题 04.06.
后继者]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-04.06.-后继者
  :END:
[[./lcci/04.06.Successor/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

设计一个算法，找出二叉搜索树中指定节点的“下一个”节点（也即中序后继）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果指定节点没有对应的“下一个”节点，则返回null。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> root = <code>[2,1,3], p = 1

    2
   / \
  1   3
  </code>
  <strong>输出:</strong> 2</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> root = <code>[5,3,6,2,4,null,null,1], p = 6

        5
       / \
      3   6
     / \
    2   4
   /   
  1
  </code>
  <strong>输出:</strong> null</pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
