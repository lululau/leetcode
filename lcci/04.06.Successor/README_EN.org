* [[https://leetcode-cn.com/problems/successor-lcci][04.06. Successor]]
  :PROPERTIES:
  :CUSTOM_ID: successor
  :END:
[[./lcci/04.06.Successor/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Write an algorithm to find the "next" node (i.e., in-order successor) of
a given node in a binary search tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return null if there's no "next" node for the given node.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> root = <code>[2,1,3], p = 1



    2

   / \

  1   3

  </code>

  <strong>Output:</strong> 2</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> root = <code>[5,3,6,2,4,null,null,1], p = 6



        5

       / \

      3   6

     / \

    2   4

   /   

  1

  </code>

  <strong>Output:</strong> null</pre>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
