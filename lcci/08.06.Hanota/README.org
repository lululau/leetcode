* [[https://leetcode-cn.com/problems/hanota-lcci][面试题 08.06.
汉诺塔问题]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-08.06.-汉诺塔问题
  :END:
[[./lcci/08.06.Hanota/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在经典汉诺塔问题中，有 3 根柱子及 N
个不同大小的穿孔圆盘，盘子可以滑入任意一根柱子。一开始，所有盘子自上而下按升序依次套在第一根柱子上(即每一个盘子只能放在更大的盘子上面)。移动圆盘时受到以下限制:
(1) 每次只能移动一个盘子; (2) 盘子只能从柱子顶端滑出移到下一根柱子; (3)
盘子只能叠在比它大的盘子上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请编写程序，用栈将所有盘子从第一根柱子移到最后一根柱子。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你需要原地修改栈。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong> 输入</strong>：A = [2, 1, 0], B = [], C = []
  <strong> 输出</strong>：C = [2, 1, 0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong> 输入</strong>：A = [1, 0], B = [], C = []
  <strong> 输出</strong>：C = [1, 0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

A中盘子的数目不大于14个。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
