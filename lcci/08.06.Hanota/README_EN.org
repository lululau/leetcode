* [[https://leetcode-cn.com/problems/hanota-lcci][08.06. Hanota]]
  :PROPERTIES:
  :CUSTOM_ID: hanota
  :END:
[[./lcci/08.06.Hanota/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

In the classic problem of the Towers of Hanoi, you have 3 towers and N
disks of different sizes which can slide onto any tower. The puzzle
starts with disks sorted in ascending order of size from top to bottom
(i.e., each disk sits on top of an even larger one). You have the
following constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

1) Only one disk can be moved at a time.

2) A disk is slid off the top of one tower onto another tower.

3) A disk cannot be placed on top of a smaller disk.

   #+begin_html
     </p>
   #+end_html

#+begin_html
  <p>
#+end_html

Write a program to move the disks from the first tower to the last using
stacks.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: A = [2, 1, 0], B = [], C = []

  <strong> Output</strong>: C = [2, 1, 0]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: A = [1, 0], B = [], C = []

  <strong> Output</strong>: C = [1, 0]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

A.length <= 14

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
