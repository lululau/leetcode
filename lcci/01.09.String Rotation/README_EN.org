* [[https://leetcode-cn.com/problems/string-rotation-lcci][01.09. String
Rotation]]
  :PROPERTIES:
  :CUSTOM_ID: string-rotation
  :END:
[[./lcci/01.09.String Rotation/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two strings, s1 and s2, write code to check if s2 is a rotation of
s1 (e.g.,"waterbottle" is a rotation of"erbottlewat"). Can you use only
one call to the method that checks if one word is a substring of
another?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>s1 = &quot;waterbottle&quot;, s2 = &quot;erbottlewat&quot;

  <strong>Output: </strong>True

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>s1 = &quot;aa&quot;, &quot;aba&quot;

  <strong>Output: </strong>False

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= s1.length, s1.length <= 100000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def isFlipedString(self, s1: str, s2: str) -> bool:
          return len(s1) == len(s2) and s1 in (s2 * 2)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean isFlipedString(String s1, String s2) {
          return s1.length() == s2.length() && (s2 + s2).indexOf(s1) != -1;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
