* [[https://leetcode-cn.com/problems/is-unique-lcci][01.01. Is Unique]]
  :PROPERTIES:
  :CUSTOM_ID: is-unique
  :END:
[[./lcci/01.01.Is Unique/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Implement an algorithm to determine if a string has all unique
characters. What if you cannot use additional data structures?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><code>s</code> = &quot;leetcode&quot;

  <strong>Output: </strong>false

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><code>s</code> = &quot;abc&quot;

  <strong>Output: </strong>true

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= len(s) <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def isUnique(self, astr: str) -> bool:
          bitmap = 0
          for c in astr:
              pos = ord(c) - ord('a')
              if (bitmap & (1 << pos)) != 0:
                  return False
              bitmap |= (1 << pos)
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean isUnique(String astr) {
          int bitmap = 0;
          for (char c : astr.toCharArray()) {
              int pos = c - 'a';
              if ((bitmap & (1 << pos)) != 0) {
                  return false;
              }
              bitmap |= (1 << pos);
          }
          return true;
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {string} astr
   * @return {boolean}
   */
   var isUnique = function(astr) {
      let bitmap = 0;
      for (let i = 0; i < astr.length; ++i) {
          const pos = astr[i].charCodeAt() - 'a'.charCodeAt();
          if ((bitmap & (1 << pos)) != 0) {
              return false;
          }
          bitmap |= (1 << pos);
      }
      return true;
  };
#+end_src

*** *Go*
    :PROPERTIES:
    :CUSTOM_ID: go
    :END:
#+begin_example
  func isUnique(astr string) bool {
      bitmap := 0
      for _, r := range astr {
          pos := r - 'a'
          if (bitmap & (1 << pos)) != 0 {
              return false
          }
          bitmap |= (1 << pos)
      }
      return true
  }
#+end_example

*** *C++*
    :PROPERTIES:
    :CUSTOM_ID: c
    :END:
#+begin_src cpp
  class Solution {
  public:
      bool isUnique(string astr) {
          int bitmap = 0;
          for (char c : astr) {
              int pos = c - 'a';
              if ((bitmap & (1 << pos)) != 0) {
                  return false;
              }
              bitmap |= (1 << pos);
          }
          return true;
      }
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
