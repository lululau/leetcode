* [[https://leetcode-cn.com/problems/sorted-merge-lcci][面试题 10.01.
合并排序的数组]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-10.01.-合并排序的数组
  :END:
[[./lcci/10.01.Sorted Merge/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定两个排序后的数组 A 和 B，其中 A 的末端有足够的缓冲空间容纳 B。
编写一个方法，将 B 合并入 A 并排序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

初始化 A 和 B 的元素数量分别为 m 和 n。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong>
  A = [1,2,3,0,0,0], m = 3
  B = [2,5,6],       n = 3

  <strong>输出:</strong>&nbsp;[1,2,2,3,5,6]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

A.length == n + m

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[]} A
   * @param {number} m
   * @param {number[]} B
   * @param {number} n
   * @return {void} Do not return anything, modify A in-place instead.
   */
  var merge = function(A, m, B, n) {
      let i = m - 1, j = n - 1;
      for (let k = A.length - 1; k >= 0; k--) {
          if (k == i) return;
          if (i < 0 || A[i] <= B[j]) {
              A[k] = B[j];
              j--;
          } else {
              A[k] = A[i];
              i--;
          }
      }
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
