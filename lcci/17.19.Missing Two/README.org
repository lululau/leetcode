* [[https://leetcode-cn.com/problems/missing-two-lcci][面试题 17.19.
消失的两个数字]]
  :PROPERTIES:
  :CUSTOM_ID: 面试题-17.19.-消失的两个数字
  :END:
[[./lcci/17.19.Missing Two/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个数组，包含从 1 到 N 所有的整数，但其中缺了两个数字。你能在 O(N)
时间内只用 O(1) 的空间找到它们吗？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

以任意顺序返回这两个数字均可。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> <code>[1]</code>
  <strong>输出: </strong>[2,3]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> <code>[2,3]</code>
  <strong>输出: </strong>[1,4]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length <= 30000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

异或运算。与[[./lcof/面试题56 - I. 数组中数字出现的次数/README.org][面试题
56 - I. 数组中数字出现的次数]] 类似。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def missingTwo(self, nums: List[int]) -> List[int]:
          res, n = 0, len(nums)
          for i in range(n):
              res ^= nums[i]
              res ^= (i + 1)
          res ^= (n + 1)
          res ^= (n + 2)
          pos = 0
          while (res & 1) == 0:
              pos += 1
              res >>= 1

          a = b = 0
          for num in nums:
              t = num >> pos
              if (t & 1) == 0:
                  a ^= num
              else:
                  b ^= num

          for i in range(1, n + 3):
              t = i >> pos
              if (t & 1) == 0:
                  a ^= i
              else:
                  b ^= i
          return [a, b]
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int[] missingTwo(int[] nums) {
          int res = 0, n = nums.length;
          for (int i = 0; i < n; ++i) {
              res ^= nums[i];
              res ^= (i + 1);
          }
          res ^= (n + 1);
          res ^= (n + 2);

          int pos = 0;
          while ((res & 1) == 0) {
              pos += 1;
              res >>= 1;
          }

          int a = 0, b = 0;
          for (int num : nums) {
              int t = num >> pos;
              if ((t & 1) == 0) {
                  a ^= num;
              } else {
                  b ^= num;
              }
          }
          for (int i = 1; i <= n + 2; ++i) {
              int t = i >> pos;
              if ((t & 1) == 0) {
                  a ^= i;
              } else {
                  b ^= i;
              }
          }
          return new int[]{a, b};
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
