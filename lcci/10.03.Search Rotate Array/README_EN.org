* [[https://leetcode-cn.com/problems/search-rotate-array-lcci][10.03.
Search Rotate Array]]
  :PROPERTIES:
  :CUSTOM_ID: search-rotate-array
  :END:
[[./lcci/10.03.Search Rotate Array/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a sorted array of n integers that has been rotated an unknown
number of times, write code to find an element in the array. You may
assume that the array was originally sorted in increasing order. If
there are more than one target elements in the array, return the
smallest index.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5

  <strong> Output</strong>: 8 (the index of 5 in the array)

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11

  <strong> Output</strong>: -1 (not found)

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr.length <= 1000000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
