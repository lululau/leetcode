* [[https://leetcode-cn.com/problems/closed-number-lcci][05.04. Closed
Number]]
  :PROPERTIES:
  :CUSTOM_ID: closed-number
  :END:
[[./lcci/05.04.Closed Number/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a positive integer, print the next smallest and the next largest
number that have the same number of 1 bits in their binary
representation.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: num = 2 (0b10)

  <strong> Output</strong>: [4, 1] ([0b100, 0b1])

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong> Input</strong>: num = 1

  <strong> Output</strong>: [2, -1]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= num <= 2147483647

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If there is no next smallest or next largest number, output -1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
