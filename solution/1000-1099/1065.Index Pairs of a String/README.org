* [[https://leetcode-cn.com/problems/index-pairs-of-a-string][1065.
字符串的索引对]]
  :PROPERTIES:
  :CUSTOM_ID: 字符串的索引对
  :END:
[[./solution/1000-1099/1065.Index Pairs of a String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给出 字符串 text 和 字符串列表 words, 返回所有的索引对 [i, j]
使得在索引对范围内的子字符串
text[i]...text[j]（包括 i 和 j）属于字符串列表 words。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong>text = &quot;thestoryofleetcodeandme&quot;, words = [&quot;story&quot;,&quot;fleet&quot;,&quot;leetcode&quot;]
  <strong>输出: </strong>[[3,7],[9,13],[10,17]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong>text = &quot;ababa&quot;, words = [&quot;aba&quot;,&quot;ab&quot;]
  <strong>输出: </strong>[[0,1],[0,2],[2,3],[2,4]]
  <strong>解释: 
  </strong>注意，返回的配对可以有交叉，比如，&quot;aba&quot; 既在 [0,2] 中也在 [2,4] 中
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

所有字符串都只包含小写字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

保证 words 中的字符串无重复。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= text.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

按序返回索引对
[i,j]（即，按照索引对的第一个索引进行排序，当第一个索引对相同时按照第二个索引对排序）。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
