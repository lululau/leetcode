* [[https://leetcode.com/problems/index-pairs-of-a-string][1065. Index
Pairs of a String]]
  :PROPERTIES:
  :CUSTOM_ID: index-pairs-of-a-string
  :END:
[[./solution/1000-1099/1065.Index Pairs of a String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a text string and words (a list of strings), return all index
pairs [i, j] so that the substring text[i]...text[j] is in the list of
words.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>text = <span id="example-input-1-1">&quot;thestoryofleetcodeandme&quot;</span>, words = <span id="example-input-1-2">[&quot;story&quot;,&quot;fleet&quot;,&quot;leetcode&quot;]</span>

  <strong>Output: </strong><span id="example-output-1">[[3,7],[9,13],[10,17]]</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>text = <span id="example-input-2-1">&quot;ababa&quot;</span>, words = <span id="example-input-2-2">[&quot;aba&quot;,&quot;ab&quot;]</span>

  <strong>Output: </strong><span id="example-output-2">[[0,1],[0,2],[2,3],[2,4]]</span>

  <strong>Explanation: </strong>

  Notice that matches can overlap, see &quot;aba&quot; is found in [0,2] and [2,4].

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

All strings contains only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It's guaranteed that all strings in words are different.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= text.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Return the pairs [i,j] in sorted order (i.e. sort them by their first
coordinate in case of ties sort them by their second coordinate).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
