* [[https://leetcode-cn.com/problems/construct-binary-search-tree-from-preorder-traversal][1008.
前序遍历构造二叉搜索树]]
  :PROPERTIES:
  :CUSTOM_ID: 前序遍历构造二叉搜索树
  :END:
[[./solution/1000-1099/1008.Construct Binary Search Tree from Preorder Traversal/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

返回与给定前序遍历 preorder 相匹配的二叉搜索树（binary search
tree）的根结点。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

(回想一下，二叉搜索树是二叉树的一种，其每个节点都满足以下规则，对于 node.left 的任何后代，值总
< node.val，而 node.right 的任何后代，值总 >
node.val。此外，前序遍历首先显示节点 node 的值，然后遍历
node.left，接着遍历 node.right。）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

题目保证，对于给定的测试用例，总能找到满足要求的二叉搜索树。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[8,5,1,7,10,12]
  <strong>输出：</strong>[8,5,10,1,7,null,12]
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1000-1099/1008.Construct Binary Search Tree from Preorder Traversal/images/1266.png" style="height: 200px; width: 306px;">
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= preorder.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= preorder[i] <= 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preorder 中的值互不相同

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html

#+begin_html
  <!-- tabs:end -->
#+end_html
