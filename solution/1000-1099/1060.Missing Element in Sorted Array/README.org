* [[https://leetcode-cn.com/problems/missing-element-in-sorted-array][1060.
有序数组中的缺失元素]]
  :PROPERTIES:
  :CUSTOM_ID: 有序数组中的缺失元素
  :END:
[[./solution/1000-1099/1060.Missing Element in Sorted Array/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

现有一个按 升序 排列的整数数组 nums ，其中每个数字都 互不相同 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数 k ，请你找出并返回从数组最左边开始的第 k 个缺失数字。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [4,7,9,10], k = 1
  <strong>输出：</strong>5
  <strong>解释：</strong>第一个缺失数字为 5 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [4,7,9,10], k = 3
  <strong>输出：</strong>8
  <strong>解释：</strong>缺失数字有 [5,6,8,...]，因此第三个缺失数字为 8 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,2,4], k = 3
  <strong>输出：</strong>6
  <strong>解释：</strong>缺失数字有 [3,5,6,7,...]，因此第三个缺失数字为 6 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 107

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums 按 升序 排列，其中所有元素 互不相同 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 108

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

进阶：你可以设计一个对数时间复杂度（即，O(log(n))）的解决方案吗？

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
