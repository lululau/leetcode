* [[https://leetcode.com/problems/two-city-scheduling][1029. Two City
Scheduling]]
  :PROPERTIES:
  :CUSTOM_ID: two-city-scheduling
  :END:
[[./solution/1000-1099/1029.Two City Scheduling/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A company is planning to interview 2n people. Given the array costs
where costs[i] = [aCosti, bCosti], the cost of flying the ith person to
city a is aCosti, and the cost of flying the ith person to city b is
bCosti.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum cost to fly every person to a city such that exactly
n people arrive in each city.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> costs = [[10,20],[30,200],[400,50],[30,20]]
  <strong>Output:</strong> 110
  <strong>Explanation: </strong>
  The first person goes to city A for a cost of 10.
  The second person goes to city A for a cost of 30.
  The third person goes to city B for a cost of 50.
  The fourth person goes to city B for a cost of 20.

  The total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]
  <strong>Output:</strong> 1859
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]
  <strong>Output:</strong> 3086
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 * n == costs.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= costs.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

costs.length is even.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= aCosti, bCosti <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
