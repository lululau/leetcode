* [[https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays][1031.
Maximum Sum of Two Non-Overlapping Subarrays]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-sum-of-two-non-overlapping-subarrays
  :END:
[[./solution/1000-1099/1031.Maximum Sum of Two Non-Overlapping Subarrays/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array A of non-negative integers, return the maximum sum of
elements in two non-overlapping (contiguous) subarrays, which have
lengths L and M.  (For clarification, the L-length subarray could occur
before or after the M-length subarray.)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Formally, return the largest V for which V = (A[i] + A[i+1] + ... +
A[i+L-1]) + (A[j] + A[j+1] + ... + A[j+M-1]) and either:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= i < i + L - 1 < j < j + M - 1 < A.length, or

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= j < j + M - 1 < i < i + L - 1 < A.length.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>A = <span id="example-input-1-1">[0,6,5,2,2,5,1,9,4]</span>, L = <span id="example-input-1-2">1</span>, M = <span id="example-input-1-3">2</span>

  <strong>Output: </strong><span id="example-output-1">20

  <strong>Explanation:</strong> One choice of subarrays is [9] with length 1, and [6,5] with length 2.</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>A = <span id="example-input-2-1">[3,8,1,3,2,1,8,9,0]</span>, L = <span id="example-input-2-2">3</span>, M = <span id="example-input-2-3">2</span>

  <strong>Output: </strong><span id="example-output-2">29

  </span><span id="example-output-1"><strong>Explanation:</strong> One choice of subarrays is</span><span> [3,8,1] with length 3, and [8,9] with length 2.</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>A = <span id="example-input-3-1">[2,1,5,6,0,9,5,0,3,8]</span>, L = <span id="example-input-3-2">4</span>, M = <span id="example-input-3-3">3</span>

  <strong>Output: </strong><span id="example-output-3">31

  </span><span id="example-output-1"><strong>Explanation:</strong> One choice of subarrays is</span><span> [5,6,0,9] with length 4, and [3,8] with length 3.</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

L >= 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

M >= 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

L + M <= A.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
