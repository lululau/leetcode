* [[https://leetcode.com/problems/number-of-submatrices-that-sum-to-target][1074.
Number of Submatrices That Sum to Target]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-submatrices-that-sum-to-target
  :END:
[[./solution/1000-1099/1074.Number of Submatrices That Sum to Target/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a matrix and a target, return the number of non-empty submatrices
that sum to target.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A submatrix x1, y1, x2, y2 is the set of all cells matrix[x][y] with x1
<= x <= x2 and y1 <= y <= y2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two submatrices (x1, y1, x2, y2) and (x1', y1', x2', y2') are different
if they have some coordinate that is different: for example, if x1 !=
x1'.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> The four 1x1 submatrices that only contain 0.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[1,-1],[-1,1]], target = 0
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[904]], target = 0
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= matrix.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= matrix[0].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-1000 <= matrix[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^8 <= target <= 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
