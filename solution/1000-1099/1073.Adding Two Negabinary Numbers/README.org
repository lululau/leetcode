* [[https://leetcode-cn.com/problems/adding-two-negabinary-numbers][1073.
负二进制数相加]]
  :PROPERTIES:
  :CUSTOM_ID: 负二进制数相加
  :END:
[[./solution/1000-1099/1073.Adding Two Negabinary Numbers/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给出基数为 -2 的两个数 arr1 和 arr2，返回两数相加的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

数字以 数组形式 给出：数组由若干 0 和 1
组成，按最高有效位到最低有效位的顺序排列。例如，arr =
[1,1,0,1] 表示数字 (-2)^3 + (-2)^2 + (-2)^0 =
-3。数组形式 的数字也同样不含前导零：以 arr 为例，这意味着要么 arr ==
[0]，要么 arr[0] == 1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回相同表示形式的 arr1 和 arr2
相加的结果。两数的表示形式为：不含前导零、由若干 0 和 1 组成的数组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr1 = [1,1,1,1,1], arr2 = [1,0,1]
  <strong>输出：</strong>[1,0,0,0,0]
  <strong>解释：</strong>arr1 表示 11，arr2 表示 5，输出表示 16 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr1.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr2.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr1 和 arr2 都不含前导零

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr1[i] 为 0 或 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr2[i] 为 0 或 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
