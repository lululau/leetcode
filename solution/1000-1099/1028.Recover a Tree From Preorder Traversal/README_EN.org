* [[https://leetcode.com/problems/recover-a-tree-from-preorder-traversal][1028.
Recover a Tree From Preorder Traversal]]
  :PROPERTIES:
  :CUSTOM_ID: recover-a-tree-from-preorder-traversal
  :END:
[[./solution/1000-1099/1028.Recover a Tree From Preorder Traversal/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We run a preorder depth-first search (DFS) on the root of a binary tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

At each node in this traversal, we output D dashes (where D is the depth
of this node), then we output the value of this node.  If the depth of a
node is D, the depth of its immediate child is D + 1.  The depth of the
root node is 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

If a node has only one child, that child is guaranteed to be the left
child.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given the output S of this traversal, recover the tree and return its
root.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> S = &quot;1-2--3--4-5--6--7&quot;
  <strong>Output:</strong> [1,2,5,3,4,6,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> S = &quot;1-2--3---4-5--6---7&quot;
  <strong>Output:</strong> [1,2,5,3,null,6,null,4,null,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> S = &quot;1-401--349---90--88&quot;
  <strong>Output:</strong> [1,401,null,349,88,90]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the original tree is in the range [1, 1000].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= Node.val <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
