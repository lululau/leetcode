* [[https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times][1050.
Actors and Directors Who Cooperated At Least Three Times]]
  :PROPERTIES:
  :CUSTOM_ID: actors-and-directors-who-cooperated-at-least-three-times
  :END:
[[./solution/1000-1099/1050.Actors and Directors Who Cooperated At Least Three Times/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Table: ActorDirector

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  +-------------+---------+

  | Column Name | Type    |

  +-------------+---------+

  | actor_id    | int     |

  | director_id | int     |

  | timestamp   | int     |

  +-------------+---------+

  timestamp is the primary key column for this table.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Write a SQL query for a report that provides the pairs (actor_id,
director_id) where the actor have cooperated with the director at least
3 times.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  ActorDirector table:

  +-------------+-------------+-------------+

  | actor_id    | director_id | timestamp   |

  +-------------+-------------+-------------+

  | 1           | 1           | 0           |

  | 1           | 1           | 1           |

  | 1           | 1           | 2           |

  | 1           | 2           | 3           |

  | 1           | 2           | 4           |

  | 2           | 1           | 5           |

  | 2           | 1           | 6           |

  +-------------+-------------+-------------+



  Result table:

  +-------------+-------------+

  | actor_id    | director_id |

  +-------------+-------------+

  | 1           | 1           |

  +-------------+-------------+

  The only pair is (1, 1) where they cooperated exactly 3 times.

  </pre>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:
Use =GROUP BY= & =HAVING=.

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *SQL*
    :PROPERTIES:
    :CUSTOM_ID: sql
    :END:
#+begin_src sql
  # Write your MySQL query statement below
  SELECT
      actor_id, director_id
  FROM
      ActorDirector
  GROUP BY actor_id, director_id
  HAVING count(1) >= 3;
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
