* [[https://leetcode.com/problems/grid-illumination][1001. Grid
Illumination]]
  :PROPERTIES:
  :CUSTOM_ID: grid-illumination
  :END:
[[./solution/1000-1099/1001.Grid Illumination/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is a 2D grid of size N x N where each cell of this grid has a lamp
that is initially turned off.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given a 2D array of lamp positions lamps, where lamps[i] =
[rowi, coli] indicates that the lamp at grid[rowi][coli] is turned on.
Even if the same lamp is listed more than once, it is turned on.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

When a lamp is turned on, it illuminates its cell and all other cells in
the same row, column, or diagonal.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are also given another 2D array queries, where queries[j] = [rowj,
colj]. For the jth query, determine whether grid[rowj][colj] is
illuminated or not. After answering the jth query, turn off the lamp at
grid[rowj][colj] and its 8 adjacent lamps if they exist. A lamp is
adjacent if its cell shares either a side or corner with
grid[rowj][colj].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array of integers ans, where ans[j] should be 1 if the cell in
the jth query was illuminated, or 0 if the lamp was not.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]
  <strong>Output:</strong> [1,0]
  <strong>Explanation:</strong> We have the initial grid with all lamps turned off. In the above picture we see the grid after turning on the lamp at grid[0][0] then turning on the lamp at grid[4][4].
  The 0<sup>th</sup>&nbsp;query asks if the lamp at grid[1][1] is illuminated or not (the blue square). It is illuminated, so set ans[0] = 1. Then, we turn off all lamps in the red square.
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1000-1099/1001.Grid Illumination/images/illu_step1.jpg" style="width: 500px; height: 218px;" />
  The 1<sup>st</sup>&nbsp;query asks if the lamp at grid[1][0] is illuminated or not (the blue square). It is not illuminated, so set ans[1] = 0. Then, we turn off all lamps in the red rectangle.
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1000-1099/1001.Grid Illumination/images/illu_step2.jpg" style="width: 500px; height: 219px;" />
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,1]]
  <strong>Output:</strong> [1,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> N = 5, lamps = [[0,0],[0,4]], queries = [[0,4],[0,1],[1,4]]
  <strong>Output:</strong> [1,1,0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= N <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= lamps.length <= 20000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= queries.length <= 20000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

lamps[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= rowi, coli < N

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

queries[j].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= rowj, colj < N

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html

#+begin_html
  <!-- tabs:end -->
#+end_html
