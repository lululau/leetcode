* [[https://leetcode.com/problems/coloring-a-border][1034. Coloring A
Border]]
  :PROPERTIES:
  :CUSTOM_ID: coloring-a-border
  :END:
[[./solution/1000-1099/1034.Coloring A Border/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a 2-dimensional grid of integers, each value in the grid
represents the color of the grid square at that location.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two squares belong to the same connected component if and only if they
have the same color and are next to each other in any of the 4
directions.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The border of a connected component is all the squares in the connected
component that are either 4-directionally adjacent to a square not in
the component, or on the boundary of the grid (the first or last row or
column).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a square at location (r0, c0) in the grid and a color, color
the border of the connected component of that square with the given
color, and return the final grid.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>grid = <span id="example-input-1-1">[[1,1],[1,2]]</span>, r0 = <span id="example-input-1-2">0</span>, c0 = <span id="example-input-1-3">0</span>, color = <span id="example-input-1-4">3</span>

  <strong>Output: </strong><span id="example-output-1">[[3, 3], [3, 2]]</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>grid = <span id="example-input-2-1">[[1,2,2],[2,3,2]]</span>, r0 = <span id="example-input-2-2">0</span>, c0 = <span id="example-input-2-3">1</span>, color = <span id="example-input-2-4">3</span>

  <strong>Output: </strong><span id="example-output-2">[[1, 3, 3], [2, 3, 3]]</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>grid = <span id="example-input-3-1">[[1,1,1],[1,1,1],[1,1,1]]</span>, r0 = <span id="example-input-3-2">1</span>, c0 = <span id="example-input-3-3">1</span>, color = <span id="example-input-3-4">2</span>

  <strong>Output: </strong><span id="example-output-3">[[2, 2, 2], [2, 1, 2], [2, 2, 2]]</span></pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid.length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid[0].length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid[i][j] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= r0 < grid.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= c0 < grid[0].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= color <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
