* [[https://leetcode-cn.com/problems/flower-planting-with-no-adjacent][1042.
不邻接植花]]
  :PROPERTIES:
  :CUSTOM_ID: 不邻接植花
  :END:
[[./solution/1000-1099/1042.Flower Planting With No Adjacent/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有 n 个花园，按从 1 到 n 标记。另有数组 paths ，其中 paths[i] = [xi,
yi] 描述了花园 xi 到花园 yi
的双向路径。在每个花园中，你打算种下四种花之一。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

另外，所有花园 最多 有 3 条路径可以进入或离开.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你需要为每个花园选择一种花，使得通过路径相连的任何两个花园中的花的种类互不相同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

以数组形式返回 任一
可行的方案作为答案 answer，其中 answer[i] 为在第 (i+1) 个花园中种植的花的种类。花的种类用
 1、2、3、4 表示。保证存在答案。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 3, paths = [[1,2],[2,3],[3,1]]
  <strong>输出：</strong>[1,2,3]
  <strong>解释：</strong>
  花园 1 和 2 花的种类不同。
  花园 2 和 3 花的种类不同。
  花园 3 和 1 花的种类不同。
  因此，[1,2,3] 是一个满足题意的答案。其他满足题意的答案有 [1,2,4]、[1,4,2] 和 [3,2,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 4, paths = [[1,2],[3,4]]
  <strong>输出：</strong>[1,2,1,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]
  <strong>输出：</strong>[1,2,3,4]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= paths.length <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

paths[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= xi, yi <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

xi != yi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每个花园 最多 有 3 条路径可以进入或离开

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
