* [[https://leetcode-cn.com/problems/escape-a-large-maze][1036.
逃离大迷宫]]
  :PROPERTIES:
  :CUSTOM_ID: 逃离大迷宫
  :END:
[[./solution/1000-1099/1036.Escape a Large Maze/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在一个 106 x 106 的网格中，每个网格上方格的坐标为 (x, y) 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在从源方格 source = [sx, sy] 开始出发，意图赶往目标方格 target = [tx,
ty] 。数组 blocked 是封锁的方格列表，其中每个 blocked[i] = [xi, yi]
表示坐标为 (xi, yi) 的方格是禁止通行的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每次移动，都可以走到网格中在四个方向上相邻的方格，只要该方格 不
在给出的封锁列表 blocked 上。同时，不允许走出网格。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

只有在可以通过一系列的移动从源方格 source 到达目标方格 target
时才返回 true。否则，返回 false。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]
  <strong>输出：</strong>false
  <strong>解释：</strong>
  从源方格无法到达目标方格，因为我们无法在网格中移动。
  无法向北或者向东移动是因为方格禁止通行。
  无法向南或者向西移动是因为不能走出网格。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>blocked = [], source = [0,0], target = [999999,999999]
  <strong>输出：</strong>true
  <strong>解释：</strong>
  因为没有方格被封锁，所以一定可以到达目标方格。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= blocked.length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

blocked[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= xi, yi < 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

source.length == target.length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= sx, sy, tx, ty < 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

source != target

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

题目数据保证 source 和 target 不在封锁列表内

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
