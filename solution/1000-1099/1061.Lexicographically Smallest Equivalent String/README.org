* [[https://leetcode-cn.com/problems/lexicographically-smallest-equivalent-string][1061.
按字典序排列最小的等效字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 按字典序排列最小的等效字符串
  :END:
[[./solution/1000-1099/1061.Lexicographically Smallest Equivalent String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给出长度相同的两个字符串：A 和 B，其中 A[i] 和 B[i]
是一组等价字符。举个例子，如果 A = "abc" 且 B = "cde"，那么就有 'a' ==
'c', 'b' == 'd', 'c' == 'e'。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

等价字符遵循任何等价关系的一般规则：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

自反性：'a' == 'a'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

对称性：'a' == 'b' 则必定有 'b' == 'a'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

传递性：'a' == 'b' 且 'b' == 'c' 就表明 'a' == 'c'

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

例如，A 和 B 的等价信息和之前的例子一样，那么 S = "eed",
"acd" 或 "aab"，这三个字符串都是等价的，而 "aab" 是
S 的按字典序最小的等价字符串

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

利用 A 和 B 的等价信息，找出并返回 S 的按字典序排列最小的等价字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>A = &quot;parker&quot;, B = &quot;morris&quot;, S = &quot;parser&quot;
  <strong>输出：</strong>&quot;makkek&quot;
  <strong>解释：</strong>根据 <code>A</code> 和 <code>B 中的等价信息，</code>我们可以将这些字符分为 <code>[m,p]</code>, <code>[a,o]</code>, <code>[k,r,s]</code>, <code>[e,i] 共 4 组</code>。每组中的字符都是等价的，并按字典序排列。所以答案是 <code>&quot;makkek&quot;</code>。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>A = &quot;hello&quot;, B = &quot;world&quot;, S = &quot;hold&quot;
  <strong>输出：</strong>&quot;hdld&quot;
  <strong>解释：</strong>根据 <code>A</code> 和 <code>B 中的等价信息，</code>我们可以将这些字符分为 <code>[h,w]</code>, <code>[d,e,o]</code>, <code>[l,r] 共 3 组</code>。所以只有 S 中的第二个字符 <code>&#39;o&#39;</code> 变成 <code>&#39;d&#39;，最后答案为<span style=""> </span></code><code>&quot;hdld&quot;</code>。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>A = &quot;leetcode&quot;, B = &quot;programs&quot;, S = &quot;sourcecode&quot;
  <strong>输出：</strong>&quot;aauaaaaada&quot;
  <strong>解释：</strong>我们可以把 A 和 B 中的等价字符分为 <code>[a,o,e,r,s,c]</code>, <code>[l,p]</code>, <code>[g,t]</code> 和 <code>[d,m] 共 4 组</code>，因此 <code>S</code> 中除了 <code>&#39;u&#39;</code> 和 <code>&#39;d&#39;</code> 之外的所有字母都转化成了 <code>&#39;a&#39;</code>，最后答案为 <code>&quot;aauaaaaada&quot;</code>。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

字符串 A，B 和 S 仅有从 'a' 到 'z' 的小写英文字母组成。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

字符串 A，B 和 S 的长度在 1 到 1000 之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

字符串 A 和 B 长度相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
