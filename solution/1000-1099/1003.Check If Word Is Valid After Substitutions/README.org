* [[https://leetcode-cn.com/problems/check-if-word-is-valid-after-substitutions][1003.
检查替换后的词是否有效]]
  :PROPERTIES:
  :CUSTOM_ID: 检查替换后的词是否有效
  :END:
[[./solution/1000-1099/1003.Check If Word Is Valid After Substitutions/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

给你一个字符串 s ，请你判断它是否 有效 。

#+begin_html
  <p>
#+end_html

字符串 s 有效 需要满足：假设开始有一个空字符串 t = ““ ，你可以执行
任意次 下述操作将 t 转换为 s ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

将字符串 "abc" 插入到 t 中的任意位置。形式上，t 变为 tleft + "abc" +
tright，其中 t == tleft + tright 。注意，tleft 和 tright 可能为 空 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

如果字符串 s 有效，则返回 true；否则，返回 false。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "aabcbc"
  <strong>输出：</strong>true
  <strong>解释：</strong>
  "" -> "<strong>abc</strong>" -> "a<strong>abc</strong>bc"
  因此，"aabcbc" 有效。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "abcabcababcc"
  <strong>输出：</strong>true
  <strong>解释：</strong>
  "" -> "<strong>abc</strong>" -> "abc<strong>abc</strong>" -> "abcabc<strong>abc</strong>" -> "abcabcab<strong>abc</strong>c"
  因此，"abcabcababcc" 有效。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "abccba"
  <strong>输出：</strong>false
  <strong>解释：</strong>执行操作无法得到 "abccba" 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "cababc"
  <strong>输出：</strong>false
  <strong>解释：</strong>执行操作无法得到 "cababc" 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 由字母 'a'、'b' 和 'c' 组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html

#+begin_html
  <!-- tabs:end -->
#+end_html
