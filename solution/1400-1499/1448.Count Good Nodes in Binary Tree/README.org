* [[https://leetcode-cn.com/problems/count-good-nodes-in-binary-tree][1448.
统计二叉树中好节点的数目]]
  :PROPERTIES:
  :CUSTOM_ID: 统计二叉树中好节点的数目
  :END:
[[./solution/1400-1499/1448.Count Good Nodes in Binary Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一棵根为 root 的二叉树，请你返回二叉树中好节点的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

「好节点」X 定义为：从根到该节点 X 所经过的节点中，没有任何节点的值大于
X 的值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>root = [3,1,4,3,null,1,5]
  <strong>输出：</strong>4
  <strong>解释：</strong>图中蓝色节点为好节点。
  根节点 (3) 永远是个好节点。
  节点 4 -&gt; (3,4) 是路径中的最大值。
  节点 5 -&gt; (3,4,5) 是路径中的最大值。
  节点 3 -&gt; (3,1,3) 是路径中的最大值。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>root = [3,3,null,4,2]
  <strong>输出：</strong>3
  <strong>解释：</strong>节点 2 -&gt; (3, 3, 2) 不是好节点，因为 &quot;3&quot; 比它大。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>root = [1]
  <strong>输出：</strong>1
  <strong>解释：</strong>根节点是好节点。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

二叉树中节点数目范围是 [1, 10^5] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每个节点权值的范围是 [-10^4, 10^4] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
