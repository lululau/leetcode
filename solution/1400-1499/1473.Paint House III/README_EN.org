* [[https://leetcode.com/problems/paint-house-iii][1473. Paint House
III]]
  :PROPERTIES:
  :CUSTOM_ID: paint-house-iii
  :END:
[[./solution/1400-1499/1473.Paint House III/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is a row of m houses in a small city, each house must be painted
with one of the n colors (labeled from 1 to n), some houses that have
been painted last summer should not be painted again.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A neighborhood is a maximal group of continuous houses that are painted
with the same color.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

For example: houses = [1,2,2,3,3,2,1,1] contains 5 neighborhoods [{1},
{2,2}, {3,3}, {2}, {1,1}].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Given an array houses, an m x n matrix cost and an integer target where:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

houses[i]: is the color of the house i, and 0 if the house is not
painted yet.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cost[i][j]: is the cost of paint the house i with the color j + 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum cost of painting all the remaining houses in such a
way that there are exactly target neighborhoods. If it is not possible,
return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3
  <strong>Output:</strong> 9
  <strong>Explanation:</strong> Paint houses of this way [1,2,2,1,1]
  This array contains target = 3 neighborhoods, [{1}, {2,2}, {1,1}].
  Cost of paint all houses (1 + 1 + 1 + 1 + 5) = 9.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3
  <strong>Output:</strong> 11
  <strong>Explanation:</strong> Some houses are already painted, Paint the houses of this way [2,2,1,2,2]
  This array contains target = 3 neighborhoods, [{2,2}, {1}, {2,2}]. 
  Cost of paint the first and last house (10 + 1) = 11.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> houses = [0,0,0,0,0], cost = [[1,10],[10,1],[1,10],[10,1],[1,10]], m = 5, n = 2, target = 5
  <strong>Output:</strong> 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3
  <strong>Output:</strong> -1
  <strong>Explanation:</strong> Houses are already painted with a total of 4 neighborhoods [{3},{1},{2},{3}] different of target = 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == houses.length == cost.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == cost[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target <= m

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= houses[i] <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= cost[i][j] <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
