* [[https://leetcode.com/problems/clone-n-ary-tree][1490. Clone N-ary
Tree]]
  :PROPERTIES:
  :CUSTOM_ID: clone-n-ary-tree
  :END:
[[./solution/1400-1499/1490.Clone N-ary Tree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a root of an N-ary tree, return a deep copy (clone) of the tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Each node in the n-ary tree contains a val (int) and a list (List[Node])
of its children.

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  class Node {
      public int val;
      public List&lt;Node&gt; children;
  }
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Nary-Tree input serialization is represented in their level order
traversal, each group of children is separated by the null value (See
examples).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow up: Can your solution work for the graph problem?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,null,3,2,4,null,5,6]
  <strong>Output:</strong> [1,null,3,2,4,null,5,6]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]
  <strong>Output:</strong> [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The depth of the n-ary tree is less than or equal to 1000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The total number of nodes is between [0, 10^4].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
