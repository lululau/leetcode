* [[https://leetcode-cn.com/problems/max-value-of-equation][1499.
满足不等式的最大值]]
  :PROPERTIES:
  :CUSTOM_ID: 满足不等式的最大值
  :END:
[[./solution/1400-1499/1499.Max Value of Equation/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 points 和一个整数 k
。数组中每个元素都表示二维平面上的点的坐标，并按照横坐标 x
的值从小到大排序。也就是说 points[i] = [xi, yi] ，并且在 1 <= i < j <=
points.length 的前提下， xi < xj 总成立。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你找出 yi + yj + |xi - xj| 的 最大值，其中 |xi - xj| <= k 且 1 <= i <
j <= points.length。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

题目测试数据保证至少存在一对能够满足 |xi - xj| <= k 的点。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>points = [[1,3],[2,0],[5,10],[6,-10]], k = 1
  <strong>输出：</strong>4
  <strong>解释：</strong>前两个点满足 |x<sub>i</sub>&nbsp;- x<sub>j</sub>| &lt;= 1 ，代入方程计算，则得到值 3 + 0 + |1 - 2| = 4 。第三个和第四个点也满足条件，得到值 10 + -10 + |5 - 6| = 1 。
  没有其他满足条件的点，所以返回 4 和 1 中最大的那个。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>points = [[0,0],[3,0],[9,2]], k = 3
  <strong>输出：</strong>3
  <strong>解释：</strong>只有前两个点满足 |x<sub>i</sub>&nbsp;- x<sub>j</sub>| &lt;= 3 ，代入方程后得到值 0 + 0 + |0 - 3| = 3 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= points.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

points[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^8 <= points[i][0], points[i][1] <= 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= k <= 2 * 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

对于所有的1 <= i < j <= points.length ，points[i][0] < points[j][0]
都成立。也就是说，xi 是严格递增的。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
