* [[https://leetcode-cn.com/problems/perform-string-shifts][1427.
字符串的左右移]]
  :PROPERTIES:
  :CUSTOM_ID: 字符串的左右移
  :END:
[[./solution/1400-1499/1427.Perform String Shifts/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个包含小写英文字母的字符串 s 以及一个矩阵 shift，其中 shift[i] =
[direction, amount]：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

direction 可以为 0 （表示左移）或 1 （表示右移）。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

amount 表示 s 左右移的位数。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

左移 1 位表示移除 s 的第一个字符，并将该字符插入到 s 的结尾。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

类似地，右移 1 位表示移除 s 的最后一个字符，并将该字符插入到 s 的开头。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

对这个字符串进行所有操作后，返回最终结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = &quot;abc&quot;, shift = [[0,1],[1,2]]
  <strong>输出：</strong>&quot;cab&quot;
  <strong>解释：</strong>
  [0,1] 表示左移 1 位。 &quot;abc&quot; -&gt; &quot;bca&quot;
  [1,2] 表示右移 2 位。 &quot;bca&quot; -&gt; &quot;cab&quot;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = &quot;abcdefg&quot;, shift = [[1,1],[1,1],[0,2],[1,3]]
  <strong>输出：</strong>&quot;efgabcd&quot;
  <strong>解释：</strong> 
  [1,1] 表示右移 1 位。 &quot;abcdefg&quot; -&gt; &quot;gabcdef&quot;
  [1,1] 表示右移 1 位。 &quot;gabcdef&quot; -&gt; &quot;fgabcde&quot;
  [0,2] 表示左移 2 位。 &quot;fgabcde&quot; -&gt; &quot;abcdefg&quot;
  [1,3] 表示右移 3 位。 &quot;abcdefg&quot; -&gt; &quot;efgabcd&quot;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 只包含小写英文字母

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= shift.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

shift[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= shift[i][0] <= 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= shift[i][1] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
