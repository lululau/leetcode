* [[https://leetcode-cn.com/problems/average-salary-excluding-the-minimum-and-maximum-salary][1491.
去掉最低工资和最高工资后的工资平均值]]
  :PROPERTIES:
  :CUSTOM_ID: 去掉最低工资和最高工资后的工资平均值
  :END:
[[./solution/1400-1499/1491.Average Salary Excluding the Minimum and Maximum Salary/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 salary ，数组里每个数都是 唯一 的，其中 salary[i]
是第 i 个员工的工资。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回去掉最低工资和最高工资以后，剩下员工工资的平均值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>salary = [4000,3000,1000,2000]
  <strong>输出：</strong>2500.00000
  <strong>解释：</strong>最低工资和最高工资分别是 1000 和 4000 。
  去掉最低工资和最高工资以后的平均工资是 (2000+3000)/2= 2500
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>salary = [1000,2000,3000]
  <strong>输出：</strong>2000.00000
  <strong>解释：</strong>最低工资和最高工资分别是 1000 和 3000 。
  去掉最低工资和最高工资以后的平均工资是 (2000)/1= 2000
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>salary = [6000,5000,4000,3000,2000,1000]
  <strong>输出：</strong>3500.00000
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>salary = [8000,9000,2000,3000,6000,1000]
  <strong>输出：</strong>4750.00000
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= salary.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

10^3 <= salary[i] <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

salary[i] 是唯一的。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

与真实值误差在 10^-5 以内的结果都将视为正确答案。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
