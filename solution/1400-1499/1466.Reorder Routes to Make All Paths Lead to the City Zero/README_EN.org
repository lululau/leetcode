* [[https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero][1466.
Reorder Routes to Make All Paths Lead to the City Zero]]
  :PROPERTIES:
  :CUSTOM_ID: reorder-routes-to-make-all-paths-lead-to-the-city-zero
  :END:
[[./solution/1400-1499/1466.Reorder Routes to Make All Paths Lead to the City Zero/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are n cities numbered from 0 to n-1 and n-1 roads such that there
is only one way to travel between two different cities (this network
form a tree). Last year, The ministry of transport decided to orient the
roads in one direction because they are too narrow.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Roads are represented by connections where connections[i] = [a,
b] represents a road from city a to b.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

This year, there will be a big event in the capital (city 0), and many
people want to travel to this city.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Your task consists of reorienting some roads such that each city can
visit the city 0. Return the minimum number of edges changed.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It's guaranteed that each city can reach the city 0 after reorder.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 6, connections = [[0,1],[1,3],[2,3],[4,0],[4,5]]
  <strong>Output:</strong> 3
  <strong>Explanation: </strong>Change the direction of edges show in red such that each node can reach the node 0 (capital).</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, connections = [[1,0],[1,2],[3,2],[3,4]]
  <strong>Output:</strong> 2
  <strong>Explanation: </strong>Change the direction of edges show in red such that each node can reach the node 0 (capital).</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 3, connections = [[1,0],[2,0]]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 5 * 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

connections.length == n-1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

connections[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= connections[i][0], connections[i][1] <= n-1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

connections[i][0] != connections[i][1]

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
