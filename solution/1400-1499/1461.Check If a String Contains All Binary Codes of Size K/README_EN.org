* [[https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k][1461.
Check If a String Contains All Binary Codes of Size K]]
  :PROPERTIES:
  :CUSTOM_ID: check-if-a-string-contains-all-binary-codes-of-size-k
  :END:
[[./solution/1400-1499/1461.Check If a String Contains All Binary Codes of Size K/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a binary string s and an integer k.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if every binary code of length k is a substring of s.
Otherwise, return false.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;00110110&quot;, k = 2
  <strong>Output:</strong> true
  <strong>Explanation:</strong> The binary codes of length 2 are &quot;00&quot;, &quot;01&quot;, &quot;10&quot; and &quot;11&quot;. They can be all found as substrings at indicies 0, 1, 3 and 2 respectively.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;00110&quot;, k = 2
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0110&quot;, k = 1
  <strong>Output:</strong> true
  <strong>Explanation:</strong> The binary codes of length 1 are &quot;0&quot; and &quot;1&quot;, it is clear that both exist as a substring. 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0110&quot;, k = 2
  <strong>Output:</strong> false
  <strong>Explanation:</strong> The binary code &quot;00&quot; is of length 2 and doesn&#39;t exist in the array.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0000000001011100&quot;, k = 4
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 5 * 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s[i] is either '0' or '1'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def hasAllCodes(self, s: str, k: int) -> bool:
          counter = 1 << k
          exists = set()
          for i in range(k, len(s) + 1):
              if s[i - k: i] not in exists:
                  exists.add(s[i - k: i])
                  counter -= 1
              if counter == 0:
                  return True
          return False
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean hasAllCodes(String s, int k) {
          int counter = 1 << k;
          Set<String> exists = new HashSet<>();
          for (int i = k; i <= s.length(); ++i) {
              String t = s.substring(i - k, i);
              if (!exists.contains(t)) {
                  exists.add(t);
                  --counter;
              }
              if (counter == 0) {
                  return true;
              }
          }
          return false;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
