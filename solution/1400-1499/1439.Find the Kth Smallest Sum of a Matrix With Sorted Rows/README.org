* [[https://leetcode-cn.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows][1439.
有序矩阵中的第 k 个最小数组和]]
  :PROPERTIES:
  :CUSTOM_ID: 有序矩阵中的第-k-个最小数组和
  :END:
[[./solution/1400-1499/1439.Find the Kth Smallest Sum of a Matrix With Sorted Rows/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个 m * n 的矩阵 mat，以及一个整数 k
，矩阵中的每一行都以非递减的顺序排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以从每一行中选出 1 个元素形成一个数组。返回所有可能数组中的第 k 个
最小 数组和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[1,3,11],[2,4,6]], k = 5
  <strong>输出：</strong>7
  <strong>解释：</strong>从每一行中选出一个元素，前 k 个和最小的数组分别是：
  [1,2], [1,4], [3,2], [3,4], [1,6]。其中第 5 个的和是 7 。  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[1,3,11],[2,4,6]], k = 9
  <strong>输出：</strong>17
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7
  <strong>输出：</strong>9
  <strong>解释：</strong>从每一行中选出一个元素，前 k 个和最小的数组分别是：
  [1,1,2], [1,1,3], [1,4,2], [1,4,3], [1,1,6], [1,5,2], [1,5,3]。其中第 7 个的和是 9 。 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[1,1,10],[2,2,9]], k = 7
  <strong>输出：</strong>12
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == mat.length[i]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 40

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= min(200, n ^ m)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= mat[i][j] <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i] 是一个非递减数组

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
