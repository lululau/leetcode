* [[https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows][1439.
Find the Kth Smallest Sum of a Matrix With Sorted Rows]]
  :PROPERTIES:
  :CUSTOM_ID: find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows
  :END:
[[./solution/1400-1499/1439.Find the Kth Smallest Sum of a Matrix With Sorted Rows/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an m * n matrix, mat, and an integer k, which has its rows
sorted in non-decreasing order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are allowed to choose exactly 1 element from each row to form an
array. Return the Kth smallest array sum among all possible arrays.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,3,11],[2,4,6]], k = 5
  <strong>Output:</strong> 7
  <strong>Explanation: </strong>Choosing one element from each row, the first k smallest sum are:
  [1,2], [1,4], [3,2], [3,4], [1,6]. Where the 5th sum is 7.  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,3,11],[2,4,6]], k = 9
  <strong>Output:</strong> 17
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7
  <strong>Output:</strong> 9
  <strong>Explanation:</strong> Choosing one element from each row, the first k smallest sum are:
  [1,1,2], [1,1,3], [1,4,2], [1,4,3], [1,1,6], [1,5,2], [1,5,3]. Where the 7th sum is 9.  
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,1,10],[2,2,9]], k = 7
  <strong>Output:</strong> 12
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == mat.length[i]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 40

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= min(200, n ^ m)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= mat[i][j] <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i] is a non decreasing array.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
