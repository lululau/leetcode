* [[https://leetcode-cn.com/problems/form-largest-integer-with-digits-that-add-up-to-target][1449.
数位成本和为目标值的最大数字]]
  :PROPERTIES:
  :CUSTOM_ID: 数位成本和为目标值的最大数字
  :END:
[[./solution/1400-1499/1449.Form Largest Integer With Digits That Add up to Target/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 cost 和一个整数 target 。请你返回满足如下规则可以得到的 最大 整数：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

给当前结果添加一个数位（i + 1）的成本为 cost[i] （cost 数组下标从 0
开始）。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

总成本必须恰好等于 target 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

添加的数位中没有数字 0 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

由于答案可能会很大，请你以字符串形式返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果按照上述要求无法得到任何整数，请你返回 "0" 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cost = [4,3,2,5,6,7,2,5,5], target = 9
  <strong>输出：</strong>"7772"
  <strong>解释：</strong>添加数位 '7' 的成本为 2 ，添加数位 '2' 的成本为 3 。所以 "7772" 的代价为 2*3+ 3*1 = 9 。 "977" 也是满足要求的数字，但 "7772" 是较大的数字。
  <strong> 数字     成本</strong>
    1  ->   4
    2  ->   3
    3  ->   2
    4  ->   5
    5  ->   6
    6  ->   7
    7  ->   2
    8  ->   5
    9  ->   5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cost = [7,6,5,5,5,6,8,7,8], target = 12
  <strong>输出：</strong>"85"
  <strong>解释：</strong>添加数位 '8' 的成本是 7 ，添加数位 '5' 的成本是 5 。"85" 的成本为 7 + 5 = 12 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cost = [2,4,6,2,4,6,4,4,4], target = 5
  <strong>输出：</strong>"0"
  <strong>解释：</strong>总成本是 target 的条件下，无法生成任何整数。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cost = [6,10,15,40,40,40,40,40,40], target = 47
  <strong>输出：</strong>"32211"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

cost.length == 9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= cost[i] <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
