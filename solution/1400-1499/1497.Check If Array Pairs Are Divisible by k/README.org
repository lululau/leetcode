* [[https://leetcode-cn.com/problems/check-if-array-pairs-are-divisible-by-k][1497.
检查数组对是否可以被 k 整除]]
  :PROPERTIES:
  :CUSTOM_ID: 检查数组对是否可以被-k-整除
  :END:
[[./solution/1400-1499/1497.Check If Array Pairs Are Divisible by k/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 arr 和一个整数 k ，其中数组长度是偶数，值为 n 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在需要把数组恰好分成 n / 2 对，以使每对数字的和都能够被 k 整除。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果存在这样的分法，请返回 True ；否则，返回 False 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,2,3,4,5,10,6,7,8,9], k = 5
  <strong>输出：</strong>true
  <strong>解释：</strong>划分后的数字对为 (1,9),(2,8),(3,7),(4,6) 以及 (5,10) 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,2,3,4,5,6], k = 7
  <strong>输出：</strong>true
  <strong>解释：</strong>划分后的数字对为 (1,6),(2,5) 以及 (3,4) 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,2,3,4,5,6], k = 10
  <strong>输出：</strong>false
  <strong>解释：</strong>无法在将数组中的数字分为三对的同时满足每对数字和能够被 10 整除的条件。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [-10,10], k = 2
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [-1,1,-2,2,-3,3,-4,4], k = 3
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

arr.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n 为偶数

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^9 <= arr[i] <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def isPathCrossing(self, path: str) -> bool:
          x = y = 0
          visited = set()
          visited.add('0.0')
          for c in path:
              if c == 'N':
                  y += 1
              elif c == 'S':
                  y -= 1
              elif c == 'E':
                  x += 1
              else:
                  x -= 1
              pos = f'{x}.{y}'
              if pos in visited:
                  return True
              visited.add(pos)
          return False
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean isPathCrossing(String path) {
          Set<String> visited = new HashSet<>();
          visited.add("0.0");
          int x = 0, y = 0;
          for (int i = 0; i < path.length(); ++i) {
              char c = path.charAt(i);
              if (c == 'N') {
                  ++y;
              } else if (c == 'S') {
                  --y;
              } else if (c == 'E') {
                  ++x;
              } else {
                  --x;
              }
              String pos = x + "." + y;
              if (visited.contains(pos)) {
                  return true;
              }
              visited.add(pos);
          }
          return false;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
