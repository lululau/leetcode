* [[https://leetcode-cn.com/problems/longest-happy-string][1405.
最长快乐字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 最长快乐字符串
  :END:
[[./solution/1400-1499/1405.Longest Happy String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

如果字符串中不含有任何 'aaa'，'bbb' 或 'ccc'
这样的字符串作为子串，那么该字符串就是一个「快乐字符串」。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你三个整数 a，b ，c，请你返回 任意一个 满足下列全部条件的字符串 s：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

s 是一个尽可能长的快乐字符串。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 中 最多 有a 个字母 'a'、b 个字母 'b'、c 个字母 'c' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 中只含有 'a'、'b' 、'c' 三种字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

如果不存在这样的字符串 s ，请返回一个空字符串 ""。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>a = 1, b = 1, c = 7
  <strong>输出：</strong>&quot;ccaccbcc&quot;
  <strong>解释：</strong>&quot;ccbccacc&quot; 也是一种正确答案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>a = 2, b = 2, c = 1
  <strong>输出：</strong>&quot;aabbc&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>a = 7, b = 1, c = 0
  <strong>输出：</strong>&quot;aabaa&quot;
  <strong>解释：</strong>这是该测试用例的唯一正确答案。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= a, b, c <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

a + b + c > 0

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
