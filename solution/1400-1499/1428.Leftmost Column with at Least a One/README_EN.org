* [[https://leetcode.com/problems/leftmost-column-with-at-least-a-one][1428.
Leftmost Column with at Least a One]]
  :PROPERTIES:
  :CUSTOM_ID: leftmost-column-with-at-least-a-one
  :END:
[[./solution/1400-1499/1428.Leftmost Column with at Least a One/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

(This problem is an interactive problem.)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A row-sorted binary matrix means that all elements are 0 or 1 and each
row of the matrix is sorted in non-decreasing order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a row-sorted binary matrix binaryMatrix, return the index
(0-indexed) of the leftmost column with a 1 in it. If such an index does
not exist, return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can't access the Binary Matrix directly. You may only access the
matrix using a BinaryMatrix interface:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

BinaryMatrix.get(row, col) returns the element of the matrix at index
(row, col) (0-indexed).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

BinaryMatrix.dimensions() returns the dimensions of the matrix as a list
of 2 elements [rows, cols], which means the matrix is rows x cols.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Submissions making more than 1000 calls to BinaryMatrix.get will be
judged Wrong Answer. Also, any solutions that attempt to circumvent the
judge will result in disqualification.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For custom testing purposes, the input will be the entire binary matrix
mat. You will not have access to the binary matrix directly.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[0,0],[1,1]]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[0,0],[0,1]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[0,0],[0,0]]
  <strong>Output:</strong> -1</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[0,0,0,1],[0,0,1,1],[0,1,1,1]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

rows == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cols == mat[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rows, cols <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i][j] is either 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i] is sorted in non-decreasing order.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
