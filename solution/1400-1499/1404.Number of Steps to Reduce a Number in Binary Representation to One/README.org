* [[https://leetcode-cn.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one][1404.
将二进制表示减到 1 的步骤数]]
  :PROPERTIES:
  :CUSTOM_ID: 将二进制表示减到-1-的步骤数
  :END:
[[./solution/1400-1499/1404.Number of Steps to Reduce a Number in Binary Representation to One/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个以二进制形式表示的数字 s 。请你返回按下述规则将其减少到 1
所需要的步骤数：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

#+begin_html
  <p>
#+end_html

如果当前数字为偶数，则将其除以 2 。

#+begin_html
  </p>
#+end_html

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

#+begin_html
  <p>
#+end_html

如果当前数字为奇数，则将其加上 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

题目保证你总是可以按上述规则将测试用例变为 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;1101&quot;
  <strong>输出：</strong>6
  <strong>解释：</strong>&quot;1101&quot; 表示十进制数 13 。
  Step 1) 13 是奇数，加 1 得到 14&nbsp;
  Step 2) 14 是偶数，除 2 得到 7
  Step 3) 7  是奇数，加 1 得到 8
  Step 4) 8  是偶数，除 2 得到 4&nbsp; 
  Step 5) 4  是偶数，除 2 得到 2&nbsp;
  Step 6) 2  是偶数，除 2 得到 1&nbsp; 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;10&quot;
  <strong>输出：</strong>1
  <strong>解释：</strong>&quot;10&quot; 表示十进制数 2 。
  Step 1) 2 是偶数，除 2 得到 1 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;1&quot;
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 由字符 '0' 或 '1' 组成。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s[0] == '1'

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
