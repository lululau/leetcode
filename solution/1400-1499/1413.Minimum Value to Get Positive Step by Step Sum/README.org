* [[https://leetcode-cn.com/problems/minimum-value-to-get-positive-step-by-step-sum][1413.
逐步求和得到正数的最小值]]
  :PROPERTIES:
  :CUSTOM_ID: 逐步求和得到正数的最小值
  :END:
[[./solution/1400-1499/1413.Minimum Value to Get Positive Step by Step Sum/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 。你可以选定任意的 正数 startValue 作为初始值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你需要从左到右遍历 nums 数组，并将 startValue
依次累加上 nums 数组中的值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你在确保累加和始终大于等于 1 的前提下，选出一个最小的 正数 作为
startValue 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [-3,2,-3,4,2]
  <strong>输出：</strong>5
  <strong>解释：</strong>如果你选择 startValue = 4，在第三次累加时，和小于 1 。
  <strong>                累加求和
  &nbsp;               startValue = 4 | startValue = 5 | nums
  </strong>&nbsp;                 (4 <strong>-3</strong> ) = 1  | (5 <strong>-3</strong> ) = 2    |  -3
  &nbsp;                 (1 <strong>+2</strong> ) = 3  | (2 <strong>+2</strong> ) = 4    |   2
  &nbsp;                 (3 <strong>-3</strong> ) = 0  | (4 <strong>-3</strong> ) = 1    |  -3
  &nbsp;                 (0 <strong>+4</strong> ) = 4  | (1 <strong>+4</strong> ) = 5    |   4
  &nbsp;                 (4 <strong>+2</strong> ) = 6  | (5 <strong>+2</strong> ) = 7    |   2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,2]
  <strong>输出：</strong>1
  <strong>解释：</strong>最小的 startValue 需要是正数。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,-2,-3]
  <strong>输出：</strong>5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-100 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
