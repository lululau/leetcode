* [[https://leetcode-cn.com/problems/circle-and-rectangle-overlapping][1401.
圆和矩形是否有重叠]]
  :PROPERTIES:
  :CUSTOM_ID: 圆和矩形是否有重叠
  :END:
[[./solution/1400-1499/1401.Circle and Rectangle Overlapping/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个以 (radius, x_center, y_center) 表示的圆和一个与坐标轴平行的矩形
(x1, y1, x2, y2)，其中 (x1, y1) 是矩形左下角的坐标，(x2, y2)
是右上角的坐标。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果圆和矩形有重叠的部分，请你返回 True ，否则返回 False 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

换句话说，请你检测是否 存在 点 (xi, yi)
，它既在圆上也在矩形上（两者都包括点落在边界上的情况）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>radius = 1, x_center = 0, y_center = 0, x1 = 1, y1 = -1, x2 = 3, y2 = 1
  <strong>输出：</strong>true
  <strong>解释：</strong>圆和矩形有公共点 (1,0) 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>radius = 1, x_center = 0, y_center = 0, x1 = -1, y1 = 0, x2 = 0, y2 = 1
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>radius = 1, x_center = 1, y_center = 1, x1 = -3, y1 = -3, x2 = 3, y2 = 3
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>radius = 1, x_center = 1, y_center = 1, x1 = 1, y1 = -3, x2 = 2, y2 = -1
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= radius <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^4 <= x_center, y_center, x1, y1, x2, y2 <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

x1 < x2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

y1 < y2

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
