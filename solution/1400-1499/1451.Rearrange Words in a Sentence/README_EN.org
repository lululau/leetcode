* [[https://leetcode.com/problems/rearrange-words-in-a-sentence][1451.
Rearrange Words in a Sentence]]
  :PROPERTIES:
  :CUSTOM_ID: rearrange-words-in-a-sentence
  :END:
[[./solution/1400-1499/1451.Rearrange Words in a Sentence/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a sentence text (A sentence is a string of space-separated words)
in the following format:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

First letter is in upper case.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Each word in text are separated by a single space.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Your task is to rearrange the words in text such that all words are
rearranged in an increasing order of their lengths. If two words have
the same length, arrange them in their original order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the new text following the format shown above.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> text = &quot;Leetcode is cool&quot;
  <strong>Output:</strong> &quot;Is cool leetcode&quot;
  <strong>Explanation: </strong>There are 3 words, &quot;Leetcode&quot; of length 8, &quot;is&quot; of length 2 and &quot;cool&quot; of length 4.
  Output is ordered by length and the new first word starts with capital letter.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> text = &quot;Keep calm and code on&quot;
  <strong>Output:</strong> &quot;On and keep calm code&quot;
  <strong>Explanation: </strong>Output is ordered as follows:
  &quot;On&quot; 2 letters.
  &quot;and&quot; 3 letters.
  &quot;keep&quot; 4 letters in case of tie order by position in original text.
  &quot;calm&quot; 4 letters.
  &quot;code&quot; 4 letters.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> text = &quot;To be or not to be&quot;
  <strong>Output:</strong> &quot;To be or to be not&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

text begins with a capital letter and then contains lowercase letters
and single space between words.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= text.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
