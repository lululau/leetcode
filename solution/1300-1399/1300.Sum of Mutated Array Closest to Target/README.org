* [[https://leetcode-cn.com/problems/sum-of-mutated-array-closest-to-target][1300.
转变数组后最接近目标值的数组和]]
  :PROPERTIES:
  :CUSTOM_ID: 转变数组后最接近目标值的数组和
  :END:
[[./solution/1300-1399/1300.Sum of Mutated Array Closest to Target/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 arr 和一个目标值 target
，请你返回一个整数 value ，使得将数组中所有大于 value 的值变成 value
后，数组的和最接近  target （最接近表示两者之差的绝对值最小）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果有多种使得和最接近 target 的方案，请你返回这些整数中的最小值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请注意，答案不一定是 arr 中的数字。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [4,9,3], target = 10
  <strong>输出：</strong>3
  <strong>解释：</strong>当选择 value 为 3 时，数组会变成 [3, 3, 3]，和为 9 ，这是最接近 target 的方案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [2,3,5], target = 10
  <strong>输出：</strong>5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [60864,25176,27249,21296,20204], target = 56803
  <strong>输出：</strong>11361
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr.length <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i], target <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
