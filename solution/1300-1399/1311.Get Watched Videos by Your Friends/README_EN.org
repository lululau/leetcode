* [[https://leetcode.com/problems/get-watched-videos-by-your-friends][1311.
Get Watched Videos by Your Friends]]
  :PROPERTIES:
  :CUSTOM_ID: get-watched-videos-by-your-friends
  :END:
[[./solution/1300-1399/1311.Get Watched Videos by Your Friends/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are n people, each person has a unique id between 0 and n-1. Given
the arrays watchedVideos and friends, where watchedVideos[i] and
friends[i] contain the list of watched videos and the list of friends
respectively for the person with id = i.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Level 1 of videos are all watched videos by your friends, level 2 of
videos are all watched videos by the friends of your friends and so on.
In general, the level k of videos are all watched videos by people with
the shortest path exactly equal to k with you. Given your id and the
level of videos, return the list of videos ordered by their frequencies
(increasing). For videos with the same frequency order them
alphabetically from least to greatest. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> watchedVideos = [[&quot;A&quot;,&quot;B&quot;],[&quot;C&quot;],[&quot;B&quot;,&quot;C&quot;],[&quot;D&quot;]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 1
  <strong>Output:</strong> [&quot;B&quot;,&quot;C&quot;] 
  <strong>Explanation:</strong> 
  You have id = 0 (green color in the figure) and your friends are (yellow color in the figure):
  Person with id = 1 -&gt; watchedVideos = [&quot;C&quot;]&nbsp;
  Person with id = 2 -&gt; watchedVideos = [&quot;B&quot;,&quot;C&quot;]&nbsp;
  The frequencies of watchedVideos by your friends are:&nbsp;
  B -&gt; 1&nbsp;
  C -&gt; 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> watchedVideos = [[&quot;A&quot;,&quot;B&quot;],[&quot;C&quot;],[&quot;B&quot;,&quot;C&quot;],[&quot;D&quot;]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 2
  <strong>Output:</strong> [&quot;D&quot;]
  <strong>Explanation:</strong> 
  You have id = 0 (green color in the figure) and the only friend of your friends is the person with id = 3 (yellow color in the figure).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == watchedVideos.length == friends.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= watchedVideos[i].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= watchedVideos[i][j].length <= 8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= friends[i].length < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= friends[i][j] < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= id < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= level < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

if friends[i] contains j, then friends[j] contains i

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
