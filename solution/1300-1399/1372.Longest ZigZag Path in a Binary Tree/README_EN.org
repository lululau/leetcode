* [[https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree][1372.
Longest ZigZag Path in a Binary Tree]]
  :PROPERTIES:
  :CUSTOM_ID: longest-zigzag-path-in-a-binary-tree
  :END:
[[./solution/1300-1399/1372.Longest ZigZag Path in a Binary Tree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given the root of a binary tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A ZigZag path for a binary tree is defined as follow:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Choose any node in the binary tree and a direction (right or left).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If the current direction is right, move to the right child of the
current node; otherwise, move to the left child.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Change the direction from right to left or from left to right.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Repeat the second and third steps until you can't move in the tree.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Zigzag length is defined as the number of nodes visited - 1. (A single
node has a length of 0).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the longest ZigZag path contained in that tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,null,1,1,1,null,null,1,1,null,1,null,null,null,1,null,1]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> Longest ZigZag path in blue nodes (right -&gt; left -&gt; right).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,1,1,null,1,null,null,1,1,null,1]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> Longest ZigZag path in blue nodes (left -&gt; right -&gt; left -&gt; right).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the tree is in the range [1, 5 * 104].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= Node.val <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
