* [[https://leetcode-cn.com/problems/balance-a-binary-search-tree][1382.
将二叉搜索树变平衡]]
  :PROPERTIES:
  :CUSTOM_ID: 将二叉搜索树变平衡
  :END:
[[./solution/1300-1399/1382.Balance a Binary Search Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一棵二叉搜索树，请你返回一棵 平衡后 的二叉搜索树，新生成的树应该与原来的树有着相同的节点值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果一棵二叉搜索树中，每个节点的两棵子树高度差不超过 1
，我们就称这棵二叉搜索树是 平衡的 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果有多种构造方法，请你返回任意一种。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>root = [1,null,2,null,3,null,4,null,null]
  <strong>输出：</strong>[2,1,3,null,null,null,4]
  <strong>解释：</strong>这不是唯一的正确答案，[3,1,4,null,2,null,null] 也是一个可行的构造方案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

树节点的数目在 1 到 10^4 之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

树节点的值互不相同，且在 1 到 10^5 之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
