* [[https://leetcode-cn.com/problems/sort-integers-by-the-power-value][1387.
将整数按权重排序]]
  :PROPERTIES:
  :CUSTOM_ID: 将整数按权重排序
  :END:
[[./solution/1300-1399/1387.Sort Integers by The Power Value/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

我们将整数 x 的 权重 定义为按照下述规则将 x 变成 1 所需要的步数：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x 是偶数，那么 x = x / 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x 是奇数，那么 x = 3 * x + 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

比方说，x=3 的权重为 7 。因为 3 需要 7 步变成 1 （3 --> 10 --> 5 --> 16
--> 8 --> 4 --> 2 --> 1）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你三个整数 lo， hi 和 k 。你的任务是将区间 [lo,
hi] 之间的整数按照它们的权重 升序排序 ，如果大于等于 2
个整数有 相同 的权重，那么按照数字自身的数值 升序排序 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回区间 [lo, hi] 之间的整数按权重排序后的第 k 个数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，题目保证对于任意整数 x （lo <= x <= hi） ，它变成 1
所需要的步数是一个 32 位有符号整数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>lo = 12, hi = 15, k = 2
  <strong>输出：</strong>13
  <strong>解释：</strong>12 的权重为 9（12 --&gt; 6 --&gt; 3 --&gt; 10 --&gt; 5 --&gt; 16 --&gt; 8 --&gt; 4 --&gt; 2 --&gt; 1）
  13 的权重为 9
  14 的权重为 17
  15 的权重为 17
  区间内的数按权重排序以后的结果为 [12,13,14,15] 。对于 k = 2 ，答案是第二个整数也就是 13 。
  注意，12 和 13 有相同的权重，所以我们按照它们本身升序排序。14 和 15 同理。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>lo = 1, hi = 1, k = 1
  <strong>输出：</strong>1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>lo = 7, hi = 11, k = 4
  <strong>输出：</strong>7
  <strong>解释：</strong>区间内整数 [7, 8, 9, 10, 11] 对应的权重为 [16, 3, 19, 6, 14] 。
  按权重排序后得到的结果为 [8, 10, 11, 7, 9] 。
  排序后数组中第 4 个数字为 7 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>lo = 10, hi = 20, k = 5
  <strong>输出：</strong>13
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>lo = 1, hi = 1000, k = 777
  <strong>输出：</strong>570
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= lo <= hi <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= hi - lo + 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
