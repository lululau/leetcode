* [[https://leetcode-cn.com/problems/bulb-switcher-iii][1375. 灯泡开关
III]]
  :PROPERTIES:
  :CUSTOM_ID: 灯泡开关-iii
  :END:
[[./solution/1300-1399/1375.Bulb Switcher III/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

房间中有 n 枚灯泡，编号从 1 到
n，自左向右排成一排。最初，所有的灯都是关着的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在 k  时刻（ k 的取值范围是 0 到 n - 1），我们打开 light[k] 这个灯。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

灯的颜色要想 变成蓝色 就必须同时满足下面两个条件：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

灯处于打开状态。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

排在它之前（左侧）的所有灯也都处于打开状态。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请返回能够让 所有开着的 灯都 变成蓝色 的时刻 数目 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>light = [2,1,3,5,4]
  <strong>输出：</strong>3
  <strong>解释：</strong>所有开着的灯都变蓝的时刻分别是 1，2 和 4 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>light = [3,2,4,1,5]
  <strong>输出：</strong>2
  <strong>解释：</strong>所有开着的灯都变蓝的时刻分别是 3 和 4（index-0）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>light = [4,1,2,3]
  <strong>输出：</strong>1
  <strong>解释：</strong>所有开着的灯都变蓝的时刻是 3（index-0）。
  第 4 个灯在时刻 3 变蓝。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>light = [2,1,4,3,6,5]
  <strong>输出：</strong>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>light = [1,2,3,4,5,6]
  <strong>输出：</strong>6
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == light.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 5 * 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

light 是 [1, 2, ..., n] 的一个排列。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
