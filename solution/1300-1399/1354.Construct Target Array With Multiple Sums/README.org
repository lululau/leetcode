* [[https://leetcode-cn.com/problems/construct-target-array-with-multiple-sums][1354.
多次求和构造目标数组]]
  :PROPERTIES:
  :CUSTOM_ID: 多次求和构造目标数组
  :END:
[[./solution/1300-1399/1354.Construct Target Array With Multiple Sums/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 target 。一开始，你有一个数组 A ，它的所有元素均为 1
，你可以执行以下操作：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

令 x 为你数组里所有元素的和

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

选择满足 0 <= i <
target.size 的任意下标 i ，并让 A 数组里下标为 i 处的值为 x 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

你可以重复该过程任意次

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

如果能从 A 开始构造出目标数组 target ，请你返回 True ，否则返回 False 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>target = [9,3,5]
  <strong>输出：</strong>true
  <strong>解释：</strong>从 [1, 1, 1] 开始
  [1, 1, 1], 和为 3 ，选择下标 1
  [1, 3, 1], 和为 5， 选择下标 2
  [1, 3, 5], 和为 9， 选择下标 0
  [9, 3, 5] 完成
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>target = [1,1,1,2]
  <strong>输出：</strong>false
  <strong>解释：</strong>不可能从 [1,1,1,1] 出发构造目标数组。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>target = [8,5]
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

N == target.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target.length <= 5 * 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target[i] <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
