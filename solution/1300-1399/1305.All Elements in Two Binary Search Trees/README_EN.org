* [[https://leetcode.com/problems/all-elements-in-two-binary-search-trees][1305.
All Elements in Two Binary Search Trees]]
  :PROPERTIES:
  :CUSTOM_ID: all-elements-in-two-binary-search-trees
  :END:
[[./solution/1300-1399/1305.All Elements in Two Binary Search Trees/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two binary search trees root1 and root2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return a list containing all the integers from both trees sorted in
ascending order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [2,1,4], root2 = [1,0,3]
  <strong>Output:</strong> [0,1,1,2,3,4]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [0,-10,10], root2 = [5,1,7,0,2]
  <strong>Output:</strong> [-10,0,0,1,2,5,7,10]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [], root2 = [5,1,7,0,2]
  <strong>Output:</strong> [0,1,2,5,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [0,-10,10], root2 = []
  <strong>Output:</strong> [-10,0,10]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [1,null,8], root2 = [8,1]
  <strong>Output:</strong> [1,1,8,8]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Each tree has at most 5000 nodes.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Each node's value is between [-10^5, 10^5].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
