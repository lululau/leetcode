* [[https://leetcode.com/problems/tweet-counts-per-frequency][1348.
Tweet Counts Per Frequency]]
  :PROPERTIES:
  :CUSTOM_ID: tweet-counts-per-frequency
  :END:
[[./solution/1300-1399/1348.Tweet Counts Per Frequency/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A social media company is trying to monitor activity on their site by
analyzing the number of tweets that occur in select periods of time.
These periods can be partitioned into smaller time chunks based on a
certain frequency (every minute, hour, or day).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, the period [10, 10000] (in seconds) would be partitioned
into the following time chunks with these frequencies:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Every minute (60-second chunks): [10,69], [70,129], [130,189], ...,
[9970,10000]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Every hour (3600-second chunks): [10,3609], [3610,7209], [7210,10000]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Every day (86400-second chunks): [10,10000]

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Notice that the last chunk may be shorter than the specified frequency's
chunk size and will always end with the end time of the period (10000 in
the above example).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Design and implement an API to help the company with their analysis.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Implement the TweetCounts class:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

TweetCounts() Initializes the TweetCounts object.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

void recordTweet(String tweetName, int time) Stores the tweetName at the
recorded time (in seconds).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

List<Integer> getTweetCountsPerFrequency(String freq, String tweetName,
int startTime, int endTime) Returns a list of integers representing the
number of tweets with tweetName in each time chunk for the given period
of time [startTime, endTime] (in seconds) and frequency freq.

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

freq is one of "minute", "hour", or "day" representing a frequency of
every minute, hour, or day respectively.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_example
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input</strong>
  [&quot;TweetCounts&quot;,&quot;recordTweet&quot;,&quot;recordTweet&quot;,&quot;recordTweet&quot;,&quot;getTweetCountsPerFrequency&quot;,&quot;getTweetCountsPerFrequency&quot;,&quot;recordTweet&quot;,&quot;getTweetCountsPerFrequency&quot;]
  [[],[&quot;tweet3&quot;,0],[&quot;tweet3&quot;,60],[&quot;tweet3&quot;,10],[&quot;minute&quot;,&quot;tweet3&quot;,0,59],[&quot;minute&quot;,&quot;tweet3&quot;,0,60],[&quot;tweet3&quot;,120],[&quot;hour&quot;,&quot;tweet3&quot;,0,210]]

  <strong>Output</strong>
  [null,null,null,null,[2],[2,1],null,[4]]

  <strong>Explanation</strong>
  TweetCounts tweetCounts = new TweetCounts();
  tweetCounts.recordTweet(&quot;tweet3&quot;, 0);                              // New tweet &quot;tweet3&quot; at time 0
  tweetCounts.recordTweet(&quot;tweet3&quot;, 60);                             // New tweet &quot;tweet3&quot; at time 60
  tweetCounts.recordTweet(&quot;tweet3&quot;, 10);                             // New tweet &quot;tweet3&quot; at time 10
  tweetCounts.getTweetCountsPerFrequency(&quot;minute&quot;, &quot;tweet3&quot;, 0, 59); // return [2]; chunk [0,59] had 2 tweets
  tweetCounts.getTweetCountsPerFrequency(&quot;minute&quot;, &quot;tweet3&quot;, 0, 60); // return [2,1]; chunk [0,59] had 2 tweets, chunk [60,60] had 1 tweet
  tweetCounts.recordTweet(&quot;tweet3&quot;, 120);                            // New tweet &quot;tweet3&quot; at time 120
  tweetCounts.getTweetCountsPerFrequency(&quot;hour&quot;, &quot;tweet3&quot;, 0, 210);  // return [4]; chunk [0,210] had 4 tweets
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= time, startTime, endTime <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= endTime - startTime <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There will be at most 104 calls in total to recordTweet and
getTweetCountsPerFrequency.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
