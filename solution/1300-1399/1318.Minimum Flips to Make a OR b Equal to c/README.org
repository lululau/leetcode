* [[https://leetcode-cn.com/problems/minimum-flips-to-make-a-or-b-equal-to-c][1318.
或运算的最小翻转次数]]
  :PROPERTIES:
  :CUSTOM_ID: 或运算的最小翻转次数
  :END:
[[./solution/1300-1399/1318.Minimum Flips to Make a OR b Equal to c/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你三个正整数 a、b 和 c。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以对 a 和 b 的二进制表示进行位翻转操作，返回能够使按位或运算   a OR
b == c  成立的最小翻转次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

「位翻转操作」是指将一个数的二进制表示任何单个位上的 1 变成 0 或者 0
变成 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>a = 2, b = 6, c = 5
  <strong>输出：</strong>3
  <strong>解释：</strong>翻转后 a = 1 , b = 4 , c = 5 使得 <code>a</code> OR <code>b</code> == <code>c</code></pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>a = 4, b = 2, c = 7
  <strong>输出：</strong>1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>a = 1, b = 2, c = 3
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= a <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= b <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= c <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
