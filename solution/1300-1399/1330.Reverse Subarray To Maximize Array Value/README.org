* [[https://leetcode-cn.com/problems/reverse-subarray-to-maximize-array-value][1330.
翻转子数组得到最大的数组值]]
  :PROPERTIES:
  :CUSTOM_ID: 翻转子数组得到最大的数组值
  :END:
[[./solution/1300-1399/1330.Reverse Subarray To Maximize Array Value/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 。「数组值」定义为所有满足 0 <= i <
nums.length-1 的 |nums[i]-nums[i+1]| 的和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以选择给定数组的任意子数组，并将该子数组翻转。但你只能执行这个操作 一次
。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你找到可行的最大 数组值 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [2,3,1,5,4]
  <strong>输出：</strong>10
  <strong>解释：</strong>通过翻转子数组 [3,1,5] ，数组变成 [2,5,1,3,4] ，数组值为 10 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [2,4,9,24,2,1,10]
  <strong>输出：</strong>68
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 3*10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^5 <= nums[i] <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
