* [[https://leetcode-cn.com/problems/how-many-numbers-are-smaller-than-the-current-number][1365.
有多少小于当前数字的数字]]
  :PROPERTIES:
  :CUSTOM_ID: 有多少小于当前数字的数字
  :END:
[[./solution/1300-1399/1365.How Many Numbers Are Smaller Than the Current Number/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 nums，对于其中每个元素 nums[i]，请你统计数组中比它小的所有数字的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

换而言之，对于每个 nums[i] 你必须计算出有效的 j 的数量，其中 j 满足 j !=
i 且 nums[j] < nums[i] 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

以数组形式返回答案。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [8,1,2,2,3]
  <strong>输出：</strong>[4,0,1,1,3]
  <strong>解释：</strong> 
  对于 nums[0]=8 存在四个比它小的数字：（1，2，2 和 3）。 
  对于 nums[1]=1 不存在比它小的数字。
  对于 nums[2]=2 存在一个比它小的数字：（1）。 
  对于 nums[3]=2 存在一个比它小的数字：（1）。 
  对于 nums[4]=3 存在三个比它小的数字：（1，2 和 2）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [6,5,4,8]
  <strong>输出：</strong>[2,1,0,3]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [7,7,7,7]
  <strong>输出：</strong>[0,0,0,0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= nums.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

计数排序，求前缀和。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
          cnt = [0] * 101
          for num in nums:
              cnt[num] += 1
          for i in range(1, 101):
              cnt[i] += cnt[i - 1]
          res = []
          for num in nums:
              res.append(0 if num == 0 else cnt[num - 1])
          return res
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int[] smallerNumbersThanCurrent(int[] nums) {
          int[] cnt = new int[101];
          for (int e : nums) {
              ++cnt[e];
          }
          for (int i = 1; i < 101; ++i) {
              cnt[i] += cnt[i - 1];
          }
          int[] res = new int[nums.length];
          for (int i = 0; i < nums.length; ++i) {
              res[i] = nums[i] == 0 ? 0 : cnt[nums[i] - 1];
          }
          return res;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
