* [[https://leetcode-cn.com/problems/rank-transform-of-an-array][1331.
数组序号转换]]
  :PROPERTIES:
  :CUSTOM_ID: 数组序号转换
  :END:
[[./solution/1300-1399/1331.Rank Transform of an Array/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 arr ，请你将数组中的每个元素替换为它们排序后的序号。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

序号代表了一个元素有多大。序号编号的规则如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

序号从 1 开始编号。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

一个元素越大，那么序号越大。如果两个元素相等，那么它们的序号相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每个数字的序号都应该尽可能地小。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [40,10,20,30]
  <strong>输出：</strong>[4,1,2,3]
  <strong>解释：</strong>40 是最大的元素。 10 是最小的元素。 20 是第二小的数字。 30 是第三小的数字。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [100,100,100]
  <strong>输出：</strong>[1,1,1]
  <strong>解释：</strong>所有元素有相同的序号。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [37,12,28,9,100,56,80,5,12]
  <strong>输出：</strong>[5,3,4,2,8,6,7,1,3]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= arr.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= arr[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
