* [[https://leetcode-cn.com/problems/minimum-number-of-taps-to-open-to-water-a-garden][1326.
灌溉花园的最少水龙头数目]]
  :PROPERTIES:
  :CUSTOM_ID: 灌溉花园的最少水龙头数目
  :END:
[[./solution/1300-1399/1326.Minimum Number of Taps to Open to Water a Garden/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在 x 轴上有一个一维的花园。花园长度为 n，从点 0 开始，到点 n 结束。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

花园里总共有 n + 1 个水龙头，分别位于 [0, 1, ..., n] 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数 n 和一个长度为 n + 1 的整数数组 ranges ，其中 ranges[i]
（下标从 0 开始）表示：如果打开点 i 处的水龙头，可以灌溉的区域为 [i - 
ranges[i], i + ranges[i]] 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回可以灌溉整个花园的 最少水龙头数目 。如果花园始终存在无法灌溉到的地方，请你返回 -1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 5, ranges = [3,4,1,1,0,0]
  <strong>输出：</strong>1
  <strong>解释：
  </strong>点 0 处的水龙头可以灌溉区间 [-3,3]
  点 1 处的水龙头可以灌溉区间 [-3,5]
  点 2 处的水龙头可以灌溉区间 [1,3]
  点 3 处的水龙头可以灌溉区间 [2,4]
  点 4 处的水龙头可以灌溉区间 [4,4]
  点 5 处的水龙头可以灌溉区间 [5,5]
  只需要打开点 1 处的水龙头即可灌溉整个花园 [0,5] 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 3, ranges = [0,0,0,0]
  <strong>输出：</strong>-1
  <strong>解释：</strong>即使打开所有水龙头，你也无法灌溉整个花园。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 7, ranges = [1,2,1,0,2,1,0,1]
  <strong>输出：</strong>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 8, ranges = [4,0,0,0,0,0,0,0,4]
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 8, ranges = [4,0,0,0,4,0,0,0,4]
  <strong>输出：</strong>1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ranges.length == n + 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= ranges[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
