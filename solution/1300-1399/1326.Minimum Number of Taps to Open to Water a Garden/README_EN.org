* [[https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden][1326.
Minimum Number of Taps to Open to Water a Garden]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-taps-to-open-to-water-a-garden
  :END:
[[./solution/1300-1399/1326.Minimum Number of Taps to Open to Water a Garden/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is a one-dimensional garden on the x-axis. The garden starts at
the point 0 and ends at the point n. (i.e The length of the garden is
n).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

There are n + 1 taps located at points [0, 1, ..., n] in the garden.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an integer n and an integer array ranges of length n + 1 where
ranges[i] (0-indexed) means the i-th tap can water the area [i -
ranges[i], i + ranges[i]] if it was open.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of taps that should be open to water the whole
garden, If the garden cannot be watered return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, ranges = [3,4,1,1,0,0]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> The tap at point 0 can cover the interval [-3,3]
  The tap at point 1 can cover the interval [-3,5]
  The tap at point 2 can cover the interval [1,3]
  The tap at point 3 can cover the interval [2,4]
  The tap at point 4 can cover the interval [4,4]
  The tap at point 5 can cover the interval [5,5]
  Opening Only the second tap will water the whole garden [0,5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 3, ranges = [0,0,0,0]
  <strong>Output:</strong> -1
  <strong>Explanation:</strong> Even if you activate all the four taps you cannot water the whole garden.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 7, ranges = [1,2,1,0,2,1,0,1]
  <strong>Output:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 8, ranges = [4,0,0,0,0,0,0,0,4]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 8, ranges = [4,0,0,0,4,0,0,0,4]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ranges.length == n + 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= ranges[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
