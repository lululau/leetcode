* [[https://leetcode.com/problems/count-number-of-teams][1395. Count
Number of Teams]]
  :PROPERTIES:
  :CUSTOM_ID: count-number-of-teams
  :END:
[[./solution/1300-1399/1395.Count Number of Teams/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are n soldiers standing in a line. Each soldier is assigned a
unique rating value.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You have to form a team of 3 soldiers amongst them under the following
rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Choose 3 soldiers with index (i, j, k) with rating (rating[i],
rating[j], rating[k]).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

A team is valid if: (rating[i] < rating[j] < rating[k]) or (rating[i] >
rating[j] > rating[k]) where (0 <= i < j < k < n).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of teams you can form given the conditions. (soldiers
can be part of multiple teams).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rating = [2,5,3,4,1]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1). 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rating = [2,1,3]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> We can&#39;t form any team given the conditions.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rating = [1,2,3,4]
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == rating.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= n <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rating[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the integers in rating are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
