* [[https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid][1368.
Minimum Cost to Make at Least One Valid Path in a Grid]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-cost-to-make-at-least-one-valid-path-in-a-grid
  :END:
[[./solution/1300-1399/1368.Minimum Cost to Make at Least One Valid Path in a Grid/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:
Given a m x n grid. Each cell of the grid has a sign pointing to the
next cell you should visit if you are currently in this cell. The sign
of grid[i][j] can be:

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 which means go to the cell to the right. (i.e go from grid[i][j] to
grid[i][j + 1])

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 which means go to the cell to the left. (i.e go from grid[i][j] to
grid[i][j - 1])

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

3 which means go to the lower cell. (i.e go from grid[i][j] to grid[i +
1][j])

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

4 which means go to the upper cell. (i.e go from grid[i][j] to grid[i -
1][j])

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Notice that there could be some invalid signs on the cells of the grid
which points outside the grid.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You will initially start at the upper left cell (0,0). A valid path in
the grid is a path which starts from the upper left cell (0,0) and ends
at the bottom-right cell (m - 1, n - 1) following the signs on the grid.
The valid path doesn't have to be the shortest.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can modify the sign on a cell with cost = 1. You can modify the sign
on a cell one time only.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum cost to make the grid have at least one valid path.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,1,1],[2,2,2,2],[1,1,1,1],[2,2,2,2]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> You will start at point (0, 0).
  The path to (3, 3) is as follows. (0, 0) --&gt; (0, 1) --&gt; (0, 2) --&gt; (0, 3) change the arrow to down with cost = 1 --&gt; (1, 3) --&gt; (1, 2) --&gt; (1, 1) --&gt; (1, 0) change the arrow to down with cost = 1 --&gt; (2, 0) --&gt; (2, 1) --&gt; (2, 2) --&gt; (2, 3) change the arrow to down with cost = 1 --&gt; (3, 3)
  The total cost = 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,3],[3,2,2],[1,1,4]]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> You can follow the path from (0, 0) to (2, 2).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,2],[4,3]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[2,2,2],[2,2,2]]
  <strong>Output:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[4]]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == grid.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == grid[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
