* [[https://leetcode.com/problems/delete-leaves-with-a-given-value][1325.
Delete Leaves With a Given Value]]
  :PROPERTIES:
  :CUSTOM_ID: delete-leaves-with-a-given-value
  :END:
[[./solution/1300-1399/1325.Delete Leaves With a Given Value/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a binary tree root and an integer target, delete all the leaf
nodes with value target.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that once you delete a leaf node with value target, if it's parent
node becomes a leaf node and has the value target, it should also be
deleted (you need to continue doing that until you can't).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,2,3,2,null,2,4], target = 2
  <strong>Output:</strong> [1,null,3,null,4]
  <strong>Explanation:</strong> Leaf nodes in green with value (target = 2) are removed (Picture in left). 
  After removing, new nodes become leaf nodes with value (target = 2) (Picture in center).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,3,3,3,2], target = 3
  <strong>Output:</strong> [1,3,null,null,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,2,null,2,null,2], target = 2
  <strong>Output:</strong> [1]
  <strong>Explanation:</strong> Leaf nodes in green with value (target = 2) are removed at each step.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,1,1], target = 1
  <strong>Output:</strong> []
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [1,2,3], target = 1
  <strong>Output:</strong> [1,2,3]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The given binary tree will have between 1 and 3000 nodes.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Each node's value is between [1, 1000].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
