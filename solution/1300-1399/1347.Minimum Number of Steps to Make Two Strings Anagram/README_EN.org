* [[https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram][1347.
Minimum Number of Steps to Make Two Strings Anagram]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-steps-to-make-two-strings-anagram
  :END:
[[./solution/1300-1399/1347.Minimum Number of Steps to Make Two Strings Anagram/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two equal-size strings s and t. In one step you can choose any
character of t and replace it with another character.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of steps to make t an anagram of s.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

An Anagram of a string is a string that contains the same characters
with a different (or the same) ordering.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;bab&quot;, t = &quot;aba&quot;
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> Replace the first &#39;a&#39; in t with b, t = &quot;bba&quot; which is anagram of s.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;leetcode&quot;, t = &quot;practice&quot;
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> Replace &#39;p&#39;, &#39;r&#39;, &#39;a&#39;, &#39;i&#39; and &#39;c&#39; from t with proper characters to make t anagram of s.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;anagram&quot;, t = &quot;mangaar&quot;
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> &quot;anagram&quot; and &quot;mangaar&quot; are anagrams. 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;xxyyzz&quot;, t = &quot;xxyyzz&quot;
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;friend&quot;, t = &quot;family&quot;
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 50000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s.length == t.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s and t contain lower-case English letters only.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
