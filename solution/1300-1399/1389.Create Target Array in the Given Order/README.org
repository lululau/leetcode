* [[https://leetcode-cn.com/problems/create-target-array-in-the-given-order][1389.
按既定顺序创建目标数组]]
  :PROPERTIES:
  :CUSTOM_ID: 按既定顺序创建目标数组
  :END:
[[./solution/1300-1399/1389.Create Target Array in the Given Order/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个整数数组 nums 和 index。你需要按照以下规则创建目标数组：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

目标数组 target 最初为空。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

按从左到右的顺序依次读取 nums[i] 和 index[i]，在 target 数组中的下标
index[i] 处插入值 nums[i] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

重复上一步，直到在 nums 和 index 中都没有要读取的元素。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回目标数组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

题目保证数字插入位置总是存在。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [0,1,2,3,4], index = [0,1,2,2,1]
  <strong>输出：</strong>[0,4,1,3,2]
  <strong>解释：</strong>
  nums       index     target
  0            0        [0]
  1            1        [0,1]
  2            2        [0,1,2]
  3            2        [0,1,3,2]
  4            1        [0,4,1,3,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [1,2,3,4,0], index = [0,1,2,3,0]
  <strong>输出：</strong>[0,1,2,3,4]
  <strong>解释：</strong>
  nums       index     target
  1            0        [1]
  2            1        [1,2]
  3            2        [1,2,3]
  4            3        [1,2,3,4]
  0            0        [0,1,2,3,4]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [1], index = [0]
  <strong>输出：</strong>[1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length, index.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length == index.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= index[i] <= i

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
