* [[https://leetcode-cn.com/problems/number-of-paths-with-max-score][1301.
最大得分的路径数目]]
  :PROPERTIES:
  :CUSTOM_ID: 最大得分的路径数目
  :END:
[[./solution/1300-1399/1301.Number of Paths with Max Score/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个正方形字符数组 board ，你从数组最右下方的字符 'S' 出发。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你的目标是到达数组最左上角的字符 'E' ，数组剩余的部分为数字字符 1, 2,
..., 9 或者障碍
'X'。在每一步移动中，你可以向上、向左或者左上方移动，可以移动的前提是到达的格子没有障碍。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一条路径的 「得分」 定义为：路径上所有数字的和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回一个列表，包含两个整数：第一个整数是 「得分」
的最大值，第二个整数是得到最大得分的方案数，请把结果对 10^9 + 7 取余。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果没有任何路径可以到达终点，请返回 [0, 0] 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>board = [&quot;E23&quot;,&quot;2X2&quot;,&quot;12S&quot;]
  <strong>输出：</strong>[7,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>board = [&quot;E12&quot;,&quot;1X1&quot;,&quot;21S&quot;]
  <strong>输出：</strong>[4,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>board = [&quot;E11&quot;,&quot;XXX&quot;,&quot;11S&quot;]
  <strong>输出：</strong>[0,0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= board.length == board[i].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
