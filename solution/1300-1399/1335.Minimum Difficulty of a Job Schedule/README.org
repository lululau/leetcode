* [[https://leetcode-cn.com/problems/minimum-difficulty-of-a-job-schedule][1335.
工作计划的最低难度]]
  :PROPERTIES:
  :CUSTOM_ID: 工作计划的最低难度
  :END:
[[./solution/1300-1399/1335.Minimum Difficulty of a Job Schedule/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你需要制定一份 d 天的工作计划表。工作之间存在依赖，要想执行第 i 项工作，你必须完成全部 j 项工作（ 0
<= j < i）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你每天
至少 需要完成一项任务。工作计划的总难度是这 d 天每一天的难度之和，而一天的工作难度是当天应该完成工作的最大难度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 jobDifficulty 和一个整数 d，分别代表工作难度和需要计划的天数。第 i 项工作的难度是 jobDifficulty[i]。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回整个工作计划的 最小难度 。如果无法制定工作计划，则返回 -1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>jobDifficulty = [6,5,4,3,2,1], d = 2
  <strong>输出：</strong>7
  <strong>解释：</strong>第一天，您可以完成前 5 项工作，总难度 = 6.
  第二天，您可以完成最后一项工作，总难度 = 1.
  计划表的难度 = 6 + 1 = 7 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>jobDifficulty = [9,9,9], d = 4
  <strong>输出：</strong>-1
  <strong>解释：</strong>就算你每天完成一项工作，仍然有一天是空闲的，你无法制定一份能够满足既定工作时间的计划表。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>jobDifficulty = [1,1,1], d = 3
  <strong>输出：</strong>3
  <strong>解释：</strong>工作计划为每天一项工作，总难度为 3 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>jobDifficulty = [7,1,7,1,7,1], d = 3
  <strong>输出：</strong>15
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>jobDifficulty = [11,111,22,222,33,333,44,444], d = 6
  <strong>输出：</strong>843
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= jobDifficulty.length <= 300

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= jobDifficulty[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= d <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
