* [[https://leetcode.com/problems/decompress-run-length-encoded-list][1313.
Decompress Run-Length Encoded List]]
  :PROPERTIES:
  :CUSTOM_ID: decompress-run-length-encoded-list
  :END:
[[./solution/1300-1399/1313.Decompress Run-Length Encoded List/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We are given a list nums of integers representing a list compressed with
run-length encoding.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Consider each adjacent pair of elements [freq, val] = [nums[2*i],
nums[2*i+1]] (with i >= 0).  For each such pair, there are freq elements
with value val concatenated in a sublist. Concatenate all the sublists
from left to right to generate the decompressed list.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the decompressed list.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,4]
  <strong>Output:</strong> [2,4,4,4]
  <strong>Explanation:</strong> The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].
  The second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].
  At the end the concatenation [2] + [4,4,4] is [2,4,4,4].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,1,2,3]
  <strong>Output:</strong> [1,3,3]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= nums.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length % 2 == 0

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
