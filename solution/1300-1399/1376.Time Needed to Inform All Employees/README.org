* [[https://leetcode-cn.com/problems/time-needed-to-inform-all-employees][1376.
通知所有员工所需的时间]]
  :PROPERTIES:
  :CUSTOM_ID: 通知所有员工所需的时间
  :END:
[[./solution/1300-1399/1376.Time Needed to Inform All Employees/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

公司里有 n 名员工，每个员工的 ID 都是独一无二的，编号从 0 到 n -
1。公司的总负责人通过 headID 进行标识。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在 manager 数组中，每个员工都有一个直属负责人，其中 manager[i] 是第 i
名员工的直属负责人。对于总负责人，manager[headID] =
-1。题目保证从属关系可以用树结构显示。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

公司总负责人想要向公司所有员工通告一条紧急消息。他将会首先通知他的直属下属们，然后由这些下属通知他们的下属，直到所有的员工都得知这条紧急消息。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

第 i 名员工需要 informTime[i] 分钟来通知它的所有直属下属（也就是说在
informTime[i] 分钟后，他的所有直属下属都可以开始传播这一消息）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回通知所有员工这一紧急消息所需要的 分钟数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 1, headID = 0, manager = [-1], informTime = [0]
  <strong>输出：</strong>0
  <strong>解释：</strong>公司总负责人是该公司的唯一一名员工。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 6, headID = 2, manager = [2,2,-1,2,2,2], informTime = [0,0,1,0,0,0]
  <strong>输出：</strong>1
  <strong>解释：</strong>id = 2 的员工是公司的总负责人，也是其他所有员工的直属负责人，他需要 1 分钟来通知所有员工。
  上图显示了公司员工的树结构。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 7, headID = 6, manager = [1,2,3,4,5,6,-1], informTime = [0,6,5,4,3,2,1]
  <strong>输出：</strong>21
  <strong>解释：</strong>总负责人 id = 6。他将在 1 分钟内通知 id = 5 的员工。
  id = 5 的员工将在 2 分钟内通知 id = 4 的员工。
  id = 4 的员工将在 3 分钟内通知 id = 3 的员工。
  id = 3 的员工将在 4 分钟内通知 id = 2 的员工。
  id = 2 的员工将在 5 分钟内通知 id = 1 的员工。
  id = 1 的员工将在 6 分钟内通知 id = 0 的员工。
  所需时间 = 1 + 2 + 3 + 4 + 5 + 6 = 21 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 15, headID = 0, manager = [-1,0,0,1,1,2,2,3,3,4,4,5,5,6,6], informTime = [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  <strong>输出：</strong>3
  <strong>解释：</strong>第一分钟总负责人通知员工 1 和 2 。
  第二分钟他们将会通知员工 3, 4, 5 和 6 。
  第三分钟他们将会通知剩下的员工。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 4, headID = 2, manager = [3,3,-1,2], informTime = [0,0,162,914]
  <strong>输出：</strong>1076
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= headID < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

manager.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= manager[i] < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

manager[headID] == -1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

informTime.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= informTime[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果员工 i 没有下属，informTime[i] == 0 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

题目 保证 所有员工都可以收到通知。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
