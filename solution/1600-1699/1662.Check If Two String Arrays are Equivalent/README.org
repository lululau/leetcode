* [[https://leetcode-cn.com/problems/check-if-two-string-arrays-are-equivalent][1662.
检查两个字符串数组是否相等]]
  :PROPERTIES:
  :CUSTOM_ID: 检查两个字符串数组是否相等
  :END:
[[./solution/1600-1699/1662.Check If Two String Arrays are Equivalent/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个字符串数组 word1 和 word2 。如果两个数组表示的字符串相同，返回
true ；否则，返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

数组表示的字符串 是由数组中的所有元素 按顺序 连接形成的字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word1 = ["ab", "c"], word2 = ["a", "bc"]
  <strong>输出：</strong>true
  <strong>解释：</strong>
  word1 表示的字符串为 "ab" + "c" -> "abc"
  word2 表示的字符串为 "a" + "bc" -> "abc"
  两个字符串相同，返回 true</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word1 = ["a", "cb"], word2 = ["ab", "c"]
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word1  = ["abc", "d", "defg"], word2 = ["abcddefg"]
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word1.length, word2.length <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word1[i].length, word2[i].length <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sum(word1[i].length), sum(word2[i].length) <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word1[i] 和 word2[i] 由小写字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
