* [[https://leetcode-cn.com/problems/stone-game-vi][1686. 石子游戏 VI]]
  :PROPERTIES:
  :CUSTOM_ID: 石子游戏-vi
  :END:
[[./solution/1600-1699/1686.Stone Game VI/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

Alice 和 Bob 轮流玩一个游戏，Alice 先手。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一堆石子里总共有 n 个石子，轮到某个玩家时，他可以
移出 一个石子并得到这个石子的价值。Alice 和 Bob 对石子价值有
不一样的的评判标准 。双方都知道对方的评判标准。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你两个长度为 n 的整数数组 aliceValues 和 bobValues 。aliceValues[i]
和 bobValues[i] 分别表示 Alice 和 Bob 认为第 i 个石子的价值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

所有石子都被取完后，得分较高的人为胜者。如果两个玩家得分相同，那么为平局。两位玩家都会采用
最优策略 进行游戏。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你推断游戏的结果，用如下的方式表示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 Alice 赢，返回 1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 Bob 赢，返回 -1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果游戏平局，返回 0 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>aliceValues = [1,3], bobValues = [2,1]
  <b>输出：</b>1
  <strong>解释：</strong>
  如果 Alice 拿石子 1 （下标从 0开始），那么 Alice 可以得到 3 分。
  Bob 只能选择石子 0 ，得到 2 分。
  Alice 获胜。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>aliceValues = [1,2], bobValues = [3,1]
  <b>输出：</b>0
  <strong>解释：</strong>
  Alice 拿石子 0 ， Bob 拿石子 1 ，他们得分都为 1 分。
  打平。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>aliceValues = [2,4,3], bobValues = [1,6,7]
  <b>输出：</b>-1
  <strong>解释：</strong>
  不管 Alice 怎么操作，Bob 都可以得到比 Alice 更高的得分。
  比方说，Alice 拿石子 1 ，Bob 拿石子 2 ， Alice 拿石子 0 ，Alice 会得到 6 分而 Bob 得分为 7 分。
  Bob 会获胜。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == aliceValues.length == bobValues.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= aliceValues[i], bobValues[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
