* [[https://leetcode.com/problems/best-team-with-no-conflicts][1626.
Best Team With No Conflicts]]
  :PROPERTIES:
  :CUSTOM_ID: best-team-with-no-conflicts
  :END:
[[./solution/1600-1699/1626.Best Team With No Conflicts/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are the manager of a basketball team. For the upcoming tournament,
you want to choose the team with the highest overall score. The score of
the team is the sum of scores of all the players in the team.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

However, the basketball team is not allowed to have conflicts. A
conflict exists if a younger player has a strictly higher score than an
older player. A conflict does not occur between players of the same age.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given two lists, scores and ages, where each scores[i] and ages[i]
represents the score and age of the ith player, respectively, return the
highest overall score of all possible basketball teams.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> scores = [1,3,5,10,15], ages = [1,2,3,4,5]
  <strong>Output:</strong> 34
  <strong>Explanation:</strong>&nbsp;You can choose all the players.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> scores = [4,5,6,5], ages = [2,1,2,1]
  <strong>Output:</strong> 16
  <strong>Explanation:</strong>&nbsp;It is best to choose the last 3 players. Notice that you are allowed to choose multiple people of the same age.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> scores = [1,2,3,5], ages = [8,9,10,1]
  <strong>Output:</strong> 6
  <strong>Explanation:</strong>&nbsp;It is best to choose the first 3 players. 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= scores.length, ages.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

scores.length == ages.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= scores[i] <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ages[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
