* [[https://leetcode-cn.com/problems/best-team-with-no-conflicts][1626.
无矛盾的最佳球队]]
  :PROPERTIES:
  :CUSTOM_ID: 无矛盾的最佳球队
  :END:
[[./solution/1600-1699/1626.Best Team With No Conflicts/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

假设你是球队的经理。对于即将到来的锦标赛，你想组合一支总体得分最高的球队。球队的得分是球队中所有球员的分数
总和 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

然而，球队中的矛盾会限制球员的发挥，所以必须选出一支 没有矛盾
的球队。如果一名年龄较小球员的分数 严格大于
一名年龄较大的球员，则存在矛盾。同龄球员之间不会发生矛盾。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你两个列表 scores 和 ages，其中每组 scores[i] 和 ages[i] 表示第 i
名球员的分数和年龄。请你返回 所有可能的无矛盾球队中得分最高那支的分数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>scores = [1,3,5,10,15], ages = [1,2,3,4,5]
  <strong>输出：</strong>34
  <strong>解释：</strong>你可以选中所有球员。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>scores = [4,5,6,5], ages = [2,1,2,1]
  <strong>输出：</strong>16
  <strong>解释：</strong>最佳的选择是后 3 名球员。注意，你可以选中多个同龄球员。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>scores = [1,2,3,5], ages = [8,9,10,1]
  <strong>输出：</strong>6
  <strong>解释：</strong>最佳的选择是前 3 名球员。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= scores.length, ages.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

scores.length == ages.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= scores[i] <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ages[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
