* [[https://leetcode.com/problems/create-sorted-array-through-instructions][1649.
Create Sorted Array through Instructions]]
  :PROPERTIES:
  :CUSTOM_ID: create-sorted-array-through-instructions
  :END:
[[./solution/1600-1699/1649.Create Sorted Array through Instructions/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an integer array instructions, you are asked to create a sorted
array from the elements in instructions. You start with an empty
container nums. For each element from left to right in instructions,
insert it into nums. The cost of each insertion is the minimum of the
following:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of elements currently in nums that are strictly less than
instructions[i].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The number of elements currently in nums that are strictly greater than
instructions[i].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if inserting element 3 into nums = [1,2,3,5], the cost of
insertion is min(2, 1) (elements 1 and 2 are less than 3, element 5 is
greater than 3) and nums will become [1,2,3,3,5].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the total cost to insert all elements from instructions into
nums. Since the answer may be large, return it modulo 109 + 7

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> instructions = [1,5,6,2]

  <strong>Output:</strong> 1

  <strong>Explanation:</strong> Begin with nums = [].

  Insert 1 with cost min(0, 0) = 0, now nums = [1].

  Insert 5 with cost min(1, 0) = 0, now nums = [1,5].

  Insert 6 with cost min(2, 0) = 0, now nums = [1,5,6].

  Insert 2 with cost min(1, 2) = 1, now nums = [1,2,5,6].

  The total cost is 0 + 0 + 0 + 1 = 1.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> instructions = [1,2,3,6,5,4]

  <strong>Output:</strong> 3

  <strong>Explanation:</strong> Begin with nums = [].

  Insert 1 with cost min(0, 0) = 0, now nums = [1].

  Insert 2 with cost min(1, 0) = 0, now nums = [1,2].

  Insert 3 with cost min(2, 0) = 0, now nums = [1,2,3].

  Insert 6 with cost min(3, 0) = 0, now nums = [1,2,3,6].

  Insert 5 with cost min(3, 1) = 1, now nums = [1,2,3,5,6].

  Insert 4 with cost min(3, 2) = 2, now nums = [1,2,3,4,5,6].

  The total cost is 0 + 0 + 0 + 0 + 1 + 2 = 3.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> instructions = [1,3,3,3,2,4,2,1,2]

  <strong>Output:</strong> 4

  <strong>Explanation:</strong> Begin with nums = [].

  Insert 1 with cost min(0, 0) = 0, now nums = [1].

  Insert 3 with cost min(1, 0) = 0, now nums = [1,3].

  Insert 3 with cost min(1, 0) = 0, now nums = [1,3,3].

  Insert 3 with cost min(1, 0) = 0, now nums = [1,3,3,3].

  Insert 2 with cost min(1, 3) = 1, now nums = [1,2,3,3,3].

  Insert 4 with cost min(5, 0) = 0, now nums = [1,2,3,3,3,4].

  ​​​​​​​Insert 2 with cost min(1, 4) = 1, now nums = [1,2,2,3,3,3,4].

  ​​​​​​​Insert 1 with cost min(0, 6) = 0, now nums = [1,1,2,2,3,3,3,4].

  ​​​​​​​Insert 2 with cost min(2, 4) = 2, now nums = [1,1,2,2,2,3,3,3,4].

  The total cost is 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 2 = 4.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= instructions.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= instructions[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
