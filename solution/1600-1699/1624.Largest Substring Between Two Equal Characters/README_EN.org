* [[https://leetcode.com/problems/largest-substring-between-two-equal-characters][1624.
Largest Substring Between Two Equal Characters]]
  :PROPERTIES:
  :CUSTOM_ID: largest-substring-between-two-equal-characters
  :END:
[[./solution/1600-1699/1624.Largest Substring Between Two Equal Characters/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string s, return the length of the longest substring between two
equal characters, excluding the two characters. If there is no such
substring return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A substring is a contiguous sequence of characters within a string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;aa&quot;
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> The optimal substring here is an empty substring between the two <code>&#39;a&#39;s</code>.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;abca&quot;
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> The optimal substring here is &quot;bc&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;cbzxy&quot;
  <strong>Output:</strong> -1
  <strong>Explanation:</strong> There are no characters that appear twice in s.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;cabbac&quot;
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> The optimal substring here is &quot;abba&quot;. Other non-optimal substrings include &quot;bb&quot; and &quot;&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 300

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s contains only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
