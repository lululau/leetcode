* [[https://leetcode-cn.com/problems/count-substrings-that-differ-by-one-character][1638.
统计只差一个字符的子串数目]]
  :PROPERTIES:
  :CUSTOM_ID: 统计只差一个字符的子串数目
  :END:
[[./solution/1600-1699/1638.Count Substrings That Differ by One Character/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个字符串 s 和 t ，请你找出 s 中的非空子串的数目，这些子串满足替换
一个不同字符 以后，是 t 串的子串。换言之，请你找到 s 和 t 串中
恰好 只有一个字符不同的子字符串对的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

比方说， "computer" 和 "computation"
加粗部分只有一个字符不同： 'e'/'a' ，所以这一对子字符串会给答案加 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回满足上述条件的不同子字符串对数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一个 子字符串 是一个字符串中连续的字符。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>s = "aba", t = "baba"
  <b>输出：</b>6
  <strong>解释：</strong>以下为只相差 1 个字符的 s 和 t 串的子字符串对：
  ("<strong>a</strong>ba", "<strong>b</strong>aba")
  ("<strong>a</strong>ba", "ba<strong>b</strong>a")
  ("ab<strong>a</strong>", "<strong>b</strong>aba")
  ("ab<strong>a</strong>", "ba<strong>b</strong>a")
  ("a<strong>b</strong>a", "b<strong>a</strong>ba")
  ("a<strong>b</strong>a", "bab<strong>a</strong>")
  加粗部分分别表示 s 和 t 串选出来的子字符串。
  </pre>
#+end_html

示例 2：

#+begin_html
  <pre>
  <b>输入：</b>s = "ab", t = "bb"
  <b>输出：</b>3
  <strong>解释：</strong>以下为只相差 1 个字符的 s 和 t 串的子字符串对：
  ("<strong>a</strong>b", "<strong>b</strong>b")
  ("<strong>a</strong>b", "b<strong>b</strong>")
  ("<strong>ab</strong>", "<strong>bb</strong>")
  加粗部分分别表示 s 和 t 串选出来的子字符串。
  </pre>
#+end_html

示例 3：

#+begin_html
  <pre>
  <b>输入：</b>s = "a", t = "a"
  <b>输出：</b>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>s = "abe", t = "bbc"
  <b>输出：</b>10
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length, t.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 和 t 都只包含小写英文字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
