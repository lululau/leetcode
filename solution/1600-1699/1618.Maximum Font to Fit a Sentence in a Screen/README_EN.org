* [[https://leetcode.com/problems/maximum-font-to-fit-a-sentence-in-a-screen][1618.
Maximum Font to Fit a Sentence in a Screen]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-font-to-fit-a-sentence-in-a-screen
  :END:
[[./solution/1600-1699/1618.Maximum Font to Fit a Sentence in a Screen/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a string text. We want to display text on a screen of
width w and height h. You can choose any font size from array fonts,
which contains the available font sizes in ascending order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can use the FontInfo interface to get the width and height of any
character at any available font size.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The FontInfo interface is defined as such:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  interface FontInfo {

    // Returns the width of character ch on the screen using font size fontSize.

    // O(1) per call

    public int getWidth(int fontSize, char ch);



    // Returns the height of any character on the screen using font size fontSize.

    // O(1) per call

    public int getHeight(int fontSize);

  }</pre>
#+end_html

#+begin_html
  <p>
#+end_html

The calculated width of text for some fontSize is the sum of every
getWidth(fontSize, text[i]) call for each 0 <= i < text.length
(0-indexed). The calculated height of text for some fontSize is
getHeight(fontSize). Note that text is displayed on a single line.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It is guaranteed that FontInfo will return the same value if you call
getHeight or getWidth with the same parameters.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It is also guaranteed that for any font size fontSize and any character
ch:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

getHeight(fontSize) <= getHeight(fontSize+1)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

getWidth(fontSize, ch) <= getWidth(fontSize+1, ch)

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum font size you can use to display text on the screen.
If text cannot fit on the display with any font size, return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> text = &quot;helloworld&quot;, w = 80, h = 20, fonts = [6,8,10,12,14,16,18,24,36]

  <strong>Output:</strong> 6

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> text = &quot;leetcode&quot;, w = 1000, h = 50, fonts = [1,2,4]

  <strong>Output:</strong> 4

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> text = &quot;easyquestion&quot;, w = 100, h = 100, fonts = [10,15,20,25]

  <strong>Output:</strong> -1

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= text.length <= 50000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

text contains only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= w <= 107

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= h <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= fonts.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= fonts[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

fonts is sorted in ascending order and does not contain duplicates.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
