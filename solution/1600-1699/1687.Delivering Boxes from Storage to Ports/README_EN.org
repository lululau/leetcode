* [[https://leetcode.com/problems/delivering-boxes-from-storage-to-ports][1687.
Delivering Boxes from Storage to Ports]]
  :PROPERTIES:
  :CUSTOM_ID: delivering-boxes-from-storage-to-ports
  :END:
[[./solution/1600-1699/1687.Delivering Boxes from Storage to Ports/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You have the task of delivering some boxes from storage to their ports
using only one ship. However, this ship has a limit on the number of
boxes and the total weight that it can carry.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given an array boxes, where boxes[i] = [ports​​i​, weighti], and
three integers portsCount, maxBoxes, and maxWeight.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

ports​​i is the port where you need to deliver the ith box and weightsi
is the weight of the ith box.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

portsCount is the number of ports.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

maxBoxes and maxWeight are the respective box and weight limits of the
ship.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The boxes need to be delivered in the order they are given. The ship
will follow these steps:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The ship will take some number of boxes from the boxes queue, not
violating the maxBoxes and maxWeight constraints.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

For each loaded box in order, the ship will make a trip to the port the
box needs to be delivered to and deliver it. If the ship is already at
the correct port, no trip is needed, and the box can immediately be
delivered.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The ship then makes a return trip to storage to take more boxes from the
queue.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The ship must end at storage after all the boxes have been delivered.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of trips the ship needs to make to deliver all
boxes to their respective ports.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> boxes = [[1,1],[2,1],[1,1]], portsCount = 2, maxBoxes = 3, maxWeight = 3
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> The optimal strategy is as follows: 
  - The ship takes all the boxes in the queue, goes to port 1, then port 2, then port 1 again, then returns to storage. 4 trips.
  So the total number of trips is 4.
  Note that the first and third boxes cannot be delivered together because the boxes need to be delivered in order (i.e. the second box needs to be delivered at port 2 before the third box).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> boxes = [[1,2],[3,3],[3,1],[3,1],[2,4]], portsCount = 3, maxBoxes = 3, maxWeight = 6
  <strong>Output:</strong> 6
  <strong>Explanation:</strong> The optimal strategy is as follows: 
  - The ship takes the first box, goes to port 1, then returns to storage. 2 trips.
  - The ship takes the second, third and fourth boxes, goes to port 3, then returns to storage. 2 trips.
  - The ship takes the fifth box, goes to port 3, then returns to storage. 2 trips.
  So the total number of trips is 2 + 2 + 2 = 6.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> boxes = [[1,4],[1,2],[2,1],[2,1],[3,2],[3,4]], portsCount = 3, maxBoxes = 6, maxWeight = 7
  <strong>Output:</strong> 6
  <strong>Explanation:</strong> The optimal strategy is as follows:
  - The ship takes the first and second boxes, goes to port 1, then returns to storage. 2 trips.
  - The ship takes the third and fourth boxes, goes to port 2, then returns to storage. 2 trips.
  - The ship takes the fifth and sixth boxes, goes to port 3, then returns to storage. 2 trips.
  So the total number of trips is 2 + 2 + 2 = 6.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> boxes = [[2,4],[2,5],[3,1],[3,2],[3,7],[3,1],[4,4],[1,3],[5,2]], portsCount = 5, maxBoxes = 5, maxWeight = 7
  <strong>Output:</strong> 14
  <strong>Explanation:</strong> The optimal strategy is as follows:
  - The ship takes the first box, goes to port 2, then storage. 2 trips.
  - The ship takes the second box, goes to port 2, then storage. 2 trips.
  - The ship takes the third and fourth boxes, goes to port 3, then storage. 2 trips.
  - The ship takes the fifth box, goes to port 3, then storage. 2 trips.
  - The ship takes the sixth and seventh boxes, goes to port 3, then port 4, then storage. 3 trips. 
  - The ship takes the eighth and ninth boxes, goes to port 1, then port 5, then storage. 3 trips.
  So the total number of trips is 2 + 2 + 2 + 2 + 3 + 3 = 14.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= boxes.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= portsCount, maxBoxes, maxWeight <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ports​​i <= portsCount

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= weightsi <= maxWeight

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
