* [[https://leetcode.com/problems/coordinate-with-maximum-network-quality][1620.
Coordinate With Maximum Network Quality]]
  :PROPERTIES:
  :CUSTOM_ID: coordinate-with-maximum-network-quality
  :END:
[[./solution/1600-1699/1620.Coordinate With Maximum Network Quality/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of network towers towers and an integer radius,
where towers[i] = [xi, yi, qi] denotes the ith network tower with
location (xi, yi) and quality factor qi. All the coordinates are
integral coordinates on the X-Y plane, and the distance between two
coordinates is the Euclidean distance.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The integer radius denotes the maximum distance in which the tower is
reachable. The tower is reachable if the distance is less than or equal
to radius. Outside that distance, the signal becomes garbled, and the
tower is not reachable.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The signal quality of the ith tower at a coordinate (x, y) is calculated
with the formula ⌊qi / (1 + d)⌋, where d is the distance between the
tower and the coordinate. The network quality at a coordinate is the sum
of the signal qualities from all the reachable towers.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the integral coordinate where the network quality is maximum. If
there are multiple coordinates with the same network quality, return the
lexicographically minimum coordinate.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

A coordinate (x1, y1) is lexicographically smaller than (x2, y2) if
either x1 < x2 or x1 == x2 and y1 < y2.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

⌊val⌋ is the greatest integer less than or equal to val (the floor
function).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> towers = [[1,2,5],[2,1,7],[3,1,9]], radius = 2
  <strong>Output:</strong> [2,1]
  <strong>Explanation: </strong>
  At coordinate (2, 1) the total quality is 13
  - Quality of 7 from (2, 1) results in &lfloor;7 / (1 + sqrt(0)&rfloor; = &lfloor;7&rfloor; = 7
  - Quality of 5 from (1, 2) results in &lfloor;5 / (1 + sqrt(2)&rfloor; = &lfloor;2.07&rfloor; = 2
  - Quality of 9 from (3, 1) results in &lfloor;9 / (1 + sqrt(1)&rfloor; = &lfloor;4.5&rfloor; = 4
  No other coordinate has higher quality.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> towers = [[23,11,21]], radius = 9
  <strong>Output:</strong> [23,11]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> towers = [[1,2,13],[2,1,7],[0,1,9]], radius = 2
  <strong>Output:</strong> [1,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> towers = [[2,1,9],[0,1,9]], radius = 2
  <strong>Output:</strong> [0,1]
  <strong>Explanation: </strong>Both (0, 1) and (2, 1) are optimal in terms of quality but (0, 1) is lexicograpically minimal.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= towers.length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

towers[i].length == 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= xi, yi, qi <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= radius <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
