* [[https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary][1639.
Number of Ways to Form a Target String Given a Dictionary]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-ways-to-form-a-target-string-given-a-dictionary
  :END:
[[./solution/1600-1699/1639.Number of Ways to Form a Target String Given a Dictionary/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a list of strings of the same length words and a string
target.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Your task is to form target using the given words under the following
rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

target should be formed from left to right.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

To form the ith character (0-indexed) of target, you can choose the kth
character of the jth string in words if target[i] = words[j][k].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Once you use the kth character of the jth string of words, you can no
longer use the xth character of any string in words where x <= k. In
other words, all characters to the left of or at index k become
unusuable for every string.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Repeat the process until you form the string target.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Notice that you can use multiple characters from the same string in
words provided the conditions above are met.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of ways to form target from words. Since the answer
may be too large, return it modulo 109 + 7.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;acca&quot;,&quot;bbbb&quot;,&quot;caca&quot;], target = &quot;aba&quot;
  <strong>Output:</strong> 6
  <strong>Explanation:</strong> There are 6 ways to form target.
  &quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 1 (&quot;b<u>b</u>bb&quot;), index 3 (&quot;cac<u>a</u>&quot;)
  &quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;cac<u>a</u>&quot;)
  &quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 1 (&quot;b<u>b</u>bb&quot;), index 3 (&quot;acc<u>a</u>&quot;)
  &quot;aba&quot; -&gt; index 0 (&quot;<u>a</u>cca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;acc<u>a</u>&quot;)
  &quot;aba&quot; -&gt; index 1 (&quot;c<u>a</u>ca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;acc<u>a</u>&quot;)
  &quot;aba&quot; -&gt; index 1 (&quot;c<u>a</u>ca&quot;), index 2 (&quot;bb<u>b</u>b&quot;), index 3 (&quot;cac<u>a</u>&quot;)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;abba&quot;,&quot;baab&quot;], target = &quot;bab&quot;
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> There are 4 ways to form target.
  &quot;bab&quot; -&gt; index 0 (&quot;<u>b</u>aab&quot;), index 1 (&quot;b<u>a</u>ab&quot;), index 2 (&quot;ab<u>b</u>a&quot;)
  &quot;bab&quot; -&gt; index 0 (&quot;<u>b</u>aab&quot;), index 1 (&quot;b<u>a</u>ab&quot;), index 3 (&quot;baa<u>b</u>&quot;)
  &quot;bab&quot; -&gt; index 0 (&quot;<u>b</u>aab&quot;), index 2 (&quot;ba<u>a</u>b&quot;), index 3 (&quot;baa<u>b</u>&quot;)
  &quot;bab&quot; -&gt; index 1 (&quot;a<u>b</u>ba&quot;), index 2 (&quot;ba<u>a</u>b&quot;), index 3 (&quot;baa<u>b</u>&quot;)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;abcd&quot;], target = &quot;abcd&quot;
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;abab&quot;,&quot;baba&quot;,&quot;abba&quot;,&quot;baab&quot;], target = &quot;abba&quot;
  <strong>Output:</strong> 16
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All strings in words have the same length.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i] and target contain only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
