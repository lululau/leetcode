* [[https://leetcode.com/problems/distribute-repeating-integers][1655.
Distribute Repeating Integers]]
  :PROPERTIES:
  :CUSTOM_ID: distribute-repeating-integers
  :END:
[[./solution/1600-1699/1655.Distribute Repeating Integers/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of n integers, nums, where there are at most 50
unique values in the array. You are also given an array of m customer
order quantities, quantity, where quantity[i] is the amount of integers
the ith customer ordered. Determine if it is possible to distribute nums
such that:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The ith customer gets exactly quantity[i] integers,

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The integers the ith customer gets are all equal, and

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Every customer is satisfied.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if it is possible to distribute nums according to the above
conditions.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,4], quantity = [2]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> The 0th customer cannot be given two different integers.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,3], quantity = [2]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> The 0th customer is given [3,3]. The integers [1,2] are not used.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,1,2,2], quantity = [2,2]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> The 0th customer is given [1,1], and the 1st customer is given [2,2].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,1,2,3], quantity = [2,2]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> Although the 0th customer could be given [1,1], the 1st customer cannot be satisfied.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,1,1,1,1], quantity = [2,3]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> The 0th customer is given [1,1], and the 1st customer is given [1,1,1].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == nums.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

m == quantity.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= quantity[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There are at most 50 unique values in nums.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
