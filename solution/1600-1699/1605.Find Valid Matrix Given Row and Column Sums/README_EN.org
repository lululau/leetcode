* [[https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums][1605.
Find Valid Matrix Given Row and Column Sums]]
  :PROPERTIES:
  :CUSTOM_ID: find-valid-matrix-given-row-and-column-sums
  :END:
[[./solution/1600-1699/1605.Find Valid Matrix Given Row and Column Sums/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given two arrays rowSum and colSum of non-negative integers
where rowSum[i] is the sum of the elements in the ith row and colSum[j]
is the sum of the elements of the jth column of a 2D matrix. In other
words, you do not know the elements of the matrix, but you do know the
sums of each row and column.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Find any matrix of non-negative integers of size rowSum.length x
colSum.length that satisfies the rowSum and colSum requirements.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return a 2D array representing any matrix that fulfills the
requirements. It's guaranteed that at least one matrix that fulfills the
requirements exists.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rowSum = [3,8], colSum = [4,7]
  <strong>Output:</strong> [[3,0],
           [1,7]]
  <strong>Explanation:</strong>
  0th row: 3 + 0 = 3 == rowSum[0]
  1st row: 1 + 7 = 8 == rowSum[1]
  0th column: 3 + 1 = 4 == colSum[0]
  1st column: 0 + 7 = 7 == colSum[1]
  The row and column sums match, and all matrix elements are non-negative.
  Another possible matrix is: [[1,2],
                               [3,5]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rowSum = [5,7,10], colSum = [8,6,8]
  <strong>Output:</strong> [[0,5,0],
           [6,1,0],
           [2,0,8]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rowSum = [14,9], colSum = [6,9,8]
  <strong>Output:</strong> [[0,9,5],
           [6,0,3]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rowSum = [1,0], colSum = [1]
  <strong>Output:</strong> [[1],
           [0]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> rowSum = [0], colSum = [0]
  <strong>Output:</strong> [[0]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rowSum.length, colSum.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= rowSum[i], colSum[i] <= 108

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sum(rows) == sum(columns)

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
