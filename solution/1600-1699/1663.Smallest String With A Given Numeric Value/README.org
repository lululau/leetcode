* [[https://leetcode-cn.com/problems/smallest-string-with-a-given-numeric-value][1663.
具有给定数值的最小字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 具有给定数值的最小字符串
  :END:
[[./solution/1600-1699/1663.Smallest String With A Given Numeric Value/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

小写字符 的 数值 是它在字母表中的位置（从 1 开始），因此 a 的数值为 1
，b 的数值为 2 ，c 的数值为 3 ，以此类推。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

字符串由若干小写字符组成，字符串的数值 为各字符的数值之和。例如，字符串
"abe" 的数值等于 1 + 2 + 5 = 8 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你两个整数 n 和 k 。返回 长度 等于 n 且 数值 等于 k 的 字典序最小
的字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，如果字符串 x 在字典排序中位于 y 之前，就认为 x 字典序比 y
小，有以下两种情况：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

x 是 y 的一个前缀；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 i 是 x[i] != y[i] 的第一个位置，且
x[i] 在字母表中的位置比 y[i] 靠前。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 3, k = 27
  <strong>输出：</strong>"aay"
  <strong>解释：</strong>字符串的数值为 1 + 1 + 25 = 27，它是数值满足要求且长度等于 3 字典序最小的字符串。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 5, k = 73
  <strong>输出：</strong>"aaszz"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n <= k <= 26 * n

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
