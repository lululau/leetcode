* [[https://leetcode.com/problems/minimum-jumps-to-reach-home][1654.
Minimum Jumps to Reach Home]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-jumps-to-reach-home
  :END:
[[./solution/1600-1699/1654.Minimum Jumps to Reach Home/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A certain bug's home is on the x-axis at position x. Help them get there
from position 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The bug jumps according to the following rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

It can jump exactly a positions forward (to the right).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It can jump exactly b positions backward (to the left).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It cannot jump backward twice in a row.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It cannot jump to any forbidden positions.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The bug may jump forward beyond its home, but it cannot jump to
positions numbered with negative integers.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an array of integers forbidden, where forbidden[i] means that the
bug cannot jump to the position forbidden[i], and integers a, b, and x,
return the minimum number of jumps needed for the bug to reach its home.
If there is no possible sequence of jumps that lands the bug on position
x, return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> 3 jumps forward (0 -&gt; 3 -&gt; 6 -&gt; 9) will get the bug home.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> forbidden = [8,3,16,6,12,20], a = 15, b = 13, x = 11
  <strong>Output:</strong> -1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x = 7
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> One jump forward (0 -&gt; 16) then one jump backward (16 -&gt; 7) will get the bug home.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= forbidden.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= a, b, forbidden[i] <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= x <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the elements in forbidden are distinct.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Position x is not forbidden.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
