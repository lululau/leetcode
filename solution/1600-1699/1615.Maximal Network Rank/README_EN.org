* [[https://leetcode.com/problems/maximal-network-rank][1615. Maximal
Network Rank]]
  :PROPERTIES:
  :CUSTOM_ID: maximal-network-rank
  :END:
[[./solution/1600-1699/1615.Maximal Network Rank/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is an infrastructure of n cities with some number of roads
connecting these cities. Each roads[i] = [ai, bi] indicates that there
is a bidirectional road between cities ai and bi.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The network rank of two different cities is defined as the total number
of directly connected roads to either city. If a road is directly
connected to both cities, it is only counted once.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The maximal network rank of the infrastructure is the maximum network
rank of all pairs of different cities.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given the integer n and the array roads, return the maximal network rank
of the entire infrastructure.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> The network rank of cities 0 and 1 is 4 as there are 4 roads that are connected to either 0 or 1. The road between 0 and 1 is only counted once.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> There are 5 roads that are connected to cities 1 or 2.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The network rank of 2 and 5 is 5. Notice that all the cities do not have to be connected.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= roads.length <= n * (n - 1) / 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

roads[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= ai, bi <= n-1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ai != bi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Each pair of cities has at most one road connecting them.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
