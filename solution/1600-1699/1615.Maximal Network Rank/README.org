* [[https://leetcode-cn.com/problems/maximal-network-rank][1615.
最大网络秩]]
  :PROPERTIES:
  :CUSTOM_ID: 最大网络秩
  :END:
[[./solution/1600-1699/1615.Maximal Network Rank/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

n 座城市和一些连接这些城市的道路 roads 共同组成一个基础设施网络。每个
roads[i] = [ai, bi] 都表示在城市 ai 和 bi 之间有一条双向道路。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

两座不同城市构成的 城市对 的 网络秩 定义为：与这两座城市 直接
相连的道路总数。如果存在一条道路直接连接这两座城市，则这条道路只计算
一次 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

整个基础设施网络的 最大网络秩 是所有不同城市对中的 最大网络秩 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你整数 n 和数组 roads，返回整个基础设施网络的 最大网络秩 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]
  <strong>输出：</strong>4
  <strong>解释：</strong>城市 0 和 1 的网络秩是 4，因为共有 4 条道路与城市 0 或 1 相连。位于 0 和 1 之间的道路只计算一次。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]
  <strong>输出：</strong>5
  <strong>解释：</strong>共有 5 条道路与城市 1 或 2 相连。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]
  <strong>输出：</strong>5
  <strong>解释：</strong>2 和 5 的网络秩为 5，注意并非所有的城市都需要连接起来。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= roads.length <= n * (n - 1) / 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

roads[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= ai, bi <= n-1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ai != bi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每对城市之间 最多只有一条 道路相连

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
