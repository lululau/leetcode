* [[https://leetcode.com/problems/determine-if-two-strings-are-close][1657.
Determine if Two Strings Are Close]]
  :PROPERTIES:
  :CUSTOM_ID: determine-if-two-strings-are-close
  :END:
[[./solution/1600-1699/1657.Determine if Two Strings Are Close/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Two strings are considered close if you can attain one from the other
using the following operations:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Operation 1: Swap any two existing characters.

#+begin_example
  <ul>
      <li>For example, <code>a<u>b</u>cd<u>e</u> -&gt; a<u>e</u>cd<u>b</u></code></li>
  </ul>
  </li>
  <li>Operation 2: Transform <strong>every</strong> occurrence of one <strong>existing</strong> character into another <strong>existing</strong> character, and do the same with the other character.
  <ul>
      <li>For example, <code><u>aa</u>c<u>abb</u> -&gt; <u>bb</u>c<u>baa</u></code> (all <code>a</code>&#39;s turn into <code>b</code>&#39;s, and all <code>b</code>&#39;s turn into <code>a</code>&#39;s)</li>
  </ul>
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

You can use the operations on either string as many times as necessary.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given two strings, word1 and word2, return true if word1 and word2 are
close, and false otherwise.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word1 = &quot;abc&quot;, word2 = &quot;bca&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> You can attain word2 from word1 in 2 operations.
  Apply Operation 1: &quot;a<u>bc</u>&quot; -&gt; &quot;a<u>cb</u>&quot;
  Apply Operation 1: &quot;<u>a</u>c<u>b</u>&quot; -&gt; &quot;<u>b</u>c<u>a</u>&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word1 = &quot;a&quot;, word2 = &quot;aa&quot;
  <strong>Output:</strong> false
  <strong>Explanation: </strong>It is impossible to attain word2 from word1, or vice versa, in any number of operations.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word1 = &quot;cabbba&quot;, word2 = &quot;abbccc&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> You can attain word2 from word1 in 3 operations.
  Apply Operation 1: &quot;ca<u>b</u>bb<u>a</u>&quot; -&gt; &quot;ca<u>a</u>bb<u>b</u>&quot;
  <code>Apply Operation 2: &quot;</code><u>c</u>aa<u>bbb</u>&quot; -&gt; &quot;<u>b</u>aa<u>ccc</u>&quot;
  Apply Operation 2: &quot;<u>baa</u>ccc&quot; -&gt; &quot;<u>abb</u>ccc&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word1 = &quot;cabbba&quot;, word2 = &quot;aabbss&quot;
  <strong>Output:</strong> false
  <strong>Explanation: </strong>It is impossible to attain word2 from word1, or vice versa, in any amount of operations.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word1.length, word2.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word1 and word2 contain only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
