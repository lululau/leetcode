* [[https://leetcode.com/problems/richest-customer-wealth][1672. Richest
Customer Wealth]]
  :PROPERTIES:
  :CUSTOM_ID: richest-customer-wealth
  :END:
[[./solution/1600-1699/1672.Richest Customer Wealth/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an m x n integer grid accounts where accounts[i][j] is the
amount of money the i​​​​​​​​​​​th​​​​ customer has in the
j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer
has.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A customer's wealth is the amount of money they have in all their bank
accounts. The richest customer is the customer that has the maximum
wealth.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> accounts = [[1,2,3],[3,2,1]]
  <strong>Output:</strong> 6
  <strong>Explanation</strong><strong>:</strong>
  <code>1st customer has wealth = 1 + 2 + 3 = 6
  </code><code>2nd customer has wealth = 3 + 2 + 1 = 6
  </code>Both customers are considered the richest with a wealth of 6 each, so return 6.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> accounts = [[1,5],[7,3],[3,5]]
  <strong>Output:</strong> 10
  <strong>Explanation</strong>: 
  1st customer has wealth = 6
  2nd customer has wealth = 10 
  3rd customer has wealth = 8
  The 2nd customer is the richest with a wealth of 10.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> accounts = [[2,8,7],[7,1,3],[1,9,5]]
  <strong>Output:</strong> 17
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == accounts.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == accounts[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= accounts[i][j] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
