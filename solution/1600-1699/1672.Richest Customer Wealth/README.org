* [[https://leetcode-cn.com/problems/richest-customer-wealth][1672.
最富有客户的资产总量]]
  :PROPERTIES:
  :CUSTOM_ID: 最富有客户的资产总量
  :END:
[[./solution/1600-1699/1672.Richest Customer Wealth/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个 m x n 的整数网格 accounts ，其中 accounts[i][j] 是第
i​​​​​​​​​​​​ 位客户在第 j 家银行托管的资产数量。返回最富有客户所拥有的
资产总量 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

客户的 资产总量 就是他们在各家银行托管的资产数量之和。最富有客户就是
资产总量 最大的客户。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>accounts = [[1,2,3],[3,2,1]]
  <strong>输出：</strong>6
  <strong>解释：</strong>
  <code>第 1 位客户的资产总量 = 1 + 2 + 3 = 6
  第 2 位客户的资产总量 = 3 + 2 + 1 = 6
  </code>两位客户都是最富有的，资产总量都是 6 ，所以返回 6 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>accounts = [[1,5],[7,3],[3,5]]
  <strong>输出：</strong>10
  <strong>解释：</strong>
  <code>第 1 位客户的资产总量</code> = 6
  <code>第 2 位客户的资产总量</code> = 10 
  <code>第 3 位客户的资产总量</code> = 8
  第 2 位客户是最富有的，资产总量是 10</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>accounts = [[2,8,7],[7,1,3],[1,9,5]]
  <strong>输出：</strong>17
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == accounts.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == accounts[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= accounts[i][j] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
