* [[https://leetcode.com/problems/slowest-key][1629. Slowest Key]]
  :PROPERTIES:
  :CUSTOM_ID: slowest-key
  :END:
[[./solution/1600-1699/1629.Slowest Key/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A newly designed keypad was tested, where a tester pressed a sequence of
n keys, one at a time.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given a string keysPressed of length n, where keysPressed[i] was
the ith key pressed in the testing sequence, and a sorted list
releaseTimes, where releaseTimes[i] was the time the ith key was
released. Both arrays are 0-indexed. The 0th key was pressed at the time
0, and every subsequent key was pressed at the exact time the previous
key was released.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The tester wants to know the key of the keypress that had the longest
duration. The ith keypress had a duration of releaseTimes[i] -
releaseTimes[i - 1], and the 0th keypress had a duration of
releaseTimes[0].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that the same key could have been pressed multiple times during the
test, and these multiple presses of the same key may not have had the
same duration.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the key of the keypress that had the longest duration. If there
are multiple such keypresses, return the lexicographically largest key
of the keypresses.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> releaseTimes = [9,29,49,50], keysPressed = &quot;cbcd&quot;
  <strong>Output:</strong> &quot;c&quot;
  <strong>Explanation:</strong> The keypresses were as follows:
  Keypress for &#39;c&#39; had a duration of 9 (pressed at time 0 and released at time 9).
  Keypress for &#39;b&#39; had a duration of 29 - 9 = 20 (pressed at time 9 right after the release of the previous character and released at time 29).
  Keypress for &#39;c&#39; had a duration of 49 - 29 = 20 (pressed at time 29 right after the release of the previous character and released at time 49).
  Keypress for &#39;d&#39; had a duration of 50 - 49 = 1 (pressed at time 49 right after the release of the previous character and released at time 50).
  The longest of these was the keypress for &#39;b&#39; and the second keypress for &#39;c&#39;, both with duration 20.
  &#39;c&#39; is lexicographically larger than &#39;b&#39;, so the answer is &#39;c&#39;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> releaseTimes = [12,23,36,46,62], keysPressed = &quot;spuda&quot;
  <strong>Output:</strong> &quot;a&quot;
  <strong>Explanation:</strong> The keypresses were as follows:
  Keypress for &#39;s&#39; had a duration of 12.
  Keypress for &#39;p&#39; had a duration of 23 - 12 = 11.
  Keypress for &#39;u&#39; had a duration of 36 - 23 = 13.
  Keypress for &#39;d&#39; had a duration of 46 - 36 = 10.
  Keypress for &#39;a&#39; had a duration of 62 - 46 = 16.
  The longest of these was the keypress for &#39;a&#39; with duration 16.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

releaseTimes.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

keysPressed.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= releaseTimes[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

releaseTimes[i] < releaseTimes[i+1]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

keysPressed contains only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
