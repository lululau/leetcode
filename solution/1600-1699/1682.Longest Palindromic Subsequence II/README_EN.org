* [[https://leetcode.com/problems/longest-palindromic-subsequence-ii][1682.
Longest Palindromic Subsequence II]]
  :PROPERTIES:
  :CUSTOM_ID: longest-palindromic-subsequence-ii
  :END:
[[./solution/1600-1699/1682.Longest Palindromic Subsequence II/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A subsequence of a string s is considered a good palindromic subsequence
if:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

It is a subsequence of s.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It is a palindrome (has the same value if reversed).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It has an even length.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

No two consecutive characters are equal, except the two middle ones.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if s = "abcabcabb", then "abba" is considered a good
palindromic subsequence, while "bcb" (not even length) and "bbbb" (has
equal consecutive characters) are not.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a string s, return the length of the longest good palindromic
subsequence in s.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;bbabab&quot;

  <strong>Output:</strong> 4

  <strong>Explanation:</strong> The longest good palindromic subsequence of s is &quot;baab&quot;.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;dcbccacdb&quot;

  <strong>Output:</strong> 4

  <strong>Explanation:</strong> The longest good palindromic subsequence of s is &quot;dccd&quot;.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 250

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
