* [[https://leetcode-cn.com/problems/longest-palindromic-subsequence-ii][1682.
最长回文子序列 II]]
  :PROPERTIES:
  :CUSTOM_ID: 最长回文子序列-ii
  :END:
[[./solution/1600-1699/1682.Longest Palindromic Subsequence II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

字符串 s 的某个子序列符合下列条件时，称为“好的回文子序列”：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

它是 s 的子序列。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

它是回文序列（反转后与原序列相等）。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

长度为偶数。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

除中间的两个字符外，其余任意两个连续字符不相等。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

例如，若 s =
"abcabcabb"，则 "abba" 可称为“好的回文子序列”，而 "bcb" （长度不是偶数）和 "bbbb" （含有相等的连续字符）不能称为“好的回文子序列”。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一个字符串 s， 返回 s 的最长“好的回文子序列”的长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> s = "bbabab"
  <strong>输出:</strong> 4
  <strong>解释:</strong> s 的最长“好的回文子序列”是 "baab"。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> s = "dcbccacdb"
  <strong>输出:</strong> 4
  <strong>解释:</strong> The longest good palindromic subsequence of s is "dccd".
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 250

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 包含小写英文字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
