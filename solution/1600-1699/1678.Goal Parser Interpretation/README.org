* [[https://leetcode-cn.com/problems/goal-parser-interpretation][1678.
设计 Goal 解析器]]
  :PROPERTIES:
  :CUSTOM_ID: 设计-goal-解析器
  :END:
[[./solution/1600-1699/1678.Goal Parser Interpretation/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

请你设计一个可以解释字符串 command 的 Goal 解析器 。command 由 "G"、"()"
和/或 "(al)" 按某种顺序组成。Goal 解析器会将 "G" 解释为字符串 "G"、"()"
解释为字符串 "o" ，"(al)" 解释为字符串 "al"
。然后，按原顺序将经解释得到的字符串连接成一个字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你字符串 command ，返回 Goal 解析器 对 command 的解释结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>command = "G()(al)"
  <strong>输出：</strong>"Goal"
  <strong>解释：</strong>Goal 解析器解释命令的步骤如下所示：
  G -&gt; G
  () -&gt; o
  (al) -&gt; al
  最后连接得到的结果是 "Goal"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>command = "G()()()()(al)"
  <strong>输出：</strong>"Gooooal"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>command = "(al)G(al)()()G"
  <strong>输出：</strong>"alGalooG"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= command.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

command 由 "G"、"()" 和/或 "(al)" 按某种顺序组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
