* [[https://leetcode.com/problems/rank-transform-of-a-matrix][1632. Rank
Transform of a Matrix]]
  :PROPERTIES:
  :CUSTOM_ID: rank-transform-of-a-matrix
  :END:
[[./solution/1600-1699/1632.Rank Transform of a Matrix/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an m x n matrix, return a new matrix answer where answer[row][col]
is the rank of matrix[row][col].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The rank is an integer that represents how large an element is compared
to other elements. It is calculated using the following rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The rank is an integer starting from 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If two elements p and q are in the same row or column, then:

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

If p < q then rank(p) < rank(q)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If p == q then rank(p) == rank(q)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If p > q then rank(p) > rank(q)

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_example
  </li>
  <li>The <strong>rank</strong> should be as <strong>small</strong> as possible.</li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

It is guaranteed that answer is unique under the given rules.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[1,2],[3,4]]
  <strong>Output:</strong> [[1,2],[2,3]]
  <strong>Explanation:</strong>
  The rank of matrix[0][0] is 1 because it is the smallest integer in its row and column.
  The rank of matrix[0][1] is 2 because matrix[0][1] &gt; matrix[0][0] and matrix[0][0] is rank 1.
  The rank of matrix[1][0] is 2 because matrix[1][0] &gt; matrix[0][0] and matrix[0][0] is rank 1.
  The rank of matrix[1][1] is 3 because matrix[1][1] &gt; matrix[0][1], matrix[1][1] &gt; matrix[1][0], and both matrix[0][1] and matrix[1][0] are rank 2.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[7,7],[7,7]]
  <strong>Output:</strong> [[1,1],[1,1]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[20,-21,14],[-19,4,19],[22,-47,24],[-19,4,19]]
  <strong>Output:</strong> [[4,2,3],[1,3,4],[5,1,6],[1,3,4]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[7,3,6],[1,4,5],[9,8,2]]
  <strong>Output:</strong> [[5,1,4],[1,2,3],[6,3,1]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == matrix.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == matrix[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= matrix[row][col] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
