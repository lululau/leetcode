* [[https://leetcode-cn.com/problems/minimum-initial-energy-to-finish-tasks][1665.
完成所有任务的最少初始能量]]
  :PROPERTIES:
  :CUSTOM_ID: 完成所有任务的最少初始能量
  :END:
[[./solution/1600-1699/1665.Minimum Initial Energy to Finish Tasks/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个任务数组 tasks ，其中 tasks[i] = [actuali, minimumi] ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

actuali 是完成第 i 个任务 需要耗费 的实际能量。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

minimumi 是开始第 i 个任务前需要达到的最低能量。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

比方说，如果任务为 [10,
12] 且你当前的能量为 11 ，那么你不能开始这个任务。如果你当前的能量为 13 ，你可以完成这个任务，且完成它后剩余能量为
3 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以按照 任意顺序 完成任务。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回完成所有任务的 最少 初始能量。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>tasks = [[1,2],[2,4],[4,8]]
  <b>输出：</b>8
  <strong>解释：</strong>
  一开始有 8 能量，我们按照如下顺序完成任务：
      - 完成第 3 个任务，剩余能量为 8 - 4 = 4 。
      - 完成第 2 个任务，剩余能量为 4 - 2 = 2 。
      - 完成第 1 个任务，剩余能量为 2 - 1 = 1 。
  注意到尽管我们有能量剩余，但是如果一开始只有 7 能量是不能完成所有任务的，因为我们无法开始第 3 个任务。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>tasks = [[1,3],[2,4],[10,11],[10,12],[8,9]]
  <b>输出：</b>32
  <strong>解释：</strong>
  一开始有 32 能量，我们按照如下顺序完成任务：
      - 完成第 1 个任务，剩余能量为 32 - 1 = 31 。
      - 完成第 2 个任务，剩余能量为 31 - 2 = 29 。
      - 完成第 3 个任务，剩余能量为 29 - 10 = 19 。
      - 完成第 4 个任务，剩余能量为 19 - 10 = 9 。
      - 完成第 5 个任务，剩余能量为 9 - 8 = 1 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>tasks = [[1,7],[2,8],[3,9],[4,10],[5,11],[6,12]]
  <b>输出：</b>27
  <strong>解释：</strong>
  一开始有 27 能量，我们按照如下顺序完成任务：
      - 完成第 5 个任务，剩余能量为 27 - 5 = 22 。
      - 完成第 2 个任务，剩余能量为 22 - 2 = 20 。
      - 完成第 3 个任务，剩余能量为 20 - 3 = 17 。
      - 完成第 1 个任务，剩余能量为 17 - 1 = 16 。
      - 完成第 4 个任务，剩余能量为 16 - 4 = 12 。
      - 完成第 6 个任务，剩余能量为 12 - 6 = 6 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= tasks.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= actual​i <= minimumi <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
