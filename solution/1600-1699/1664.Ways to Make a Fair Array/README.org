* [[https://leetcode-cn.com/problems/ways-to-make-a-fair-array][1664.
生成平衡数组的方案数]]
  :PROPERTIES:
  :CUSTOM_ID: 生成平衡数组的方案数
  :END:
[[./solution/1600-1699/1664.Ways to Make a Fair Array/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 。你需要选择 恰好 一个下标（下标从
0 开始）并删除对应的元素。请注意剩下元素的下标可能会因为删除操作而发生改变。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

比方说，如果 nums = [6,1,7,4,1] ，那么：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

选择删除下标 1 ，剩下的数组为 nums = [6,7,4,1] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

选择删除下标 2 ，剩下的数组为 nums = [6,1,4,1] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

选择删除下标 4 ，剩下的数组为 nums = [6,1,7,4] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

如果一个数组满足奇数下标元素的和与偶数下标元素的和相等，该数组就是一个
平衡数组 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回删除操作后，剩下的数组 nums 是 平衡数组 的 方案数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>nums = [2,1,6,4]
  <b>输出：</b>1
  <strong>解释：</strong>
  删除下标 0 ：[1,6,4] -> 偶数元素下标为：1 + 4 = 5 。奇数元素下标为：6 。不平衡。
  删除下标 1 ：[2,6,4] -> 偶数元素下标为：2 + 4 = 6 。奇数元素下标为：6 。平衡。
  删除下标 2 ：[2,1,4] -> 偶数元素下标为：2 + 4 = 6 。奇数元素下标为：1 。不平衡。
  删除下标 3 ：[2,1,6] -> 偶数元素下标为：2 + 6 = 8 。奇数元素下标为：1 。不平衡。
  只有一种让剩余数组成为平衡数组的方案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>nums = [1,1,1]
  <b>输出：</b>3
  <b>解释：</b>你可以删除任意元素，剩余数组都是平衡数组。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>nums = [1,2,3]
  <b>输出：</b>0
  <b>解释：</b>不管删除哪个元素，剩下数组都不是平衡数组。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
