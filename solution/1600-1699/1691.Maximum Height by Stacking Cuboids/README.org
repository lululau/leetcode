* [[https://leetcode-cn.com/problems/maximum-height-by-stacking-cuboids][1691.
堆叠长方体的最大高度]]
  :PROPERTIES:
  :CUSTOM_ID: 堆叠长方体的最大高度
  :END:
[[./solution/1600-1699/1691.Maximum Height by Stacking Cuboids/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你 n 个长方体 cuboids ，其中第 i 个长方体的长宽高表示为 cuboids[i] =
[widthi, lengthi, heighti]（下标从 0 开始）。请你从 cuboids 选出一个
子集 ，并将它们堆叠起来。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果 widthi <= widthj 且 lengthi <= lengthj 且 heighti <= heightj
，你就可以将长方体 i 堆叠在长方体 j
上。你可以通过旋转把长方体的长宽高重新排列，以将它放在另一个长方体上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回 堆叠长方体 cuboids 可以得到的 最大高度 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cuboids = [[50,45,20],[95,37,53],[45,23,12]]
  <strong>输出：</strong>190
  <strong>解释：</strong>
  第 1 个长方体放在底部，53x37 的一面朝下，高度为 95 。
  第 0 个长方体放在中间，45x20 的一面朝下，高度为 50 。
  第 2 个长方体放在上面，23x12 的一面朝下，高度为 45 。
  总高度是 95 + 50 + 45 = 190 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cuboids = [[38,25,45],[76,35,3]]
  <strong>输出：</strong>76
  <strong>解释：</strong>
  无法将任何长方体放在另一个上面。
  选择第 1 个长方体然后旋转它，使 35x3 的一面朝下，其高度为 76 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>cuboids = [[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]
  <strong>输出：</strong>102
  <strong>解释：</strong>
  重新排列长方体后，可以看到所有长方体的尺寸都相同。
  你可以把 11x7 的一面朝下，这样它们的高度就是 17 。
  堆叠长方体的最大高度为 6 * 17 = 102 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == cuboids.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= widthi, lengthi, heighti <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
