* [[https://leetcode.com/problems/change-the-root-of-a-binary-tree][1666.
Change the Root of a Binary Tree]]
  :PROPERTIES:
  :CUSTOM_ID: change-the-root-of-a-binary-tree
  :END:
[[./solution/1600-1699/1666.Change the Root of a Binary Tree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given the root of a binary tree and a leaf node, reroot the tree so that
the leaf is the new root.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can reroot the tree with the following steps for each node cur on
the path starting from the leaf up to the root​​​ excluding the root:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

If cur has a left child, then that child becomes cur's right child.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cur's original parent becomes cur's left child. Note that in this
process the original parent's pointer to cur becomes null, making it
have at most one child.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

Return the new root of the rerooted tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: Ensure that your solution sets the Node.parent pointers correctly
after rerooting or you will receive "Wrong Answer".

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], leaf = 7
  <strong>Output:</strong> [7,2,null,5,4,3,6,null,null,null,1,null,null,0,8]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], leaf = 0
  <strong>Output:</strong> [0,1,null,3,8,5,null,null,null,6,2,null,null,7,4]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the tree is in the range [2, 100].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= Node.val <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All Node.val are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

leaf exist in the tree.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
