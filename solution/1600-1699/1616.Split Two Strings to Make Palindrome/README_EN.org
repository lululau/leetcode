* [[https://leetcode.com/problems/split-two-strings-to-make-palindrome][1616.
Split Two Strings to Make Palindrome]]
  :PROPERTIES:
  :CUSTOM_ID: split-two-strings-to-make-palindrome
  :END:
[[./solution/1600-1699/1616.Split Two Strings to Make Palindrome/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given two strings a and b of the same length. Choose an index
and split both strings at the same index, splitting a into two strings:
aprefix and asuffix where a = aprefix + asuffix, and splitting b into
two strings: bprefix and bsuffix where b = bprefix + bsuffix. Check if
aprefix + bsuffix or bprefix + asuffix forms a palindrome.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

When you split a string s into sprefix and ssuffix, either ssuffix or
sprefix is allowed to be empty. For example, if s = "abc", then "" +
"abc", "a" + "bc", "ab" + "c" , and "abc" + "" are valid splits.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if it is possible to form a palindrome string, otherwise
return false.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Notice that x + y denotes the concatenation of strings x and y.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = &quot;x&quot;, b = &quot;y&quot;
  <strong>Output:</strong> true
  <strong>Explaination:</strong> If either a or b are palindromes the answer is true since you can split in the following way:
  a<sub>prefix</sub> = &quot;&quot;, a<sub>suffix</sub> = &quot;x&quot;
  b<sub>prefix</sub> = &quot;&quot;, b<sub>suffix</sub> = &quot;y&quot;
  Then, a<sub>prefix</sub> + b<sub>suffix</sub> = &quot;&quot; + &quot;y&quot; = &quot;y&quot;, which is a palindrome.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = &quot;abdef&quot;, b = &quot;fecab&quot;
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = &quot;ulacfd&quot;, b = &quot;jizalu&quot;
  <strong>Output:</strong> true
  <strong>Explaination:</strong> Split them at index 3:
  a<sub>prefix</sub> = &quot;ula&quot;, a<sub>suffix</sub> = &quot;cfd&quot;
  b<sub>prefix</sub> = &quot;jiz&quot;, b<sub>suffix</sub> = &quot;alu&quot;
  Then, a<sub>prefix</sub> + b<sub>suffix</sub> = &quot;ula&quot; + &quot;alu&quot; = &quot;ulaalu&quot;, which is a palindrome.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = &quot;xbdef&quot;, b = &quot;xecab&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= a.length, b.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

a.length == b.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

a and b consist of lowercase English letters

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
