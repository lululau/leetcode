* [[https://leetcode-cn.com/problems/split-two-strings-to-make-palindrome][1616.
分割两个字符串得到回文串]]
  :PROPERTIES:
  :CUSTOM_ID: 分割两个字符串得到回文串
  :END:
[[./solution/1600-1699/1616.Split Two Strings to Make Palindrome/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个字符串 a
和 b ，它们长度相同。请你选择一个下标，将两个字符串都在 相同的下标
分割开。由 a 可以得到两个字符串： aprefix 和 asuffix ，满足 a = aprefix
+ asuffix ，同理，由 b 可以得到两个字符串 bprefix 和 bsuffix ，满足 b =
bprefix + bsuffix 。请你判断 aprefix + bsuffix 或者 bprefix +
asuffix 能否构成回文串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

当你将一个字符串 s 分割成 sprefix 和 ssuffix 时， ssuffix 或者 sprefix
可以为空。比方说， s = "abc" 那么 “” + "abc" ， "a" + "bc" ， "ab" +
"c" 和 "abc" + ““ 都是合法分割。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果 能构成回文字符串 ，那么请返回 true，否则返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意， x + y 表示连接字符串 x 和 y 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>a = "x", b = "y"
  <b>输出：</b>true
  <b>解释：</b>如果 a 或者 b 是回文串，那么答案一定为 true ，因为你可以如下分割：
  a<sub>prefix</sub> = "", a<sub>suffix</sub> = "x"
  b<sub>prefix</sub> = "", b<sub>suffix</sub> = "y"
  那么 a<sub>prefix</sub> + b<sub>suffix</sub> = "" + "y" = "y" 是回文串。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>a = "abdef", b = "fecab"
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>a = "ulacfd", b = "jizalu"
  <b>输出：</b>true
  <b>解释：</b>在下标为 3 处分割：
  a<sub>prefix</sub> = "ula", a<sub>suffix</sub> = "cfd"
  b<sub>prefix</sub> = "jiz", b<sub>suffix</sub> = "alu"
  那么 a<sub>prefix</sub> + b<sub>suffix</sub> = "ula" + "alu" = "ulaalu" 是回文串。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>a = "xbdef", b = "xecab"
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= a.length, b.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

a.length == b.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

a 和 b 都只包含小写英文字母

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
