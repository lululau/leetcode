* [[https://leetcode.com/problems/maximum-number-of-achievable-transfer-requests][1601.
Maximum Number of Achievable Transfer Requests]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-number-of-achievable-transfer-requests
  :END:
[[./solution/1600-1699/1601.Maximum Number of Achievable Transfer Requests/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We have n buildings numbered from 0 to n - 1. Each building has a number
of employees. It's transfer season, and some employees want to change
the building they reside in.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given an array requests where requests[i] = [fromi, toi]
represents an employee's request to transfer from building fromi to
building toi.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

All buildings are full, so a list of requests is achievable only if for
each building, the net change in employee transfers is zero. This means
the number of employees leaving is equal to the number of employees
moving in. For example if n = 3 and two employees are leaving building
0, one is leaving building 1, and one is leaving building 2, there
should be two employees moving to building 0, one employee moving to
building 1, and one employee moving to building 2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum number of achievable requests.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, requests = [[0,1],[1,0],[0,1],[1,2],[2,0],[3,4]]
  <strong>Output:</strong> 5
  <strong>Explantion:</strong> Let&#39;s see the requests:
  From building 0 we have employees x and y and both want to move to building 1.
  From building 1 we have employees a and b and they want to move to buildings 2 and 0 respectively.
  From building 2 we have employee z and they want to move to building 0.
  From building 3 we have employee c and they want to move to building 4.
  From building 4 we don&#39;t have any requests.
  We can achieve the requests of users x and b by swapping their places.
  We can achieve the requests of users y, a and z by swapping the places in the 3 buildings.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 3, requests = [[0,0],[1,2],[2,1]]
  <strong>Output:</strong> 3
  <strong>Explantion:</strong> Let&#39;s see the requests:
  From building 0 we have employee x and they want to stay in the same building 0.
  From building 1 we have employee y and they want to move to building 2.
  From building 2 we have employee z and they want to move to building 1.
  We can achieve all the requests. </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, requests = [[0,3],[3,1],[1,2],[2,0]]
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= requests.length <= 16

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

requests[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= fromi, toi < n

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
