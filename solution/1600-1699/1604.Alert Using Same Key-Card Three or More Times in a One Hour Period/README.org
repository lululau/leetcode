* [[https://leetcode-cn.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period][1604.
警告一小时内使用相同员工卡大于等于三次的人]]
  :PROPERTIES:
  :CUSTOM_ID: 警告一小时内使用相同员工卡大于等于三次的人
  :END:
[[./solution/1600-1699/1604.Alert Using Same Key-Card Three or More Times in a One Hour Period/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

力扣公司的员工都使用员工卡来开办公室的门。每当一个员工使用一次他的员工卡，安保系统会记录下员工的名字和使用时间。如果一个员工在一小时时间内使用员工卡的次数大于等于三次，这个系统会自动发布一个
警告 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你字符串数组 keyName 和 keyTime ，其中 [keyName[i],
keyTime[i]] 对应一个人的名字和他在 某一天 内使用员工卡的时间。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

使用时间的格式是 24小时制 ，形如 "HH:MM" ，比方说 "23:51" 和 "09:49" 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回去重后的收到系统警告的员工名字，将它们按 字典序升序 排序后返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请注意 "10:00" - "11:00" 视为一个小时时间范围内，而 "23:51" -
"00:10" 不被视为一小时内，因为系统记录的是某一天内的使用情况。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>keyName = ["daniel","daniel","daniel","luis","luis","luis","luis"], keyTime = ["10:00","10:40","11:00","09:00","11:00","13:00","15:00"]
  <strong>输出：</strong>["daniel"]
  <strong>解释：</strong>"daniel" 在一小时内使用了 3 次员工卡（"10:00"，"10:40"，"11:00"）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>keyName = ["alice","alice","alice","bob","bob","bob","bob"], keyTime = ["12:01","12:00","18:00","21:00","21:20","21:30","23:00"]
  <strong>输出：</strong>["bob"]
  <strong>解释：</strong>"bob" 在一小时内使用了 3 次员工卡（"21:00"，"21:20"，"21:30"）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>keyName = ["john","john","john"], keyTime = ["23:58","23:59","00:01"]
  <strong>输出：</strong>[]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>keyName = ["leslie","leslie","leslie","clare","clare","clare","clare"], keyTime = ["13:00","13:20","14:00","18:00","18:51","19:30","19:49"]
  <strong>输出：</strong>["clare","leslie"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= keyName.length, keyTime.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

keyName.length == keyTime.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

keyTime 格式为 "HH:MM" 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

保证 [keyName[i], keyTime[i]] 形成的二元对 互不相同 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= keyName[i].length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

keyName[i] 只包含小写英文字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
