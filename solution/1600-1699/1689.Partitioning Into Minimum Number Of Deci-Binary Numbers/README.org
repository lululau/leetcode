* [[https://leetcode-cn.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers][1689.
十-二进制数的最少数目]]
  :PROPERTIES:
  :CUSTOM_ID: 十-二进制数的最少数目
  :END:
[[./solution/1600-1699/1689.Partitioning Into Minimum Number Of Deci-Binary Numbers/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

如果一个十进制数字不含任何前导零，且每一位上的数字不是 0 就是 1
，那么该数字就是一个 十-二进制数 。例如，101 和 1100 都是
十-二进制数，而 112 和 3001 不是。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个表示十进制整数的字符串 n ，返回和为 n 的 十-二进制数
的最少数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = "32"
  <strong>输出：</strong>3
  <strong>解释：</strong>10 + 11 + 11 = 32
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = "82734"
  <strong>输出：</strong>8
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = "27346209830709182346"
  <strong>输出：</strong>9
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n 仅由数字组成

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n 不含任何前导零并总是表示正整数

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
