* [[https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers][1689.
Partitioning Into Minimum Number Of Deci-Binary Numbers]]
  :PROPERTIES:
  :CUSTOM_ID: partitioning-into-minimum-number-of-deci-binary-numbers
  :END:
[[./solution/1600-1699/1689.Partitioning Into Minimum Number Of Deci-Binary Numbers/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A decimal number is called deci-binary if each of its digits is either 0
or 1 without any leading zeros. For example, 101 and 1100 are
deci-binary, while 112 and 3001 are not.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a string n that represents a positive decimal integer, return the
minimum number of positive deci-binary numbers needed so that they sum
up to n.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = &quot;32&quot;

  <strong>Output:</strong> 3

  <strong>Explanation:</strong> 10 + 11 + 11 = 32

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = &quot;82734&quot;

  <strong>Output:</strong> 8

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = &quot;27346209830709182346&quot;

  <strong>Output:</strong> 9

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n consists of only digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n does not contain any leading zeros and represents a positive integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
