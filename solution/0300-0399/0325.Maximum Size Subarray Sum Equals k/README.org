* [[https://leetcode-cn.com/problems/maximum-size-subarray-sum-equals-k][325.
和等于 k 的最长子数组长度]]
  :PROPERTIES:
  :CUSTOM_ID: 和等于-k-的最长子数组长度
  :END:
[[./solution/0300-0399/0325.Maximum Size Subarray Sum Equals k/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个数组 nums 和一个目标值 k，找到和等于 k
的最长子数组长度。如果不存在任意一个符合要求的子数组，则返回 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意:  nums 数组的总和是一定在 32 位有符号整数范围之内的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong><em>nums</em> = <code>[1, -1, 5, -2, 3]</code>, <em>k</em> = <code>3</code>
  <strong>输出: </strong>4 
  <strong>解释: </strong>子数组 <code>[1, -1, 5, -2]</code> 和等于 3，且长度最长。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong><em>nums</em> = <code>[-2, -1, 2, 1]</code>, <em>k</em> = <code>1</code>
  <strong>输出: </strong>2 <strong>
  解释: </strong>子数组<code> [-1, 2]</code> 和等于 1，且长度最长。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

进阶: 你能使时间复杂度在 O(n) 内完成此题吗?

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
