* [[https://leetcode-cn.com/problems/data-stream-as-disjoint-intervals][352.
将数据流变为多个不相交区间]]
  :PROPERTIES:
  :CUSTOM_ID: 将数据流变为多个不相交区间
  :END:
[[./solution/0300-0399/0352.Data Stream as Disjoint Intervals/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个非负整数的数据流输入
a1，a2，...，an，...，将到目前为止看到的数字总结为不相交的区间列表。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

例如，假设数据流中的整数为 1，3，7，2，6，...，每次的总结为：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>[1, 1]
  [1, 1], [3, 3]
  [1, 1], [3, 3], [7, 7]
  [1, 3], [7, 7]
  [1, 3], [6, 7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

进阶：
如果有很多合并，并且与数据流的大小相比，不相交区间的数量很小，该怎么办?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示： 特别感谢 @yunhong 提供了本问题和其测试用例。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
