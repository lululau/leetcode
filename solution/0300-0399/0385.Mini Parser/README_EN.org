* [[https://leetcode.com/problems/mini-parser][385. Mini Parser]]
  :PROPERTIES:
  :CUSTOM_ID: mini-parser
  :END:
[[./solution/0300-0399/0385.Mini Parser/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string s represents the serialization of a nested list,
implement a parser to deserialize it and return the deserialized
NestedInteger.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Each element is either an integer or a list whose elements may also be
integers or other lists.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;324&quot;
  <strong>Output:</strong> 324
  <strong>Explanation:</strong> You should return a NestedInteger object which contains a single integer 324.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;[123,[456,[789]]]&quot;
  <strong>Output:</strong> [123,[456,[789]]]
  <strong>Explanation:</strong> Return a NestedInteger object containing a nested list with 2 elements:
  1. An integer containing value 123.
  2. A nested list containing two elements:
      i.  An integer containing value 456.
      ii. A nested list with one element:
           a. An integer containing value 789
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of digits, square brackets "[]", negative sign '-', and
commas ','.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s is the serialization of valid NestedInteger.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
