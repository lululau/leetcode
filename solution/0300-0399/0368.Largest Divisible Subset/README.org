* [[https://leetcode-cn.com/problems/largest-divisible-subset][368.
最大整除子集]]
  :PROPERTIES:
  :CUSTOM_ID: 最大整除子集
  :END:
[[./solution/0300-0399/0368.Largest Divisible Subset/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

给你一个由 无重复 正整数组成的集合 nums
，请你找出并返回其中最大的整除子集 answer ，子集中每一元素对 (answer[i],
answer[j]) 都应当满足：

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

answer[i] % answer[j] == 0 ，或

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

answer[j] % answer[i] == 0

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

如果存在多个有效解子集，返回其中任何一个均可。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,2,3]
  <strong>输出：</strong>[1,2]
  <strong>解释：</strong>[1,3] 也会被视为正确答案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,2,4,8]
  <strong>输出：</strong>[1,2,4,8]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 2 * 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums 中的所有整数 互不相同

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
