* [[https://leetcode.com/problems/minimum-height-trees][310. Minimum
Height Trees]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-height-trees
  :END:
[[./solution/0300-0399/0310.Minimum Height Trees/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A tree is an undirected graph in which any two vertices are connected
by exactly one path. In other words, any connected graph without simple
cycles is a tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a tree of n nodes labelled from 0 to n - 1, and an array of n -
1 edges where edges[i] = [ai, bi] indicates that there is an undirected
edge between the two nodes ai and bi in the tree, you can choose any
node of the tree as the root. When you select a node x as the root, the
result tree has height h. Among all possible rooted trees, those with
minimum height (i.e. min(h))  are called minimum height trees (MHTs).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return a list of all MHTs' root labels. You can return the answer in any
order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The height of a rooted tree is the number of edges on the longest
downward path between the root and a leaf.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, edges = [[1,0],[1,2],[1,3]]
  <strong>Output:</strong> [1]
  <strong>Explanation:</strong> As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]
  <strong>Output:</strong> [3,4]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 1, edges = []
  <strong>Output:</strong> [0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 2, edges = [[0,1]]
  <strong>Output:</strong> [0,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges.length == n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= ai, bi < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ai != bi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the pairs (ai, bi) are distinct.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The given input is guaranteed to be a tree and there will be no repeated
edges.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
