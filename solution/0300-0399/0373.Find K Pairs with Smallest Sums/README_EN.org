* [[https://leetcode.com/problems/find-k-pairs-with-smallest-sums][373.
Find K Pairs with Smallest Sums]]
  :PROPERTIES:
  :CUSTOM_ID: find-k-pairs-with-smallest-sums
  :END:
[[./solution/0300-0399/0373.Find K Pairs with Smallest Sums/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given two integer arrays nums1 and nums2 sorted in ascending
order and an integer k.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Define a pair (u, v) which consists of one element from the first array
and one element from the second array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the k pairs (u1, v1), (u2, v2), ..., (uk, vk) with the smallest
sums.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums1 = [1,7,11], nums2 = [2,4,6], k = 3
  <strong>Output:</strong> [[1,2],[1,4],[1,6]]
  <strong>Explanation:</strong> The first 3 pairs are returned from the sequence: [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums1 = [1,1,2], nums2 = [1,2,3], k = 2
  <strong>Output:</strong> [[1,1],[1,1]]
  <strong>Explanation:</strong> The first 2 pairs are returned from the sequence: [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums1 = [1,2], nums2 = [3], k = 3
  <strong>Output:</strong> [[1,3],[2,3]]
  <strong>Explanation:</strong> All possible pairs are returned from the sequence: [1,3],[2,3]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums1.length, nums2.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= nums1[i], nums2[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums1 and nums2 both are sorted in ascending order.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
