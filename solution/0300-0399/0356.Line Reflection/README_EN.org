* [[https://leetcode.com/problems/line-reflection][356. Line
Reflection]]
  :PROPERTIES:
  :CUSTOM_ID: line-reflection
  :END:
[[./solution/0300-0399/0356.Line Reflection/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given n points on a 2D plane, find if there is such a line parallel to
y-axis that reflect the given points symmetrically, in other words,
answer whether or not if there exists a line that after reflecting all
points over the given line the set of the original points is the same
that the reflected ones.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that there can be repeated points.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow up: Could you do better than O(n2) ?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> points = [[1,1],[-1,1]]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> We can choose the line x = 0.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> points = [[1,1],[-1,-1]]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> We can&#39;t choose a line.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == points.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^8 <= points[i][j] <= 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def isReflected(self, points: List[List[int]]) -> bool:
          min_x, max_x = float('inf'), float('-inf')
          point_set = set()
          for x, y in points:
              min_x = min(min_x, x)
              max_x = max(max_x, x)
              point_set.add((x, y))
          s = min_x + max_x
          for x, y in points:
              if (s - x, y) not in point_set:
                  return False
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean isReflected(int[][] points) {
          int minX = Integer.MAX_VALUE, maxX = Integer.MIN_VALUE;
          Set<String> pointSet = new HashSet<>();
          for (int[] point : points) {
              minX = Math.min(minX, point[0]);
              maxX = Math.max(maxX, point[0]);
              pointSet.add(point[0] + "." + point[1]);
          }
          long s = minX + maxX;
          for (int[] point : points) {
              if (!pointSet.contains((s - point[0]) + "." + point[1])) {
                  return false;
              }
          }
          return true;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
