* [[https://leetcode.com/problems/largest-bst-subtree][333. Largest BST
Subtree]]
  :PROPERTIES:
  :CUSTOM_ID: largest-bst-subtree
  :END:
[[./solution/0300-0399/0333.Largest BST Subtree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given the root of a binary tree, find the largest subtree, which is
also a Binary Search Tree (BST), where the largest means subtree has the
largest number of nodes.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A Binary Search Tree (BST) is a tree in which all the nodes follow the
below-mentioned properties:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The left subtree values are less than the value of their parent (root)
node's value.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The right subtree values are greater than the value of their parent
(root) node's value.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Note: A subtree must include all of its descendants.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow up: Can you figure out ways to solve it with O(n) time
complexity?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [10,5,15,1,8,null,7]
  <strong>Output:</strong> 3
  <strong>Explanation: </strong>The Largest BST Subtree in this case is the highlighted one. The return value is the subtree&#39;s size, which is 3.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [4,2,7,2,3,5,null,2,null,null,null,null,null,1]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the tree is in the range [0, 104].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-104 <= Node.val <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
