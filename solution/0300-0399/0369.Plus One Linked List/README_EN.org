* [[https://leetcode.com/problems/plus-one-linked-list][369. Plus One
Linked List]]
  :PROPERTIES:
  :CUSTOM_ID: plus-one-linked-list
  :END:
[[./solution/0300-0399/0369.Plus One Linked List/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a non-negative integer represented as a linked list of digits,
plus one to the integer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The digits are stored such that the most significant digit is at the
head of the list.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> head = [1,2,3]
  <strong>Output:</strong> [1,2,4]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> head = [0]
  <strong>Output:</strong> [1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the linked list is in the range [1, 100].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= Node.val <= 9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The number represented by the linked list does not contain leading zeros
except for the zero itself. 

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  # Definition for singly-linked list.
  # class ListNode:
  #     def __init__(self, val=0, next=None):
  #         self.val = val
  #         self.next = next
  class Solution:
      def plusOne(self, head: ListNode) -> ListNode:
          dummy = ListNode(val=0, next=head)
          target = dummy
          while head:
              if head.val != 9:
                  target = head
              head = head.next
          target.val += 1
          target = target.next
          while target:
              target.val = 0
              target = target.next
          return dummy if dummy.val else dummy.next
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  /**
   * Definition for singly-linked list.
   * public class ListNode {
   *     int val;
   *     ListNode next;
   *     ListNode() {}
   *     ListNode(int val) { this.val = val; }
   *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
   * }
   */
  class Solution {
      public ListNode plusOne(ListNode head) {
          ListNode dummy = new ListNode(0, head);
          ListNode target = dummy;
          while (head != null) {
              if (head.val != 9) {
                  target = head;
              }
              head = head.next;
          }
          target.val += 1;
          target = target.next;
          while (target != null) {
              target.val = 0;
              target = target.next;
          }
          return dummy.val == 1 ? dummy : dummy.next;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
