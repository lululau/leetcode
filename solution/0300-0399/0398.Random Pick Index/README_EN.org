* [[https://leetcode.com/problems/random-pick-index][398. Random Pick
Index]]
  :PROPERTIES:
  :CUSTOM_ID: random-pick-index
  :END:
[[./solution/0300-0399/0398.Random Pick Index/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an integer array nums with possible duplicates, randomly output
the index of a given target number. You can assume that the given target
number must exist in the array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Implement the Solution class:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Solution(int[] nums) Initializes the object with the array nums.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

int pick(int target) Picks a random index i from nums where nums[i] ==
target. If there are multiple valid i's, then each index should have an
equal probability of returning.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input</strong>
  [&quot;Solution&quot;, &quot;pick&quot;, &quot;pick&quot;, &quot;pick&quot;]
  [[[1, 2, 3, 3, 3]], [3], [1], [3]]
  <strong>Output</strong>
  [null, 4, 0, 2]

  <strong>Explanation</strong>
  Solution solution = new Solution([1, 2, 3, 3, 3]);
  solution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.
  solution.pick(1); // It should return 0. Since in the array only nums[0] is equal to 1.
  solution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-231 <= nums[i] <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

target is an integer from nums.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At most 104 calls will be made to pick.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
