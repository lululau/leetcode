* [[https://leetcode-cn.com/problems/ransom-note][383. 赎金信]]
  :PROPERTIES:
  :CUSTOM_ID: 赎金信
  :END:
[[./solution/0300-0399/0383.Ransom Note/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个赎金信 (ransom)
字符串和一个杂志(magazine)字符串，判断第一个字符串 ransom
能不能由第二个字符串 magazines 里面的字符构成。如果可以构成，返回 true
；否则返回 false。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

(题目说明：为了不暴露赎金信字迹，要从杂志上搜索各个需要的字母，组成单词来表达意思。杂志字符串中的每个字符只能在赎金信字符串中使用一次。)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>ransomNote = "a", magazine = "b"
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>ransomNote = "aa", magazine = "ab"
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>ransomNote = "aa", magazine = "aab"
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

你可以假设两个字符串均只含有小写字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

用一个数组或字典 chars 存放 magazine 中每个字母出现的次数。遍历
ransomNote 中每个字母，判断 chars 是否包含即可。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def canConstruct(self, ransomNote: str, magazine: str) -> bool:
          chars = {}
          for i in magazine:
              chars[i] = chars.get(i, 0) + 1
          for i in ransomNote:
              if not chars.get(i):
                  return False
              chars[i] -= 1
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean canConstruct(String ransomNote, String magazine) {
          int[] chars = new int[26];
          for (int i = 0, n = magazine.length(); i < n; ++i) {
              int idx = magazine.charAt(i) - 'a';
              ++chars[idx];
          }
          for (int i = 0, n = ransomNote.length(); i < n; ++i) {
              int idx = ransomNote.charAt(i) - 'a';
              if (chars[idx] == 0) return false;
              --chars[idx];
          }
          return true;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
