* [[https://leetcode-cn.com/problems/wiggle-sort-ii][324. 摆动排序 II]]
  :PROPERTIES:
  :CUSTOM_ID: 摆动排序-ii
  :END:
[[./solution/0300-0399/0324.Wiggle Sort II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums，将它重新排列成 nums[0] < nums[1] > nums[2] <
nums[3]... 的顺序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以假设所有输入数组都可以得到满足题目要求的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,5,1,1,6,4]
  <strong>输出：</strong>[1,6,1,5,1,4]
  <strong>解释：</strong>[1,4,1,5,1,6] 同样是符合题目要求的结果，可以被判题程序接受。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,3,2,2,3,1]
  <strong>输出：</strong>[2,3,1,3,1,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

题目数据保证，对于给定的输入 nums ，总能产生满足题目要求的结果

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

进阶：你能用 O(n) 时间复杂度和 / 或原地 O(1) 额外空间来实现吗？

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
