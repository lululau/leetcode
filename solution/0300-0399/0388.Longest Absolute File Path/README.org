* [[https://leetcode-cn.com/problems/longest-absolute-file-path][388.
文件的最长绝对路径]]
  :PROPERTIES:
  :CUSTOM_ID: 文件的最长绝对路径
  :END:
[[./solution/0300-0399/0388.Longest Absolute File Path/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

假设文件系统如下图所示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

这里将 dir 作为根目录中的唯一目录。dir 包含两个子目录 subdir1 和 subdir2
。subdir1 包含文件 file1.ext 和子目录 subsubdir1；subdir2 包含子目录
subsubdir2，该子目录下包含文件 file2.ext 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在文本格式中，如下所示(⟶表示制表符)：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  dir
  ⟶ subdir1
  ⟶ ⟶ file1.ext
  ⟶ ⟶ subsubdir1
  ⟶ subdir2
  ⟶ ⟶ subsubdir2
  ⟶ ⟶ ⟶ file2.ext
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

如果是代码表示，上面的文件系统可以写为
"dir\n\tsubdir1\n\t\tfile1.ext\n\t\tsubsubdir1\n\tsubdir2\n\t\tsubsubdir2\n\t\t\tfile2.ext"
。'\n' 和 '\t' 分别是换行符和制表符。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

文件系统中的每个文件和文件夹都有一个唯一的 绝对路径
，即必须打开才能到达文件/目录所在位置的目录顺序，所有路径用 '/'
连接。上面例子中，指向 file2.ext 的绝对路径是
"dir/subdir2/subsubdir2/file2.ext"
。每个目录名由字母、数字和/或空格组成，每个文件名遵循 name.extension
的格式，其中名称和扩展名由字母、数字和/或空格组成。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一个以上述格式表示文件系统的字符串 input ，返回文件系统中
指向文件的最长绝对路径 的长度。 如果系统中没有文件，返回 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>input = "dir\n\tsubdir1\n\tsubdir2\n\t\tfile.ext"
  <strong>输出：</strong>20
  <strong>解释：</strong>只有一个文件，绝对路径为 "dir/subdir2/file.ext" ，路径长度 20
  路径 "dir/subdir1" 不含任何文件
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>input = "dir\n\tsubdir1\n\t\tfile1.ext\n\t\tsubsubdir1\n\tsubdir2\n\t\tsubsubdir2\n\t\t\tfile2.ext"
  <strong>输出：</strong>32
  <strong>解释：</strong>存在两个文件：
  "dir/subdir1/file1.ext" ，路径长度 21
  "dir/subdir2/subsubdir2/file2.ext" ，路径长度 32
  返回 32 ，因为这是最长的路径</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>input = "a"
  <strong>输出：</strong>0
  <strong>解释：</strong>不存在任何文件</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>input = "file1.txt\nfile2.txt\nlongfile.txt"
  <strong>输出：</strong>12
  <strong>解释：</strong>根目录下有 3 个文件。
  因为根目录中任何东西的绝对路径只是名称本身，所以答案是 "longfile.txt" ，路径长度为 12
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= input.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

input 可能包含小写或大写的英文字母，一个换行符 '\n'，一个指表符
'\t'，一个点 '.'，一个空格 ' '，和数字。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
