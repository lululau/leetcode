* [[https://leetcode-cn.com/problems/number-of-connected-components-in-an-undirected-graph][323.
无向图中连通分量的数目]]
  :PROPERTIES:
  :CUSTOM_ID: 无向图中连通分量的数目
  :END:
[[./solution/0300-0399/0323.Number of Connected Components in an Undirected Graph/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定编号从 0 到 n-1 的 n
个节点和一个无向边列表（每条边都是一对节点），请编写一个函数来计算无向图中连通分量的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong><code>n = 5</code> 和 <code>edges = [[0, 1], [1, 2], [3, 4]]</code>

       0          3
       |          |
       1 --- 2    4 

  <strong>输出: </strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong><code>n = 5</code> 和 <code>edges = [[0, 1], [1, 2], [2, 3], [3, 4]]</code>

       0           4
       |           |
       1 --- 2 --- 3

  <strong>输出:&nbsp;&nbsp;</strong>1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意: 你可以假设在 edges
中不会出现重复的边。而且由于所以的边都是无向边，[0, 1] 与 [1, 0] 
相同，所以它们不会同时在 edges 中出现。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
