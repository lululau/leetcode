* [[https://leetcode-cn.com/problems/super-ugly-number][313. 超级丑数]]
  :PROPERTIES:
  :CUSTOM_ID: 超级丑数
  :END:
[[./solution/0300-0399/0313.Super Ugly Number/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

编写一段程序来查找第 n 个超级丑数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

超级丑数是指其所有质因数都是长度为 k 的质数列表 primes 中的正整数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>
  <strong>输出:</strong> 32 
  <strong>解释: </strong>给定长度为 4 的质数列表 primes = [2,7,13,19]，前 12 个超级丑数序列为：[1,2,4,7,8,13,14,16,19,26,28,32] 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 是任何给定 primes 的超级丑数。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

 给定 primes 中的数字以升序排列。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 < k ≤ 100, 0 < n ≤ 106, 0 < primes[i] < 1000 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

第 n 个超级丑数确保在 32 位有符整数范围内。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
