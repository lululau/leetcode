* [[https://leetcode.com/problems/super-ugly-number][313. Super Ugly
Number]]
  :PROPERTIES:
  :CUSTOM_ID: super-ugly-number
  :END:
[[./solution/0300-0399/0313.Super Ugly Number/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A super ugly number is a positive integer whose prime factors are in the
array primes.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an integer n and an array of integers primes, return the nth super
ugly number.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The nth super ugly number is guaranteed to fit in a 32-bit signed
integer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 12, primes = [2,7,13,19]
  <strong>Output:</strong> 32
  <strong>Explanation:</strong> [1,2,4,7,8,13,14,16,19,26,28,32] is the sequence of the first 12 super ugly numbers given primes = [2,7,13,19].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 1, primes = [2,3,5]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> 1 has no prime factors, therefore all of its prime factors are in the array primes = [2,3,5].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= primes.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= primes[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

primes[i] is guaranteed to be a prime number.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the values of primes are unique and sorted in ascending order.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
