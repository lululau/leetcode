* [[https://leetcode-cn.com/problems/self-crossing][335. 路径交叉]]
  :PROPERTIES:
  :CUSTOM_ID: 路径交叉
  :END:
[[./solution/0300-0399/0335.Self Crossing/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个含有 n 个正数的数组 x。从点 (0,0) 开始，先向北移动 x[0] 米，然后向西移动 x[1] 米，向南移动 x[2] 米，向东移动 x[3] 米，持续移动。也就是说，每次移动后你的方位会发生逆时针变化。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

编写一个 O(1) 空间复杂度的一趟扫描算法，判断你所经过的路径是否相交。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>┌───┐
  │ &nbsp; │
  └───┼──&gt;
  &nbsp; &nbsp; │

  输入: </strong><code>[2,1,1,2]</code>
  <strong>输出:</strong> true 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>┌──────┐
  │ &nbsp; &nbsp; &nbsp;│
  │
  │
  └────────────&gt;

  输入: </strong><code>[1,2,3,4]</code>
  <strong>输出: </strong>false 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>┌───┐
  │ &nbsp; │
  └───┼&gt;

  输入:</strong> <code>[1,1,1,1]</code>
  <strong>输出:</strong> true 
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
