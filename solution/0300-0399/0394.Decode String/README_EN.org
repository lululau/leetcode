* [[https://leetcode.com/problems/decode-string][394. Decode String]]
  :PROPERTIES:
  :CUSTOM_ID: decode-string
  :END:
[[./solution/0300-0399/0394.Decode String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an encoded string, return its decoded string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The encoding rule is: k[encoded_string], where the encoded_string inside
the square brackets is being repeated exactly k times. Note that k is
guaranteed to be a positive integer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may assume that the input string is always valid; No extra white
spaces, square brackets are well-formed, etc.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Furthermore, you may assume that the original data does not contain any
digits and that digits are only for those repeat numbers, k. For
example, there won't be input like 3a or 2[4].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "3[a]2[bc]"
  <strong>Output:</strong> "aaabcbc"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "3[a2[c]]"
  <strong>Output:</strong> "accaccacc"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "2[abc]3[cd]ef"
  <strong>Output:</strong> "abcabccdcdcdef"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "abc3[cd]xyz"
  <strong>Output:</strong> "abccdcdcdxyz"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 30

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of lowercase English letters, digits, and square brackets
'[]'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s is guaranteed to be a valid input.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the integers in s are in the range [1, 300].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
