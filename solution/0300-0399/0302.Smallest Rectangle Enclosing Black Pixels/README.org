* [[https://leetcode-cn.com/problems/smallest-rectangle-enclosing-black-pixels][302.
包含全部黑色像素的最小矩形]]
  :PROPERTIES:
  :CUSTOM_ID: 包含全部黑色像素的最小矩形
  :END:
[[./solution/0300-0399/0302.Smallest Rectangle Enclosing Black Pixels/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

图片在计算机处理中往往是使用二维矩阵来表示的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

假设，这里我们用的是一张黑白的图片，那么 0 代表白色像素，1 代表黑色像素。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

其中黑色的像素他们相互连接，也就是说，图片中只会有一片连在一块儿的黑色像素（像素点是水平或竖直方向连接的）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

那么，给出某一个黑色像素点 (x,
y) 的位置，你是否可以找出包含全部黑色像素的最小矩形（与坐标轴对齐）的面积呢？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong>
  [
    &quot;0010&quot;,
    &quot;0110&quot;,
    &quot;0100&quot;
  ]
  <code>和 x = 0, </code><code>y = 2</code>

  <strong>输出:</strong> 6
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
