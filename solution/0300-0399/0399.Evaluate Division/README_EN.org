* [[https://leetcode.com/problems/evaluate-division][399. Evaluate
Division]]
  :PROPERTIES:
  :CUSTOM_ID: evaluate-division
  :END:
[[./solution/0300-0399/0399.Evaluate Division/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of variable pairs equations and an array of real
numbers values, where equations[i] = [Ai, Bi] and values[i] represent
the equation Ai / Bi = values[i]. Each Ai or Bi is a string that
represents a single variable.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are also given some queries, where queries[j] = [Cj, Dj] represents
the jth query where you must find the answer for Cj / Dj = ?.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the answers to all queries. If a single answer cannot be
determined, return -1.0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: The input is always valid. You may assume that evaluating the
queries will not result in division by zero and that there is no
contradiction.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;c&quot;]], values = [2.0,3.0], queries = [[&quot;a&quot;,&quot;c&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;e&quot;],[&quot;a&quot;,&quot;a&quot;],[&quot;x&quot;,&quot;x&quot;]]
  <strong>Output:</strong> [6.00000,0.50000,-1.00000,1.00000,-1.00000]
  <strong>Explanation:</strong> 
  Given: <em>a / b = 2.0</em>, <em>b / c = 3.0</em>
  queries are: <em>a / c = ?</em>, <em>b / a = ?</em>, <em>a / e = ?</em>, <em>a / a = ?</em>, <em>x / x = ?</em>
  return: [6.0, 0.5, -1.0, 1.0, -1.0 ]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;c&quot;],[&quot;bc&quot;,&quot;cd&quot;]], values = [1.5,2.5,5.0], queries = [[&quot;a&quot;,&quot;c&quot;],[&quot;c&quot;,&quot;b&quot;],[&quot;bc&quot;,&quot;cd&quot;],[&quot;cd&quot;,&quot;bc&quot;]]
  <strong>Output:</strong> [3.75000,0.40000,5.00000,0.20000]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> equations = [[&quot;a&quot;,&quot;b&quot;]], values = [0.5], queries = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;c&quot;],[&quot;x&quot;,&quot;y&quot;]]
  <strong>Output:</strong> [0.50000,2.00000,-1.00000,-1.00000]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= equations.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

equations[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= Ai.length, Bi.length <= 5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

values.length == equations.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0.0 < values[i] <= 20.0

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= queries.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

queries[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= Cj.length, Dj.length <= 5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Ai, Bi, Cj, Dj consist of lower case English letters and digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
