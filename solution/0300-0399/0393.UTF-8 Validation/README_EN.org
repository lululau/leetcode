* [[https://leetcode.com/problems/utf-8-validation][393. UTF-8
Validation]]
  :PROPERTIES:
  :CUSTOM_ID: utf-8-validation
  :END:
[[./solution/0300-0399/0393.UTF-8 Validation/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an integer array data representing the data, return whether it is
a valid UTF-8 encoding.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A character in UTF8 can be from 1 to 4 bytes long, subjected to the
following rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

For a 1-byte character, the first bit is a 0, followed by its Unicode
code.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

For an n-bytes character, the first n bits are all one's, the n + 1 bit
is 0, followed by n - 1 bytes with the most significant 2 bits being 10.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

This is how the UTF-8 encoding would work:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <code>   Char. number range  |        UTF-8 octet sequence
        (hexadecimal)    |              (binary)
     --------------------+---------------------------------------------
     0000 0000-0000 007F | 0xxxxxxx
     0000 0080-0000 07FF | 110xxxxx 10xxxxxx
     0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
     0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</code>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note: The input is an array of integers. Only the least significant 8
bits of each integer is used to store the data. This means each integer
represents only 1 byte of data.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> data = [197,130,1]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> data represents the octet sequence: 11000101 10000010 00000001.
  It is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> data = [235,140,4]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> data represented the octet sequence: 11101011 10001100 00000100.
  The first 3 bits are all one&#39;s and the 4th bit is 0 means it is a 3-bytes character.
  The next byte is a continuation byte which starts with 10 and that&#39;s correct.
  But the second continuation byte does not start with 10, so it is invalid.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= data.length <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= data[i] <= 255

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
