* [[https://leetcode-cn.com/problems/online-election][911. 在线选举]]
  :PROPERTIES:
  :CUSTOM_ID: 在线选举
  :END:
[[./solution/0900-0999/0911.Online Election/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在选举中，第 i 张票是在时间为 times[i] 时投给 persons[i] 的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在，我们想要实现下面的查询函数： TopVotedCandidate.q(int t) 将返回在 t
时刻主导选举的候选人的编号。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在 t
时刻投出的选票也将被计入我们的查询之中。在平局的情况下，最近获得投票的候选人将会获胜。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[&quot;TopVotedCandidate&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;], [[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]
  <strong>输出：</strong>[null,0,1,1,0,0,1]
  <strong>解释：</strong>
  时间为 3，票数分布情况是 [0]，编号为 0 的候选人领先。
  时间为 12，票数分布情况是 [0,1,1]，编号为 1 的候选人领先。
  时间为 25，票数分布情况是 [0,1,1,0,0,1]，编号为 1 的候选人领先（因为最近的投票结果是平局）。
  在时间 15、24 和 8 处继续执行 3 个查询。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= persons.length = times.length <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= persons[i] <= persons.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

times 是严格递增的数组，所有元素都在 [0, 10^9] 范围中。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每个测试用例最多调用 10000 次 TopVotedCandidate.q。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

TopVotedCandidate.q(int t) 被调用时总是满足 t >= times[0]。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
