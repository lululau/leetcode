* [[https://leetcode.com/problems/online-election][911. Online
Election]]
  :PROPERTIES:
  :CUSTOM_ID: online-election
  :END:
[[./solution/0900-0999/0911.Online Election/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

In an election, the i-th vote was cast for persons[i] at time times[i].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Now, we would like to implement the following query function:
TopVotedCandidate.q(int t) will return the number of the person that was
leading the election at time t.  

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Votes cast at time t will count towards our query.  In the case of a
tie, the most recent vote (among tied candidates) wins.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[&quot;TopVotedCandidate&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;]</span>, <span id="example-input-1-2">[[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]</span>

  <strong>Output: </strong><span id="example-output-1">[null,0,1,1,0,0,1]</span>

  <strong>Explanation: </strong>

  At time 3, the votes are [0], and 0 is leading.

  At time 12, the votes are [0,1,1], and 1 is leading.

  At time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)

  This continues for 3 more queries at time 15, 24, and 8.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= persons.length = times.length <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= persons[i] <= persons.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

times is a strictly increasing array with all elements in [0, 10^9].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

TopVotedCandidate.q is called at most 10000 times per test case.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

TopVotedCandidate.q(int t) is always called with t >= times[0].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
