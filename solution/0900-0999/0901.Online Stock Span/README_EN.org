* [[https://leetcode.com/problems/online-stock-span][901. Online Stock
Span]]
  :PROPERTIES:
  :CUSTOM_ID: online-stock-span
  :END:
[[./solution/0900-0999/0901.Online Stock Span/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Write a class StockSpanner which collects daily price quotes for some
stock, and returns the span of that stock's price for the current day.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The span of the stock's price today is defined as the maximum number of
consecutive days (starting from today and going backwards) for which the
price of the stock was less than or equal to today's price.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if the price of a stock over the next 7 days were [100, 80,
60, 70, 60, 75, 85], then the stock spans would be [1, 1, 1, 2, 1, 4,
6].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[&quot;StockSpanner&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;]</span>, <span id="example-input-1-2">[[],[100],[80],[60],[70],[60],[75],[85]]</span>

  <strong>Output: </strong><span id="example-output-1">[null,1,1,1,2,1,4,6]</span>

  <strong>Explanation: </strong>

  First, S = StockSpanner() is initialized.  Then:

  S.next(100) is called and returns 1,

  S.next(80) is called and returns 1,

  S.next(60) is called and returns 1,

  S.next(70) is called and returns 2,

  S.next(60) is called and returns 1,

  S.next(75) is called and returns 4,

  S.next(85) is called and returns 6.



  Note that (for example) S.next(75) returned 4, because the last 4 prices

  (including today&#39;s price of 75) were less than or equal to today&#39;s price.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

Calls to StockSpanner.next(int price) will have 1 <= price <= 10^5.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There will be at most 10000 calls to StockSpanner.next per test case.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There will be at most 150000 calls to StockSpanner.next across all test
cases.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The total time limit for this problem has been reduced by 75% for C++,
and 50% for all other languages.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
