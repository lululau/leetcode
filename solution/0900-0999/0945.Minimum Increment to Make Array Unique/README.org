* [[https://leetcode-cn.com/problems/minimum-increment-to-make-array-unique][945.
使数组唯一的最小增量]]
  :PROPERTIES:
  :CUSTOM_ID: 使数组唯一的最小增量
  :END:
[[./solution/0900-0999/0945.Minimum Increment to Make Array Unique/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定整数数组 A，每次 move 操作将会选择任意 A[i]，并将其递增 1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回使 A 中的每个值都是唯一的最少操作次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[1,2,2]
  <strong>输出：</strong>1
  <strong>解释：</strong>经过一次 <em>move</em> 操作，数组将变为 [1, 2, 3]。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[3,2,1,2,1,7]
  <strong>输出：</strong>6
  <strong>解释：</strong>经过 6 次 <em>move</em> 操作，数组将变为 [3, 4, 1, 2, 5, 7]。
  可以看出 5 次或 5 次以下的 <em>move</em> 操作是不能让数组的每个值唯一的。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A.length <= 40000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i] < 40000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
