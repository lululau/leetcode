* [[https://leetcode-cn.com/problems/minimum-number-of-k-consecutive-bit-flips][995.
K 连续位的最小翻转次数]]
  :PROPERTIES:
  :CUSTOM_ID: k-连续位的最小翻转次数
  :END:
[[./solution/0900-0999/0995.Minimum Number of K Consecutive Bit Flips/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在仅包含 0 和 1 的数组 A 中，一次 K 位翻转包括选择一个长度为 K
的（连续）子数组，同时将子数组中的每个 0 更改为 1，而每个 1 更改为 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回所需的 K 位翻转的最小次数，以便数组没有值为 0
的元素。如果不可能，返回 -1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>A = [0,1,0], K = 1
  <strong>输出：</strong>2
  <strong>解释：</strong>先翻转 A[0]，然后翻转 A[2]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>A = [1,1,0], K = 2
  <strong>输出：</strong>-1
  <strong>解释：</strong>无论我们怎样翻转大小为 2 的子数组，我们都不能使数组变为 [1,1,1]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>A = [0,0,0,1,0,1,1,0], K = 3
  <strong>输出：</strong>3
  <strong>解释：</strong>
  翻转 A[0],A[1],A[2]: A变成 [1,1,1,1,0,1,1,0]
  翻转 A[4],A[5],A[6]: A变成 [1,1,1,1,1,0,0,0]
  翻转 A[5],A[6],A[7]: A变成 [1,1,1,1,1,1,1,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 30000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= K <= A.length

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
