* [[https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips][995.
Minimum Number of K Consecutive Bit Flips]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-k-consecutive-bit-flips
  :END:
[[./solution/0900-0999/0995.Minimum Number of K Consecutive Bit Flips/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

In an array A containing only 0s and 1s, a K-bit flip consists of
choosing a (contiguous) subarray of length K and simultaneously changing
every 0 in the subarray to 1, and every 1 in the subarray to 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of K-bit flips required so that there is no 0
in the array.  If it is not possible, return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>A = <span id="example-input-1-1">[0,1,0]</span>, K = <span id="example-input-1-2">1</span>

  <strong>Output: </strong><span id="example-output-1">2</span>

  <strong>Explanation: </strong>Flip A[0], then flip A[2].

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>A = <span id="example-input-2-1">[1,1,0]</span>, K = <span id="example-input-2-2">2</span>

  <strong>Output: </strong><span id="example-output-2">-1</span>

  <strong>Explanation:</strong>&nbsp;No matter how we flip subarrays of size 2, we can&#39;t make the array become [1,1,1].

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>A = <span id="example-input-3-1">[0,0,0,1,0,1,1,0]</span>, K = <span id="example-input-3-2">3</span>

  <strong>Output: </strong><span id="example-output-3">3</span>

  <strong>Explanation:</strong>

  Flip A[0],A[1],A[2]:&nbsp;A becomes [1,1,1,1,0,1,1,0]

  Flip A[4],A[5],A[6]:&nbsp;A becomes [1,1,1,1,1,0,0,0]

  Flip A[5],A[6],A[7]:&nbsp;A becomes [1,1,1,1,1,1,1,1]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 30000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= K <= A.length

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
