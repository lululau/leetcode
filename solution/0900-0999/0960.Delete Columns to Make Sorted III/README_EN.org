* [[https://leetcode.com/problems/delete-columns-to-make-sorted-iii][960.
Delete Columns to Make Sorted III]]
  :PROPERTIES:
  :CUSTOM_ID: delete-columns-to-make-sorted-iii
  :END:
[[./solution/0900-0999/0960.Delete Columns to Make Sorted III/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of n strings strs, all of the same length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We may choose any deletion indices, and we delete all the characters in
those indices for each string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if we have strs = ["abcdef","uvwxyz"] and deletion indices
{0, 2, 3}, then the final array after deletions is ["bef", "vyz"].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Suppose we chose a set of deletion indices answer such that after
deletions, the final array has every string (row) in lexicographic
order. (i.e., (strs[0][0] <= strs[0][1] <= ... <=
strs[0][strs[0].length - 1]), and (strs[1][0] <= strs[1][1] <= ... <=
strs[1][strs[1].length - 1]), and so on). Return the minimum possible
value of answer.length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;babca&quot;,&quot;bbazb&quot;]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> After deleting columns 0, 1, and 4, the final array is strs = [&quot;bc&quot;, &quot;az&quot;].
  Both these rows are individually in lexicographic order (ie. strs[0][0] &lt;= strs[0][1] and strs[1][0] &lt;= strs[1][1]).
  Note that strs[0] &gt; strs[1] - the array strs is not necessarily in lexicographic order.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;edcba&quot;]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> If we delete less than 4 columns, the only row will not be lexicographically sorted.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;ghi&quot;,&quot;def&quot;,&quot;abc&quot;]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> All rows are already lexicographically sorted.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == strs.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs[i].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

strs[i] consists of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

 

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
