* [[https://leetcode.com/problems/partition-array-into-disjoint-intervals][915.
Partition Array into Disjoint Intervals]]
  :PROPERTIES:
  :CUSTOM_ID: partition-array-into-disjoint-intervals
  :END:
[[./solution/0900-0999/0915.Partition Array into Disjoint Intervals/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array A, partition it into two (contiguous) subarrays left and
right so that:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Every element in left is less than or equal to every element in right.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

left and right are non-empty.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

left has the smallest possible size.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the length of left after such a partitioning.  It is guaranteed
that such a partitioning exists.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[5,0,3,8,6]</span>

  <strong>Output: </strong><span id="example-output-1">3</span>

  <strong>Explanation: </strong>left = [5,0,3], right = [8,6]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-2-1">[1,1,1,0,6,12]</span>

  <strong>Output: </strong><span id="example-output-2">4</span>

  <strong>Explanation: </strong>left = [1,1,1,0], right = [6,12]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= A.length <= 30000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i] <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It is guaranteed there is at least one way to partition A as described.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

 

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
