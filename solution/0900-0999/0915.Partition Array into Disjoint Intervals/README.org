* [[https://leetcode-cn.com/problems/partition-array-into-disjoint-intervals][915.
分割数组]]
  :PROPERTIES:
  :CUSTOM_ID: 分割数组
  :END:
[[./solution/0900-0999/0915.Partition Array into Disjoint Intervals/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个数组 A，将其划分为两个连续子数组 left 和 right， 使得：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

left 中的每个元素都小于或等于 right 中的每个元素。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

left 和 right 都是非空的。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

left 的长度要尽可能小。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

在完成这样的分组后返回 left 的长度。可以保证存在这样的划分方法。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>[5,0,3,8,6]
  <strong>输出：</strong>3
  <strong>解释：</strong>left = [5,0,3]，right = [8,6]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>[1,1,1,0,6,12]
  <strong>输出：</strong>4
  <strong>解释：</strong>left = [1,1,1,0]，right = [6,12]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= A.length <= 30000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i] <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

可以保证至少有一种方法能够按题目所描述的那样对 A 进行划分。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
