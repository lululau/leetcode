* [[https://leetcode.com/problems/vowel-spellchecker][966. Vowel
Spellchecker]]
  :PROPERTIES:
  :CUSTOM_ID: vowel-spellchecker
  :END:
[[./solution/0900-0999/0966.Vowel Spellchecker/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a wordlist, we want to implement a spellchecker that converts a
query word into a correct word.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For a given query word, the spell checker handles two categories of
spelling mistakes:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Capitalization: If the query matches a word in the wordlist
(case-insensitive), then the query word is returned with the same case
as the case in the wordlist.

#+begin_example
  <ul>
      <li>Example: <code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;YellOw&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>
      <li>Example: <code>wordlist = [&quot;Yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;Yellow&quot;</code></li>
      <li>Example: <code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>
  </ul>
  </li>
  <li>Vowel Errors: If after replacing the vowels <code>(&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;)</code> of the query word with any vowel individually, it matches a word in the wordlist (<strong>case-insensitive</strong>), then the query word is returned with the same case as the match in the wordlist.
  <ul>
      <li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yollow&quot;</code>: <code>correct = &quot;YellOw&quot;</code></li>
      <li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yeellow&quot;</code>: <code>correct = &quot;&quot;</code> (no match)</li>
      <li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yllw&quot;</code>: <code>correct = &quot;&quot;</code> (no match)</li>
  </ul>
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

In addition, the spell checker operates under the following precedence
rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

When the query exactly matches a word in the wordlist (case-sensitive),
you should return the same word back.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

When the query matches a word up to capitlization, you should return the
first such match in the wordlist.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

When the query matches a word up to vowel errors, you should return the
first such match in the wordlist.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If the query has no matches in the wordlist, you should return the empty
string.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Given some queries, return a list of words answer, where answer[i] is
the correct word for query = queries[i].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> wordlist = ["KiTe","kite","hare","Hare"], queries = ["kite","Kite","KiTe","Hare","HARE","Hear","hear","keti","keet","keto"]
  <strong>Output:</strong> ["kite","KiTe","KiTe","Hare","hare","","","KiTe","","KiTe"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> wordlist = ["yellow"], queries = ["YellOw"]
  <strong>Output:</strong> ["yellow"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= wordlist.length, queries.length <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= wordlist[i].length, queries[i].length <= 7

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

wordlist[i] and queries[i] consist only of only English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
