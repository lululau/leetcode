* [[https://leetcode.com/problems/minimum-falling-path-sum][931. Minimum
Falling Path Sum]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-falling-path-sum
  :END:
[[./solution/0900-0999/0931.Minimum Falling Path Sum/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an n x n array of integers matrix, return the minimum sum of any
falling path through matrix.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A falling path starts at any element in the first row and chooses the
element in the next row that is either directly below or diagonally
left/right. Specifically, the next element from position (row, col) will
be (row + 1, col - 1), (row + 1, col), or (row + 1, col + 1).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[2,1,3],[6,5,4],[7,8,9]]
  <strong>Output:</strong> 13
  <strong>Explanation:</strong> There are two falling paths with a minimum sum underlined below:
  [[2,<u>1</u>,3],      [[2,<u>1</u>,3],
   [6,<u>5</u>,4],       [6,5,<u>4</u>],
   [<u>7</u>,8,9]]       [7,<u>8</u>,9]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[-19,57],[-40,-5]]
  <strong>Output:</strong> -59
  <strong>Explanation:</strong> The falling path with a minimum sum is underlined below:
  [[<u>-19</u>,57],
   [<u>-40</u>,-5]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[-48]]
  <strong>Output:</strong> -48
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == matrix.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == matrix[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-100 <= matrix[i][j] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
