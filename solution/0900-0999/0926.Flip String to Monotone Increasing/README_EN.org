* [[https://leetcode.com/problems/flip-string-to-monotone-increasing][926.
Flip String to Monotone Increasing]]
  :PROPERTIES:
  :CUSTOM_ID: flip-string-to-monotone-increasing
  :END:
[[./solution/0900-0999/0926.Flip String to Monotone Increasing/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A string of '0's and '1's is monotone increasing if it consists of some
number of '0's (possibly 0), followed by some number of '1's (also
possibly 0.)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We are given a string S of '0's and '1's, and we may flip any '0' to a
'1' or a '1' to a '0'.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of flips to make S monotone increasing.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">&quot;00110&quot;</span>

  <strong>Output: </strong><span id="example-output-1">1</span>

  <strong>Explanation: </strong>We flip the last digit to get 00111.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-2-1">&quot;010110&quot;</span>

  <strong>Output: </strong><span id="example-output-2">2</span>

  <strong>Explanation: </strong>We flip to get 011111, or alternatively 000111.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-3-1">&quot;00011000&quot;</span>

  <strong>Output: </strong><span id="example-output-3">2</span>

  <strong>Explanation: </strong>We flip to get 00000000.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= S.length <= 20000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S only consists of '0' and '1' characters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
