* [[https://leetcode.com/problems/pancake-sorting][969. Pancake
Sorting]]
  :PROPERTIES:
  :CUSTOM_ID: pancake-sorting
  :END:
[[./solution/0900-0999/0969.Pancake Sorting/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array of integers arr, sort the array by performing a series of
pancake flips.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

In one pancake flip we do the following steps:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Choose an integer k where 1 <= k <= arr.length.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Reverse the sub-array arr[0...k-1] (0-indexed).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if arr = [3,2,1,4] and we performed a pancake flip choosing
k = 3, we reverse the sub-array [3,2,1], so arr = [1,2,3,4] after the
pancake flip at k = 3.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array of the k-values corresponding to a sequence of pancake
flips that sort arr. Any valid answer that sorts the array within 10 *
arr.length flips will be judged as correct.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [3,2,4,1]
  <strong>Output:</strong> [4,2,4,3]
  <strong>Explanation: </strong>
  We perform 4 pancake flips, with k values 4, 2, 4, and 3.
  Starting state: arr = [3, 2, 4, 1]
  After 1st flip (k = 4): arr = [<u>1</u>, <u>4</u>, <u>2</u>, <u>3</u>]
  After 2nd flip (k = 2): arr = [<u>4</u>, <u>1</u>, 2, 3]
  After 3rd flip (k = 4): arr = [<u>3</u>, <u>2</u>, <u>1</u>, <u>4</u>]
  After 4th flip (k = 3): arr = [<u>1</u>, <u>2</u>, <u>3</u>, 4], which is sorted.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [1,2,3]
  <strong>Output:</strong> []
  <strong>Explanation: </strong>The input is already sorted, so there is no need to flip anything.
  Note that other answers, such as [3, 3], would also be accepted.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= arr.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All integers in arr are unique (i.e. arr is a permutation of the
integers from 1 to arr.length).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
