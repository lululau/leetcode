* [[https://leetcode.com/problems/sort-array-by-parity][905. Sort Array
By Parity]]
  :PROPERTIES:
  :CUSTOM_ID: sort-array-by-parity
  :END:
[[./solution/0900-0999/0905.Sort Array By Parity/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array A of non-negative integers, return an array consisting of
all the even elements of A, followed by all the odd elements of A.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may return any answer array that satisfies this condition.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[3,1,2,4]</span>

  <strong>Output: </strong><span id="example-output-1">[2,4,3,1]</span>

  The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i] <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def sortArrayByParity(self, A: List[int]) -> List[int]:
          i, j = 0, len(A) - 1
          while i < j:
              if (A[i] & 1) > (A[j] & 1):
                  A[i], A[j] = A[j], A[i]
              if A[i] & 1 == 0:
                  i += 1
              if A[j] & 1 == 1:
                  j -= 1
          return A
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int[] sortArrayByParity(int[] A) {
          int i = 0, j = A.length - 1;
          while (i < j) {
              if ((A[i] & 1) > (A[j] & 1)) {
                  int t = A[i];
                  A[i] = A[j];
                  A[j] = t;
              }
              if ((A[i] & 1) == 0) {
                  ++i;
              }
              if ((A[j] & 1) == 1) {
                  --j;
              }
          }
          return A;
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[]} A
   * @return {number[]}
   */
  var sortArrayByParity = function (A) {
    let i = 0;
    let j = A.length - 1;
    while (i < j) {
      if ((A[i] & 1) > (A[j] & 1)) {
        const t = A[i];
        A[i] = A[j];
        A[j] = t;
      }
      if ((A[i] & 1) == 0) {
        ++i;
      }
      if ((A[j] & 1) == 1) {
        --j;
      }
    }
    return A;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
