* [[https://leetcode-cn.com/problems/stamping-the-sequence][936.
戳印序列]]
  :PROPERTIES:
  :CUSTOM_ID: 戳印序列
  :END:
[[./solution/0900-0999/0936.Stamping The Sequence/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你想要用小写字母组成一个目标字符串 target。 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

开始的时候，序列由 target.length 个 '?' 记号组成。而你有一个小写字母印章 stamp。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在每个回合，你可以将印章放在序列上，并将序列中的每个字母替换为印章上的相应字母。你最多可以进行 10
* target.length  个回合。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

举个例子，如果初始序列为 "?????"，而你的印章
stamp 是 "abc"，那么在第一回合，你可以得到 "abc??"、"?abc?"、"??abc"。（请注意，印章必须完全包含在序列的边界内才能盖下去。）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果可以印出序列，那么返回一个数组，该数组由每个回合中被印下的最左边字母的索引组成。如果不能印出序列，就返回一个空数组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

例如，如果序列是 "ababc"，印章是 "abc"，那么我们就可以返回与操作 "?????"
-> "abc??" -> "ababc" 相对应的答案 [0, 2]；

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

另外，如果可以印出序列，那么需要保证可以在 10 *
target.length 个回合内完成。任何超过此数字的答案将不被接受。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>stamp = &quot;abc&quot;, target = &quot;ababc&quot;
  <strong>输出：</strong>[0,2]
  （[1,0,2] 以及其他一些可能的结果也将作为答案被接受）
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>stamp = &quot;abca&quot;, target = &quot;aabcaca&quot;
  <strong>输出：</strong>[3,0,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= stamp.length <= target.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

stamp 和 target 只包含小写字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
