* [[https://leetcode.com/problems/powerful-integers][970. Powerful
Integers]]
  :PROPERTIES:
  :CUSTOM_ID: powerful-integers
  :END:
[[./solution/0900-0999/0970.Powerful Integers/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given three integers x, y, and bound, return a list of all the powerful
integers that have a value less than or equal to bound.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

An integer is powerful if it can be represented as xi + yj for some
integers i >= 0 and j >= 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may return the answer in any order. In your answer, each value
should occur at most once.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> x = 2, y = 3, bound = 10
  <strong>Output:</strong> [2,3,4,5,7,9,10]
  <strong>Explanation:</strong>
  2 = 2<sup>0</sup> + 3<sup>0</sup>
  3 = 2<sup>1</sup> + 3<sup>0</sup>
  4 = 2<sup>0</sup> + 3<sup>1</sup>
  5 = 2<sup>1</sup> + 3<sup>1</sup>
  7 = 2<sup>2</sup> + 3<sup>1</sup>
  9 = 2<sup>3</sup> + 3<sup>0</sup>
  10 = 2<sup>0</sup> + 3<sup>2</sup>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> x = 3, y = 5, bound = 15
  <strong>Output:</strong> [2,4,6,8,10,14]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= x, y <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= bound <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def powerfulIntegers(self, x: int, y: int, bound: int) -> List[int]:
          s = set()
          i = 1
          while i < bound:
              j = 1
              while j < bound:
                  if i + j <= bound:
                      s.add(i + j)
                  if y == 1:
                      break
                  j *= y
              if x == 1:
                  break
              i *= x
          return list(s)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public List<Integer> powerfulIntegers(int x, int y, int bound) {
          Set<Integer> s = new HashSet<>();
          for (int i = 1; i < bound; i *= x) {
              for (int j = 1; j < bound; j *= y) {
                  if (i + j <= bound) {
                      s.add(i + j);
                  }
                  if (y == 1) {
                      break;
                  }
              }
              if (x == 1) {
                  break;
              }
          }
          return new ArrayList<>(s);
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number} x
   * @param {number} y
   * @param {number} bound
   * @return {number[]}
   */
  var powerfulIntegers = function(x, y, bound) {
      let res = new Set();
      for (let i = 1; i < bound; i *= x) {
          for (let j = 1; j < bound; j *= y) {
              if ((i + j) <= bound) {
                  res.add(i + j);
              }
              if (y == 1) break;
          }
          if (x == 1) break;
      }
      return [...res];
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
