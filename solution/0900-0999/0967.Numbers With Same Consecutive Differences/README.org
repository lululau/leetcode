* [[https://leetcode-cn.com/problems/numbers-with-same-consecutive-differences][967.
连续差相同的数字]]
  :PROPERTIES:
  :CUSTOM_ID: 连续差相同的数字
  :END:
[[./solution/0900-0999/0967.Numbers With Same Consecutive Differences/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

返回所有长度为 n 且满足其每两个连续位上的数字之间的差的绝对值为 k 的
非负整数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请注意，除了 数字 0 本身之外，答案中的每个数字都 不能 有前导零。例如，01
有一个前导零，所以是无效的；但 0 是有效的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以按 任何顺序 返回答案。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 3, k = 7
  <strong>输出：</strong>[181,292,707,818,929]
  <strong>解释：</strong>注意，070 不是一个有效的数字，因为它有前导零。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 2, k = 1
  <strong>输出：</strong>[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 2, k = 0
  <strong>输出：</strong>[11,22,33,44,55,66,77,88,99]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 2, k = 2
  <strong>输出：</strong>[13,20,24,31,35,42,46,53,57,64,68,75,79,86,97]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= k <= 9

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
