* [[https://leetcode-cn.com/problems/cat-and-mouse][913. 猫和老鼠]]
  :PROPERTIES:
  :CUSTOM_ID: 猫和老鼠
  :END:
[[./solution/0900-0999/0913.Cat and Mouse/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

两个玩家分别扮演猫（Cat）和老鼠（Mouse）在无向图上进行游戏，他们轮流行动。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

该图按下述规则给出：graph[a] 是所有结点 b 的列表，使得 ab 是图的一条边。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

老鼠从结点 1 开始并率先出发，猫从结点 2 开始且随后出发，在结点 0
处有一个洞。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在每个玩家的回合中，他们必须沿着与他们所在位置相吻合的图的一条边移动。例如，如果老鼠位于结点
1，那么它只能移动到 graph[1] 中的（任何）结点去。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

此外，猫无法移动到洞（结点 0）里。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

然后，游戏在出现以下三种情形之一时结束：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果猫和老鼠占据相同的结点，猫获胜。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果老鼠躲入洞里，老鼠获胜。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果某一位置重复出现（即，玩家们的位置和移动顺序都与上一个回合相同），游戏平局。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

给定 graph，并假设两个玩家都以最佳状态参与游戏，如果老鼠获胜，则返回 1；如果猫获胜，则返回
2；如果平局，则返回 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]
  <strong>输出：</strong>0
  <strong>解释：</strong>
  4---3---1
  |&nbsp; &nbsp;|
  2---5
  &nbsp;\&nbsp;/
  &nbsp; 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= graph.length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

保证 graph[1] 非空。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

保证 graph[2] 包含非零元素。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
