* [[https://leetcode.com/problems/cat-and-mouse][913. Cat and Mouse]]
  :PROPERTIES:
  :CUSTOM_ID: cat-and-mouse
  :END:
[[./solution/0900-0999/0913.Cat and Mouse/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A game on an undirected graph is played by two players, Mouse and Cat,
who alternate turns.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The graph is given as follows: graph[a] is a list of all nodes b such
that ab is an edge of the graph.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The mouse starts at node 1 and goes first, the cat starts at node 2 and
goes second, and there is a hole at node 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

During each player's turn, they must travel along one edge of the graph
that meets where they are.  For example, if the Mouse is at node 1, it
must travel to any node in graph[1].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Additionally, it is not allowed for the Cat to travel to the Hole (node
0.)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Then, the game can end in three ways:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

If ever the Cat occupies the same node as the Mouse, the Cat wins.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If ever the Mouse reaches the Hole, the Mouse wins.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If ever a position is repeated (i.e., the players are in the same
position as a previous turn, and it is the same player's turn to move),
the game is a draw.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Given a graph, and assuming both players play optimally, return

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 if the mouse wins the game,

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 if the cat wins the game, or

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 if the game is a draw.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> graph = [[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> graph = [[1,3],[0],[3],[0,2]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= graph.length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= graph[i].length < graph.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= graph[i][j] < graph.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

graph[i][j] != i

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

graph[i] is unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The mouse and the cat can always move. 

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
