* [[https://leetcode-cn.com/problems/cousins-in-binary-tree][993.
二叉树的堂兄弟节点]]
  :PROPERTIES:
  :CUSTOM_ID: 二叉树的堂兄弟节点
  :END:
[[./solution/0900-0999/0993.Cousins in Binary Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在二叉树中，根节点位于深度 0 处，每个深度为 k 的节点的子节点位于深度 k+1
处。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果二叉树的两个节点深度相同，但 父节点不同 ，则它们是一对堂兄弟节点。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们给出了具有唯一值的二叉树的根节点 root ，以及树中两个不同节点的值 x
和 y 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

只有与值 x 和 y 对应的节点是堂兄弟节点时，才返回 true 。否则，返回
false。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [1,2,3,4], x = 4, y = 3
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [1,2,3,null,4,null,5], x = 5, y = 4
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [1,2,3,null,4], x = 2, y = 3
  <strong>输出：</strong>false</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

二叉树的节点数介于 2 到 100 之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每个节点的值都是唯一的、范围为 1 到 100 的整数。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
