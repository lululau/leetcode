* [[https://leetcode-cn.com/problems/minimum-cost-for-tickets][983.
最低票价]]
  :PROPERTIES:
  :CUSTOM_ID: 最低票价
  :END:
[[./solution/0900-0999/0983.Minimum Cost For Tickets/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在一个火车旅行很受欢迎的国度，你提前一年计划了一些火车旅行。在接下来的一年里，你要旅行的日子将以一个名为 days 的数组给出。每一项是一个从 1 到 365 的整数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

火车票有三种不同的销售方式：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

一张为期一天的通行证售价为 costs[0] 美元；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

一张为期七天的通行证售价为 costs[1] 美元；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

一张为期三十天的通行证售价为 costs[2] 美元。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

通行证允许数天无限制的旅行。 例如，如果我们在第 2 天获得一张为期 7
天的通行证，那么我们可以连着旅行 7 天：第 2 天、第 3 天、第 4 天、第 5
天、第 6 天、第 7 天和第 8 天。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回你想要完成在给定的列表 days 中列出的每一天的旅行所需要的最低消费。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>days = [1,4,6,7,8,20], costs = [2,7,15]
  <strong>输出：</strong>11
  <strong>解释： </strong>
  例如，这里有一种购买通行证的方法，可以让你完成你的旅行计划：
  在第 1 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 1 天生效。
  在第 3 天，你花了 costs[1] = $7 买了一张为期 7 天的通行证，它将在第 3, 4, ..., 9 天生效。
  在第 20 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 20 天生效。
  你总共花了 $11，并完成了你计划的每一天旅行。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]
  <strong>输出：</strong>17
  <strong>解释：
  </strong>例如，这里有一种购买通行证的方法，可以让你完成你的旅行计划： 
  在第 1 天，你花了 costs[2] = $15 买了一张为期 30 天的通行证，它将在第 1, 2, ..., 30 天生效。
  在第 31 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 31 天生效。 
  你总共花了 $17，并完成了你计划的每一天旅行。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= days.length <= 365

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= days[i] <= 365

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

days 按顺序严格递增

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

costs.length == 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= costs[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
