* [[https://leetcode.com/problems/delete-columns-to-make-sorted-ii][955.
Delete Columns to Make Sorted II]]
  :PROPERTIES:
  :CUSTOM_ID: delete-columns-to-make-sorted-ii
  :END:
[[./solution/0900-0999/0955.Delete Columns to Make Sorted II/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of n strings strs, all of the same length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We may choose any deletion indices, and we delete all the characters in
those indices for each string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if we have strs = ["abcdef","uvwxyz"] and deletion indices
{0, 2, 3}, then the final array after deletions is ["bef", "vyz"].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Suppose we chose a set of deletion indices answer such that after
deletions, the final array has its elements in lexicographic order
(i.e., strs[0] <= strs[1] <= strs[2] <= ... <= strs[n - 1]). Return the
minimum possible value of answer.length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;ca&quot;,&quot;bb&quot;,&quot;ac&quot;]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> 
  After deleting the first column, strs = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;].
  Now strs is in lexicographic order (ie. strs[0] &lt;= strs[1] &lt;= strs[2]).
  We require at least 1 deletion since initially strs was not in lexicographic order, so the answer is 1.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;xc&quot;,&quot;yb&quot;,&quot;za&quot;]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> 
  strs is already in lexicographic order, so we do not need to delete anything.
  Note that the rows of strs are not necessarily in lexicographic order:
  i.e., it is NOT necessarily true that (strs[0][0] &lt;= strs[0][1] &lt;= ...)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> We have to delete every column.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == strs.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs[i].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

strs[i] consists of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
