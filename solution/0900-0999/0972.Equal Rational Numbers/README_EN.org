* [[https://leetcode.com/problems/equal-rational-numbers][972. Equal
Rational Numbers]]
  :PROPERTIES:
  :CUSTOM_ID: equal-rational-numbers
  :END:
[[./solution/0900-0999/0972.Equal Rational Numbers/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two strings s and t, each of which represents a non-negative
rational number, return true if and only if they represent the same
number. The strings may use parentheses to denote the repeating part of
the rational number.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A rational number can be represented using up to three parts:
<IntegerPart>, <NonRepeatingPart>, and a <RepeatingPart>. The number
will be represented in one of the following three ways:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

<IntegerPart>

#+begin_example
  <ul>
      <li>For example, <code>12</code>, <code>0</code>, and <code>123</code>.</li>
  </ul>
  </li>
  <li><code>&lt;IntegerPart&gt;<strong>&lt;.&gt;</strong>&lt;NonRepeatingPart&gt;</code>
  <ul>
      <li>For example, <code>0.5</code>, <code>1.</code>, <code>2.12</code>, and <code>123.0001</code>.</li>
  </ul>
  </li>
  <li><code>&lt;IntegerPart&gt;<strong>&lt;.&gt;</strong>&lt;NonRepeatingPart&gt;<strong>&lt;(&gt;</strong>&lt;RepeatingPart&gt;<strong>&lt;)&gt;</strong></code>
  <ul>
      <li>For example, <code>0.1(6)</code>, <code>1.(9)</code>, <code>123.00(1212)</code>.</li>
  </ul>
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The repeating portion of a decimal expansion is conventionally denoted
within a pair of round brackets. For example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1/6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0.(52)&quot;, t = &quot;0.5(25)&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> Because &quot;0.(52)&quot; represents 0.52525252..., and &quot;0.5(25)&quot; represents 0.52525252525..... , the strings represent the same number.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0.1666(6)&quot;, t = &quot;0.166(66)&quot;
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0.9(9)&quot;, t = &quot;1.&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> &quot;0.9(9)&quot; represents 0.999999999... repeated forever, which equals 1.  [<a href="https://en.wikipedia.org/wiki/0.999..." target="_blank">See this link for an explanation.</a>]
  &quot;1.&quot; represents the number 1, which is formed correctly: (IntegerPart) = &quot;1&quot; and (NonRepeatingPart) = &quot;&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Each part consists only of digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The <IntegerPart> does not have leading zeros (except for the zero
itself).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= <IntegerPart>.length <= 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= <NonRepeatingPart>.length <= 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= <RepeatingPart>.length <= 4

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
