* [[https://leetcode-cn.com/problems/equal-rational-numbers][972.
相等的有理数]]
  :PROPERTIES:
  :CUSTOM_ID: 相等的有理数
  :END:
[[./solution/0900-0999/0972.Equal Rational Numbers/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定两个字符串 S 和
T，每个字符串代表一个非负有理数，只有当它们表示相同的数字时才返回
true；否则，返回 false。字符串中可以使用括号来表示有理数的重复部分。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

通常，有理数最多可以用三个部分来表示：整数部分 <IntegerPart>、小数非重复部分 <NonRepeatingPart> 和小数重复部分 <(><RepeatingPart><)>。数字可以用以下三种方法之一来表示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

<IntegerPart>（例：0，12，123）

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

<IntegerPart><.><NonRepeatingPart> （例：0.5，2.12，2.0001）

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

<IntegerPart><.><NonRepeatingPart><(><RepeatingPart><)>（例：0.1(6)，0.9(9)，0.00(1212)）

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

十进制展开的重复部分通常在一对圆括号内表示。例如：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

0.1(6) 或 0.1666(6) 或 0.166(66) 都是 1 / 6 的正确表示形式。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>S = &quot;0.(52)&quot;, T = &quot;0.5(25)&quot;
  <strong>输出：</strong>true
  <strong>解释：</strong>因为 &quot;0.(52)&quot; 代表 0.52525252...，而 &quot;0.5(25)&quot; 代表 0.52525252525.....，则这两个字符串表示相同的数字。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>S = &quot;0.1666(6)&quot;, T = &quot;0.166(66)&quot;
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>S = &quot;0.9(9)&quot;, T = &quot;1.&quot;
  <strong>输出：</strong>true
  <strong>解释：
  </strong>&quot;0.9(9)&quot; 代表 0.999999999... 永远重复，等于 1 。[<a href="https://baike.baidu.com/item/0.999…/5615429?fr=aladdin" target="_blank">有关说明，请参阅此链接</a>]
  &quot;1.&quot; 表示数字 1，其格式正确：(IntegerPart) = &quot;1&quot; 且 (NonRepeatingPart) = &quot;&quot; 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

每个部分仅由数字组成。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

整数部分 <IntegerPart> 不会以 2
个或更多的零开头。（对每个部分的数字没有其他限制）。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= <IntegerPart>.length <= 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= <NonRepeatingPart>.length <= 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= <RepeatingPart>.length <= 4

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
