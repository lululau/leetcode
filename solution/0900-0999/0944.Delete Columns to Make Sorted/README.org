* [[https://leetcode-cn.com/problems/delete-columns-to-make-sorted][944.
删列造序]]
  :PROPERTIES:
  :CUSTOM_ID: 删列造序
  :END:
[[./solution/0900-0999/0944.Delete Columns to Make Sorted/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你由 n 个小写字母字符串组成的数组 strs，其中每个字符串长度相等。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

这些字符串可以每个一行，排成一个网格。例如，strs = ["abc", "bce", "cae"]
可以排列为：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  abc
  bce
  cae</pre>
#+end_html

#+begin_html
  <p>
#+end_html

你需要找出并删除 不是按字典序升序排列的 列。在上面的例子（下标从 0
开始）中，列 0（'a', 'b', 'c'）和列 2（'c', 'e',
'e'）都是按升序排列的，而列 1（'b', 'c', 'a'）不是，所以要删除列 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回你需要删除的列数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>strs = ["cba","daf","ghi"]
  <strong>输出：</strong>1
  <strong>解释：</strong>网格示意如下：
    cba
    daf
    ghi
  列 0 和列 2 按升序排列，但列 1 不是，所以只需要删除列 1 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>strs = ["a","b"]
  <strong>输出：</strong>0
  <strong>解释：</strong>网格示意如下：
    a
    b
  只有列 0 这一列，且已经按升序排列，所以不用删除任何列。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>strs = ["zyx","wvu","tsr"]
  <strong>输出：</strong>3
  <strong>解释：</strong>网格示意如下：
    zyx
    wvu
    tsr
  所有 3 列都是非升序排列的，所以都要删除。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == strs.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs[i].length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

strs[i] 由小写英文字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
