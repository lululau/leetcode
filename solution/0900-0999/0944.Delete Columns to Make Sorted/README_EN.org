* [[https://leetcode.com/problems/delete-columns-to-make-sorted][944.
Delete Columns to Make Sorted]]
  :PROPERTIES:
  :CUSTOM_ID: delete-columns-to-make-sorted
  :END:
[[./solution/0900-0999/0944.Delete Columns to Make Sorted/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of n strings strs, all of the same length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The strings can be arranged such that there is one on each line, making
a grid. For example, strs = ["abc", "bce", "cae"] can be arranged as:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  abc
  bce
  cae
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

You want to delete the columns that are not sorted lexicographically. In
the above example (0-indexed), columns 0 ('a', 'b', 'c') and 2 ('c',
'e', 'e') are sorted while column 1 ('b', 'c', 'a') is not, so you would
delete column 1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of columns that you will delete.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;cba&quot;,&quot;daf&quot;,&quot;ghi&quot;]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> The grid looks as follows:
    cba
    daf
    ghi
  Columns 0 and 2 are sorted, but column 1 is not, so you only need to delete 1 column.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;a&quot;,&quot;b&quot;]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> The grid looks as follows:
    a
    b
  Column 0 is the only column and is sorted, so you will not delete any columns.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> The grid looks as follows:
    zyx
    wvu
    tsr
  All 3 columns are not sorted, so you will delete all 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == strs.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs[i].length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

strs[i] consists of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
