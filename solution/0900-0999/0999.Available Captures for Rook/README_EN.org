* [[https://leetcode.com/problems/available-captures-for-rook][999.
Available Captures for Rook]]
  :PROPERTIES:
  :CUSTOM_ID: available-captures-for-rook
  :END:
[[./solution/0900-0999/0999.Available Captures for Rook/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

On an 8 x 8 chessboard, there is exactly one white rook 'R' and some
number of white bishops 'B', black pawns 'p', and empty squares '.'.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

When the rook moves, it chooses one of four cardinal directions (north,
east, south, or west), then moves in that direction until it chooses to
stop, reaches the edge of the board, captures a black pawn, or is
blocked by a white bishop. A rook is considered attacking a pawn if the
rook can capture the pawn on the rook's turn. The number of available
captures for the white rook is the number of pawns that the rook is
attacking.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of available captures for the white rook.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> board = [[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;R&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> In this example, the rook is attacking all the pawns.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> board = [[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;B&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;B&quot;,&quot;R&quot;,&quot;B&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;B&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> The bishops are blocking the rook from attacking any of the pawns.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> board = [[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;R&quot;,&quot;.&quot;,&quot;p&quot;,&quot;B&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;B&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> The rook is attacking the pawns at positions b5, d6, and f5.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

board.length == 8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

board[i].length == 8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

board[i][j] is either 'R', '.', 'B', or 'p'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There is exactly one cell with board[i][j] == 'R'

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def numRookCaptures(self, board: List[List[str]]) -> int:

          def search(board, i, j, direction):
              while i >= 0 and i < 8 and j >= 0 and j < 8:
                  if board[i][j] == 'B': return 0
                  if board[i][j] == 'p': return 1
                  i += direction[0]
                  j += direction[1]
              return 0
          directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
          res = 0;
          for i in range(8):
              for j in range(8):
                  if board[i][j] == 'R':
                      for direction in directions:
                          res += search(board, i, j, direction)
                      return res
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int numRookCaptures(char[][] board) {
          int[][] directions = { {-1, 0}, {1, 0}, {0, -1}, {0, 1} };
          int res = 0;
          for (int i = 0; i < 8; ++i) {
              for (int j = 0; j < 8; ++j) {
                  if (board[i][j] == 'R') {
                      for (int[] direction : directions) {
                          res += search(board, i, j, direction);
                      }
                      return res;
                  }
              }
          }
          return res;
      }

      private int search(char[][] board, int i, int j, int[] direction) {
          while (i >= 0 && i < 8 && j >= 0 && j < 8) {
              if (board[i][j] == 'B') return 0;
              if (board[i][j] == 'p') return 1;
              i += direction[0];
              j += direction[1];
          }
          return 0;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
