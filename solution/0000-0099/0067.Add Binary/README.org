* [[https://leetcode-cn.com/problems/add-binary][67. 二进制求和]]
  :PROPERTIES:
  :CUSTOM_ID: 二进制求和
  :END:
[[./solution/0000-0099/0067.Add Binary/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个二进制字符串，返回它们的和（用二进制表示）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输入为 非空 字符串且只包含数字 1 和 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> a = &quot;11&quot;, b = &quot;1&quot;
  <strong>输出:</strong> &quot;100&quot;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> a = &quot;1010&quot;, b = &quot;1011&quot;
  <strong>输出:</strong> &quot;10101&quot;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

每个字符串仅由字符 '0' 或 '1' 组成。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= a.length, b.length <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

字符串如果不是 "0" ，就都不含前导零。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
