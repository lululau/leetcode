* [[https://leetcode.com/problems/implement-strstr][28. Implement
strStr()]]
  :PROPERTIES:
  :CUSTOM_ID: implement-strstr
  :END:
[[./solution/0000-0099/0028.Implement strStr%28%29/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Implement strStr().

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the index of the first occurrence of needle in haystack, or -1 if
needle is not part of haystack.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Clarification:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

What should we return when needle is an empty string? This is a great
question to ask during an interview.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For the purpose of this problem, we will return 0 when needle is an
empty string. This is consistent to C's strstr() and Java's indexOf().

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> haystack = "hello", needle = "ll"
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> haystack = "aaaaa", needle = "bba"
  <strong>Output:</strong> -1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> haystack = "", needle = ""
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= haystack.length, needle.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

haystack and needle consist of only lower-case English characters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
