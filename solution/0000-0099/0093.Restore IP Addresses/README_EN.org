* [[https://leetcode.com/problems/restore-ip-addresses][93. Restore IP
Addresses]]
  :PROPERTIES:
  :CUSTOM_ID: restore-ip-addresses
  :END:
[[./solution/0000-0099/0093.Restore IP Addresses/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string s containing only digits, return all possible valid IP
addresses that can be obtained from s. You can return them in any order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A valid IP address consists of exactly four integers, each integer is
between 0 and 255, separated by single dots and cannot have leading
zeros. For example, "0.1.2.201" and "192.168.1.1" are valid IP addresses
and "0.011.255.245", "192.168.1.312" and "192.168@1.1" are invalid IP
addresses. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "25525511135"
  <strong>Output:</strong> ["255.255.11.135","255.255.111.35"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "0000"
  <strong>Output:</strong> ["0.0.0.0"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "1111"
  <strong>Output:</strong> ["1.1.1.1"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "010010"
  <strong>Output:</strong> ["0.10.0.10","0.100.1.0"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "101023"
  <strong>Output:</strong> ["1.0.10.23","1.0.102.3","10.1.0.23","10.10.2.3","101.0.2.3"]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= s.length <= 3000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of digits only.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
