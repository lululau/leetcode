* [[https://leetcode-cn.com/problems/jump-game-ii][45. 跳跃游戏 II]]
  :PROPERTIES:
  :CUSTOM_ID: 跳跃游戏-ii
  :END:
[[./solution/0000-0099/0045.Jump Game II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个非负整数数组，你最初位于数组的第一个位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

数组中的每个元素代表你在该位置可以跳跃的最大长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你的目标是使用最少的跳跃次数到达数组的最后一个位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> [2,3,1,1,4]
  <strong>输出:</strong> 2
  <strong>解释:</strong> 跳到最后一个位置的最小跳跃数是 <code>2</code>。
  &nbsp;    从下标为 0 跳到下标为 1 的位置，跳&nbsp;<code>1</code>&nbsp;步，然后跳&nbsp;<code>3</code>&nbsp;步到达数组的最后一个位置。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

假设你总是可以到达数组的最后一个位置。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
