* [[https://leetcode-cn.com/problems/set-matrix-zeroes][73. 矩阵置零]]
  :PROPERTIES:
  :CUSTOM_ID: 矩阵置零
  :END:
[[./solution/0000-0099/0073.Set Matrix Zeroes/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个 m x n 的矩阵，如果一个元素为 0
，则将其所在行和列的所有元素都设为 0 。请使用 原地 算法。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

进阶：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

一个直观的解决方案是使用  O(mn) 的额外空间，但这并不是一个好的解决方案。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

一个简单的改进方案是使用 O(m + n)
的额外空间，但这仍然不是最好的解决方案。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

你能想出一个仅使用常量空间的解决方案吗？

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>matrix = [[1,1,1],[1,0,1],[1,1,1]]
  <strong>输出：</strong>[[1,0,1],[0,0,0],[1,0,1]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
  <strong>输出：</strong>[[0,0,0,0],[0,4,5,0],[0,3,1,0]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == matrix.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == matrix[0].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-231 <= matrix[i][j] <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

*** 方法一：使用两个标记数组
    :PROPERTIES:
    :CUSTOM_ID: 方法一使用两个标记数组
    :END:
用两个数组标记每一行、每一列是否出现零。

遍历原数组，若元素为 0，将元素所在的行、列所对应的标记数组的位置为
true。

最后遍历原数组，用标记数组更新原数组。

*** 方法二：使用两个标记变量
    :PROPERTIES:
    :CUSTOM_ID: 方法二使用两个标记变量
    :END:
用矩阵的第一行和第一列代替方法一中的两个标记数组，以达到 =O(1)=
的额外空间。但这样会导致原数组的第一行和第一列被修改，无法记录它们是否原本包含
0。因此我们需要额外使用两个标记变量分别记录第一行和第一列是否原本包含
0。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

方法一：

#+begin_src python
  class Solution:
      def setZeroes(self, matrix: List[List[int]]) -> None:
          """
          Do not return anything, modify matrix in-place instead.
          """
          m, n = len(matrix), len(matrix[0])
          zero_rows = [False] * m
          zero_cols = [False] * n
          for i in range(m):
              for j in range(n):
                  if matrix[i][j] == 0:
                      zero_rows[i] = zero_cols[j] = True
          for i in range(m):
              for j in range(n):
                  if zero_rows[i] or zero_cols[j]:
                      matrix[i][j] = 0
#+end_src

方法二：

#+begin_src python
  class Solution:
      def setZeroes(self, matrix: List[List[int]]) -> None:
          """
          Do not return anything, modify matrix in-place instead.
          """
          m, n = len(matrix), len(matrix[0])
          first_row_has_zero = any(matrix[0][j] == 0 for j in range(n))
          first_col_has_zero = any(matrix[i][0] == 0 for i in range(m))

          for i in range(1, m):
              for j in range(1, n):
                  if matrix[i][j] == 0:
                      matrix[i][0] = matrix[0][j] = 0

          for i in range(1, m):
              for j in range(1, n):
                  if matrix[i][0] == 0 or matrix[0][j] == 0:
                      matrix[i][j] = 0

          if first_row_has_zero:
              for j in range(n):
                  matrix[0][j] = 0

          if first_col_has_zero:
              for i in range(m):
                  matrix[i][0] = 0
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

方法一：

#+begin_src java
  class Solution {
      public void setZeroes(int[][] matrix) {
          int m = matrix.length, n = matrix[0].length;
          boolean[] zeroRows = new boolean[m];
          boolean[] zeroCols = new boolean[n];
          for (int i = 0; i < m; ++i) {
              for (int j = 0; j < n; ++j) {
                  if (matrix[i][j] == 0) {
                      zeroRows[i] = zeroCols[j] = true;
                  }
              }
          }
          for (int i = 0; i < m; ++i) {
              for (int j = 0; j < n; ++j) {
                  if (zeroRows[i] || zeroCols[j]) {
                      matrix[i][j] = 0;
                  }
              }
          }
      }
  }
#+end_src

方法二：

#+begin_src java
  class Solution {
      public void setZeroes(int[][] matrix) {
          int m = matrix.length, n = matrix[0].length;
          boolean firstRowHasZero = false;
          boolean firstColHasZero = false;
          for (int j = 0; j < n; ++j) {
              if (matrix[0][j] == 0) {
                  firstRowHasZero = true;
                  break;
              }
          }
          for (int i = 0; i < m; ++i) {
              if (matrix[i][0] == 0) {
                  firstColHasZero = true;
                  break;
              }
          }
          for (int i = 1; i < m; ++i) {
              for (int j = 1; j < n; ++j) {
                  // 更新标记数组
                  if (matrix[i][j] == 0) {
                      matrix[i][0] = matrix[0][j] = 0;
                  }
              }
          }
          for (int i = 1; i < m; ++i) {
              for (int j = 1; j < n; ++j) {
                  if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                      matrix[i][j] = 0;
                  }
              }
          }
          if (firstRowHasZero) {
              for (int j = 0; j < n; ++j) {
                  matrix[0][j] = 0;
              }
          }
          if (firstColHasZero) {
              for (int i = 0; i < m; ++i) {
                  matrix[i][0] = 0;
              }
          }
      }
  }
#+end_src

*** *C++*
    :PROPERTIES:
    :CUSTOM_ID: c
    :END:
#+begin_src cpp
  class Solution {
  public:
      void setZeroes(vector<vector<int>>& matrix) {
          int m = matrix.size(), n = matrix[0].size();
          vector<bool> zeroRows(m), zeroCols(n);
          for (int i = 0; i < m; i++) {
              for (int j = 0; j < n; j++) {
                  if (matrix[i][j] == 0) {
                      zeroRows[i] = zeroCols[j] = true;
                  }
              }
          }
          for (int i = 0; i < m; i++) {
              for (int j = 0; j < n; j++) {
                  if (zeroRows[i] || zeroCols[j]) {
                      matrix[i][j] = 0;
                  }
              }
          }
      }
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
