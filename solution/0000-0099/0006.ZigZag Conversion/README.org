* [[https://leetcode-cn.com/problems/zigzag-conversion][6. Z 字形变换]]
  :PROPERTIES:
  :CUSTOM_ID: z-字形变换
  :END:
[[./solution/0000-0099/0006.ZigZag Conversion/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z
字形排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

比如输入字符串为 "PAYPALISHIRING" 行数为 3 时，排列如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  P   A   H   N
  A P L S I I G
  Y   I   R</pre>
#+end_html

#+begin_html
  <p>
#+end_html

之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："PAHNAPLSIIGYIR"。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你实现这个将字符串进行指定行数变换的函数：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  string convert(string s, int numRows);</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "PAYPALISHIRING", numRows = 3
  <strong>输出：</strong>"PAHNAPLSIIGYIR"
  </pre>
#+end_html

示例 2：

#+begin_html
  <pre>
  <strong>输入：</strong>s = "PAYPALISHIRING", numRows = 4
  <strong>输出：</strong>"PINALSIGYAHRPI"
  <strong>解释：</strong>
  P     I    N
  A   L S  I G
  Y A   H R
  P     I
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "A", numRows = 1
  <strong>输出：</strong>"A"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 由英文字母（小写和大写）、',' 和 '.' 组成

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= numRows <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
