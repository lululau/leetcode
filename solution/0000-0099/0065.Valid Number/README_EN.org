* [[https://leetcode.com/problems/valid-number][65. Valid Number]]
  :PROPERTIES:
  :CUSTOM_ID: valid-number
  :END:
[[./solution/0000-0099/0065.Valid Number/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A valid number can be split up into these components (in order):

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

A decimal number or an integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

(Optional) An 'e' or 'E', followed by an integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

A decimal number can be split up into these components (in order):

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

(Optional) A sign character (either '+' or '-').

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

One of the following formats:

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

At least one digit, followed by a dot '.'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At least one digit, followed by a dot '.', followed by at least one
digit.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

A dot '.', followed by at least one digit.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_example
  </li>
#+end_example

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

An integer can be split up into these components (in order):

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

(Optional) A sign character (either '+' or '-').

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At least one digit.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

For example, all the following are valid numbers: ["2", "0089", "-0.1",
"+3.14", "4.", "-.9", "2e10", "-90E3", "3e+7", "+6e-1", "53.5e93",
"-123.456e789"], while the following are not valid numbers: ["abc",
"1a", "1e", "e3", "99e2.5", "--6", "-+3", "95a54e53"].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a string s, return true if s is a valid number.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0&quot;
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;e&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;.&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;.1&quot;
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of only English letters (both uppercase and lowercase),
digits (0-9), plus '+', minus '-', or dot '.'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
