* [[https://leetcode-cn.com/problems/count-and-say][38. 外观数列]]
  :PROPERTIES:
  :CUSTOM_ID: 外观数列
  :END:
[[./solution/0000-0099/0038.Count and Say/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个正整数 n ，输出外观数列的第 n 项。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

「外观数列」是一个整数序列，从数字 1
开始，序列中的每一项都是对前一项的描述。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以将其视作是由递归公式定义的数字字符串序列：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

countAndSay(1) = "1"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

countAndSay(n) 是对 countAndSay(n-1)
的描述，然后转换成另一个数字字符串。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

前五项如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  1.     1
  2.     11
  3.     21
  4.     1211
  5.     111221
  第一项是数字 1 
  描述前一项，这个数是 <code>1</code> 即 “ 一 个 1 ”，记作 <code>"11"
  </code>描述前一项，这个数是 <code>11</code> 即 “ 二 个 1 ” ，记作 <code>"21"
  </code>描述前一项，这个数是 <code>21</code> 即 “ 一 个 2 + 一 个 1 ” ，记作 "<code>1211"
  </code>描述前一项，这个数是 <code>1211</code> 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 "<code>111221"</code>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

要 描述 一个数字字符串，首先要将字符串分割为 最小
数量的组，每个组都由连续的最多 相同字符
组成。然后对于每个组，先描述字符的数量，然后描述字符，形成一个描述组。要将描述转换为数字字符串，先将每组中的字符数量用数字替换，再将所有描述组连接起来。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

例如，数字字符串 "3322251" 的描述如下图：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 1
  <strong>输出：</strong>"1"
  <strong>解释：</strong>这是一个基本样例。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 4
  <strong>输出：</strong>"1211"
  <strong>解释：</strong>
  countAndSay(1) = "1"
  countAndSay(2) = 读 "1" = 一 个 1 = "11"
  countAndSay(3) = 读 "11" = 二 个 1 = "21"
  countAndSay(4) = 读 "21" = 一 个 2 + 一 个 1 = "12" + "11" = "1211"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 30

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
