* [[https://leetcode-cn.com/problems/permutation-sequence][60.
排列序列]]
  :PROPERTIES:
  :CUSTOM_ID: 排列序列
  :END:
[[./solution/0000-0099/0060.Permutation Sequence/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给出集合 [1,2,3,...,n]，其所有元素共有 n! 种排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

"123"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"132"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"213"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"231"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"312"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"321"

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

给定 n 和 k，返回第 k 个排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 3, k = 3
  <strong>输出：</strong>"213"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 4, k = 9
  <strong>输出：</strong>"2314"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 3, k = 1
  <strong>输出：</strong>"123"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= n!

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
