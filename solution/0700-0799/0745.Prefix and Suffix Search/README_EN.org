* [[https://leetcode.com/problems/prefix-and-suffix-search][745. Prefix
and Suffix Search]]
  :PROPERTIES:
  :CUSTOM_ID: prefix-and-suffix-search
  :END:
[[./solution/0700-0799/0745.Prefix and Suffix Search/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Design a special dictionary which has some words and allows you to
search the words in it by a prefix and a suffix.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Implement the WordFilter class:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

WordFilter(string[] words) Initializes the object with the words in the
dictionary.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

f(string prefix, string suffix) Returns the index of the word in the
dictionary which has the prefix prefix and the suffix suffix. If there
is more than one valid index, return the largest of them. If there is no
such word in the dictionary, return -1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input</strong>
  [&quot;WordFilter&quot;, &quot;f&quot;]
  [[[&quot;apple&quot;]], [&quot;a&quot;, &quot;e&quot;]]
  <strong>Output</strong>
  [null, 0]

  <strong>Explanation</strong>
  WordFilter wordFilter = new WordFilter([&quot;apple&quot;]);
  wordFilter.f(&quot;a&quot;, &quot;e&quot;); // return 0, because the word at index 0 has prefix = &quot;a&quot; and suffix = &#39;e&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 15000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= prefix.length, suffix.length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i], prefix and suffix consist of lower-case English letters only.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At most 15000 calls will be made to the function f.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
