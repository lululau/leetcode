* [[https://leetcode.com/problems/swap-adjacent-in-lr-string][777. Swap
Adjacent in LR String]]
  :PROPERTIES:
  :CUSTOM_ID: swap-adjacent-in-lr-string
  :END:
[[./solution/0700-0799/0777.Swap Adjacent in LR String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

In a string composed of 'L', 'R', and 'X' characters, like "RXXLRXRXL",
a move consists of either replacing one occurrence of "XL" with "LX", or
replacing one occurrence of "RX" with "XR". Given the starting string
start and the ending string end, return True if and only if there exists
a sequence of moves to transform one string to the other.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> start = &quot;RXXLRXRXL&quot;, end = &quot;XRLXXRRLX&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> We can transform start to end following these steps:
  RXXLRXRXL -&gt;
  XRXLRXRXL -&gt;
  XRLXRXRXL -&gt;
  XRLXXRRXL -&gt;
  XRLXXRRLX
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> start = &quot;X&quot;, end = &quot;L&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> start = &quot;LLR&quot;, end = &quot;RRL&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> start = &quot;XL&quot;, end = &quot;LX&quot;
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> start = &quot;XLLR&quot;, end = &quot;LXLX&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= start.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

start.length == end.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Both start and end will only consist of characters in 'L', 'R', and 'X'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
