* [[https://leetcode-cn.com/problems/random-pick-with-blacklist][710.
黑名单中的随机数]]
  :PROPERTIES:
  :CUSTOM_ID: 黑名单中的随机数
  :END:
[[./solution/0700-0799/0710.Random Pick with Blacklist/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个包含 [0，n ) 中独特的整数的黑名单 B，写一个函数从 [ 0，n )
中返回一个不在 B 中的随机整数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

对它进行优化使其尽量少调用系统方法 Math.random() 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= N <= 1000000000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= B.length < min(100000, N)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

[0, N) 不包含 N，详细参见 interval notation 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: 
  </strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]
  [[1,[]],[],[],[]]
  <strong>输出: </strong>[null,0,0,0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: 
  </strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]
  [[2,[]],[],[],[]]
  <strong>输出: </strong>[null,1,1,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: 
  </strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]
  [[3,[1]],[],[],[]]
  <strong>Output: </strong>[null,0,0,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: 
  </strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]
  [[4,[2]],[],[],[]]
  <strong>输出: </strong>[null,1,3,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

输入语法说明：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输入是两个列表：调用成员函数名和调用的参数。Solution的构造函数有两个参数，N 和黑名单 B。pick 没有参数，输入参数是一个列表，即使参数为空，也会输入一个
[] 空列表。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
