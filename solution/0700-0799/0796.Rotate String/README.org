* [[https://leetcode-cn.com/problems/rotate-string][796. 旋转字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 旋转字符串
  :END:
[[./solution/0700-0799/0796.Rotate String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定两个字符串, A 和 B。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A 的旋转操作就是将 A 最左边的字符移动到最右边。 例如, 若 A =
'abcde'，在移动一次之后结果就是'bcdea' 。如果在若干次旋转操作之后，A 能变成B，那么返回True。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>示例 1:</strong>
  <strong>输入:</strong> A = &#39;abcde&#39;, B = &#39;cdeab&#39;
  <strong>输出:</strong> true

  <strong>示例 2:</strong>
  <strong>输入:</strong> A = &#39;abcde&#39;, B = &#39;abced&#39;
  <strong>输出:</strong> false</pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

A 和 B 长度不超过 100。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
