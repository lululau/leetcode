* [[https://leetcode-cn.com/problems/1-bit-and-2-bit-characters][717.
1比特与2比特字符]]
  :PROPERTIES:
  :CUSTOM_ID: 比特与2比特字符
  :END:
[[./solution/0700-0799/0717.1-bit and 2-bit Characters/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有两种特殊字符。第一种字符可以用一比特0来表示。第二种字符可以用两比特(10 或 11)来表示。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现给一个由若干比特组成的字符串。问最后一个字符是否必定为一个一比特字符。给定的字符串总是由0结束。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> 
  bits = [1, 0, 0]
  <strong>输出:</strong> True
  <strong>解释:</strong> 
  唯一的编码方式是一个两比特字符和一个一比特字符。所以最后一个字符是一比特字符。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> 
  bits = [1, 1, 1, 0]
  <strong>输出:</strong> False
  <strong>解释:</strong> 
  唯一的编码方式是两比特字符和两比特字符。所以最后一个字符不是一比特字符。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= len(bits) <= 1000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

bits[i] 总是0 或 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
