* [[https://leetcode.com/problems/1-bit-and-2-bit-characters][717. 1-bit
and 2-bit Characters]]
  :PROPERTIES:
  :CUSTOM_ID: bit-and-2-bit-characters
  :END:
[[./solution/0700-0799/0717.1-bit and 2-bit Characters/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We have two special characters. The first character can be represented
by one bit 0. The second character can be represented by two bits (10 or
11).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Now given a string represented by several bits. Return whether the last
character must be a one-bit character or not. The given string will
always end with a zero.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  <pre>

  <b>Input:</b> 

  bits = [1, 0, 0]

  <b>Output:</b> True

  <b>Explanation:</b> 

  The only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  <pre>

  <b>Input:</b> 

  bits = [1, 1, 1, 0]

  <b>Output:</b> False

  <b>Explanation:</b> 

  The only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  <li>
#+end_html

1 <= len(bits) <= 1000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

bits[i] is always 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
