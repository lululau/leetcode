* [[https://leetcode-cn.com/problems/transform-to-chessboard][782.
变为棋盘]]
  :PROPERTIES:
  :CUSTOM_ID: 变为棋盘
  :END:
[[./solution/0700-0799/0782.Transform to Chessboard/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

一个 N x N的
board 仅由 0 和 1 组成 。每次移动，你能任意交换两列或是两行的位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输出将这个矩阵变为 “棋盘” 所需的最小移动次数。“棋盘”
是指任意一格的上下左右四个方向的值均与本身不同的矩阵。如果不存在可行的变换，输出
-1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>示例:</strong>
  <strong>输入:</strong> board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]
  <strong>输出:</strong> 2
  <strong>解释:</strong>
  一种可行的变换方式如下，从左到右：

  0110     1010     1010
  0110 --&gt; 1010 --&gt; 0101
  1001     0101     1010
  1001     0101     0101

  第一次移动交换了第一列和第二列。
  第二次移动交换了第二行和第三行。


  <strong>输入:</strong> board = [[0, 1], [1, 0]]
  <strong>输出:</strong> 0
  <strong>解释:</strong>
  注意左上角的格值为0时也是合法的棋盘，如：

  01
  10

  也是合法的棋盘.

  <strong>输入:</strong> board = [[1, 0], [1, 0]]
  <strong>输出:</strong> -1
  <strong>解释:</strong>
  任意的变换都不能使这个输入变为合法的棋盘。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

board 是方阵，且行列数的范围是[2, 30]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

board[i][j] 将只包含 0或 1。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
