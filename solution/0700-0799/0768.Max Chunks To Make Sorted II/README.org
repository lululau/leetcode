* [[https://leetcode-cn.com/problems/max-chunks-to-make-sorted-ii][768.
最多能完成排序的块 II]]
  :PROPERTIES:
  :CUSTOM_ID: 最多能完成排序的块-ii
  :END:
[[./solution/0700-0799/0768.Max Chunks To Make Sorted II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

这个问题和“最多能完成排序的块”相似，但给定数组中的元素可以重复，输入数组最大长度为2000，其中的元素最大为10**8。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

arr是一个可能包含重复元素的整数数组，我们将这个数组分割成几个“块”，并将这些块分别进行排序。之后再连接起来，使得连接的结果和按升序排序后的原数组相同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们最多能将数组分成多少块？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> arr = [5,4,3,2,1]
  <strong>输出:</strong> 1
  <strong>解释:</strong>
  将数组分成2块或者更多块，都无法得到所需的结果。
  例如，分成 [5, 4], [3, 2, 1] 的结果是 [4, 5, 1, 2, 3]，这不是有序的数组。 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> arr = [2,1,3,4,4]
  <strong>输出:</strong> 4
  <strong>解释:</strong>
  我们可以把它分成两块，例如 [2, 1], [3, 4, 4]。
  然而，分成 [2, 1], [3], [4], [4] 可以得到最多的块数。 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

arr的长度在[1, 2000]之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr[i]的大小在[0, 10**8]之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
