* [[https://leetcode.com/problems/k-th-smallest-prime-fraction][786.
K-th Smallest Prime Fraction]]
  :PROPERTIES:
  :CUSTOM_ID: k-th-smallest-prime-fraction
  :END:
[[./solution/0700-0799/0786.K-th Smallest Prime Fraction/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a sorted integer array arr containing 1 and prime numbers,
where all the integers of arr are unique. You are also given an integer
k.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For every i and j where 0 <= i < j < arr.length, we consider the
fraction arr[i] / arr[j].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the kth smallest fraction considered. Return your answer as an
array of integers of size 2, where answer[0] == arr[i] and answer[1] ==
arr[j].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [1,2,3,5], k = 3
  <strong>Output:</strong> [2,5]
  <strong>Explanation:</strong> The fractions to be considered in sorted order are:
  1/5, 1/3, 2/5, 1/2, 3/5, and 2/3.
  The third fraction is 2/5.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [1,7], k = 1
  <strong>Output:</strong> [1,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= arr.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= 3 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr[0] == 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr[i] is a prime number for i > 0.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the numbers of arr are unique and sorted in strictly increasing
order.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= arr.length * (arr.length - 1) / 2

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
