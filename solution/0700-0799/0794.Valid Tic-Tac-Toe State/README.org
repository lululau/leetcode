* [[https://leetcode-cn.com/problems/valid-tic-tac-toe-state][794.
有效的井字游戏]]
  :PROPERTIES:
  :CUSTOM_ID: 有效的井字游戏
  :END:
[[./solution/0700-0799/0794.Valid Tic-Tac-Toe State/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

用字符串数组作为井字游戏的游戏板 board。当且仅当在井字游戏过程中，玩家有可能将字符放置成游戏板所显示的状态时，才返回
true。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

该游戏板是一个 3 x 3 数组，由字符 " "，"X" 和 "O" 组成。字符 "
" 代表一个空位。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

以下是井字游戏的规则：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

玩家轮流将字符放入空位（" "）中。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

第一个玩家总是放字符 “X”，且第二个玩家总是放字符 “O”。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

“X” 和 “O” 只允许放置在空位中，不允许对已放有字符的位置进行填充。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

当有 3 个相同（且非空）的字符填充任何行、列或对角线时，游戏结束。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

当所有位置非空时，也算为游戏结束。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果游戏结束，玩家不允许再放置字符。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <pre>
  <strong>示例 1:</strong>
  <strong>输入:</strong> board = [&quot;O&nbsp; &quot;, &quot;&nbsp; &nbsp;&quot;, &quot;&nbsp; &nbsp;&quot;]
  <strong>输出:</strong> false
  <strong>解释:</strong> 第一个玩家总是放置&ldquo;X&rdquo;。

  <strong>示例 2:</strong>
  <strong>输入:</strong> board = [&quot;XOX&quot;, &quot; X &quot;, &quot;   &quot;]
  <strong>输出:</strong> false
  <strong>解释:</strong> 玩家应该是轮流放置的。

  <strong>示例 3:</strong>
  <strong>输入:</strong> board = [&quot;XXX&quot;, &quot;   &quot;, &quot;OOO&quot;]
  <strong>输出:</strong> false

  <strong>示例 4:</strong>
  <strong>输入:</strong> board = [&quot;XOX&quot;, &quot;O O&quot;, &quot;XOX&quot;]
  <strong>输出:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

游戏板 board 是长度为 3
的字符串数组，其中每个字符串 board[i] 的长度为 3。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

 board[i][j] 是集合 {" ", "X", "O"} 中的一个字符。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
