* [[https://leetcode.com/problems/max-chunks-to-make-sorted][769. Max
Chunks To Make Sorted]]
  :PROPERTIES:
  :CUSTOM_ID: max-chunks-to-make-sorted
  :END:
[[./solution/0700-0799/0769.Max Chunks To Make Sorted/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array arr that is a permutation of [0, 1, ..., arr.length - 1],
we split the array into some number of "chunks" (partitions), and
individually sort each chunk.  After concatenating them, the result
equals the sorted array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

What is the most number of chunks we could have made?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> arr = [4,3,2,1,0]

  <strong>Output:</strong> 1

  <strong>Explanation:</strong>

  Splitting into two or more chunks will not return the required result.

  For example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn&#39;t sorted.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> arr = [1,0,2,3,4]

  <strong>Output:</strong> 4

  <strong>Explanation:</strong>

  We can split into two chunks, such as [1, 0], [2, 3, 4].

  However, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

arr will have length in range [1, 10].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr[i] will be a permutation of [0, 1, ..., arr.length - 1].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
