* [[https://leetcode-cn.com/problems/reach-a-number][754. 到达终点数字]]
  :PROPERTIES:
  :CUSTOM_ID: 到达终点数字
  :END:
[[./solution/0700-0799/0754.Reach a Number/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在一根无限长的数轴上，你站在0的位置。终点在target的位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每次你可以选择向左或向右移动。第 n 次移动（从 1 开始），可以走 n 步。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回到达终点需要的最小移动次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> target = 3
  <strong>输出:</strong> 2
  <strong>解释:</strong>
  第一次移动，从 0 到 1 。
  第二次移动，从 1 到 3 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> target = 2
  <strong>输出:</strong> 3
  <strong>解释:</strong>
  第一次移动，从 0 到 1 。
  第二次移动，从 1 到 -1 。
  第三次移动，从 -1 到 2 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

target是在[-10^9, 10^9]范围中的非零整数。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
