* [[https://leetcode.com/problems/global-and-local-inversions][775.
Global and Local Inversions]]
  :PROPERTIES:
  :CUSTOM_ID: global-and-local-inversions
  :END:
[[./solution/0700-0799/0775.Global and Local Inversions/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an integer array nums of length n which represents a
permutation of all the integers in the range [0, n - 1].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The number of global inversions is the number of the different pairs (i,
j) where:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= i < j < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[i] > nums[j]

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The number of local inversions is the number of indices i where:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= i < n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[i] > nums[i + 1]

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if the number of global inversions is equal to the number of
local inversions.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,0,2]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> There is 1 global inversion and 1 local inversion.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,0]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> There are 2 global inversions and 1 local inversion.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == nums.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 5000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the integers of nums are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums is a permutation of all the numbers in the range [0, n - 1].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
