* [[https://leetcode-cn.com/problems/cracking-the-safe][753.
破解保险箱]]
  :PROPERTIES:
  :CUSTOM_ID: 破解保险箱
  :END:
[[./solution/0700-0799/0753.Cracking the Safe/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有一个需要密码才能打开的保险箱。密码是 n 位数,
密码的每一位是 k 位序列 0, 1, ..., k-1 中的一个 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以随意输入密码，保险箱会自动记住最后 n 位输入，如果匹配，则能够打开保险箱。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

举个例子，假设密码是 "345"，你可以输入 "012345" 来打开它，只是你输入了
6 个字符.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请返回一个能打开保险箱的最短字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> n = 1, k = 2
  <strong>输出:</strong> &quot;01&quot;
  <strong>说明:</strong> &quot;10&quot;也可以打开保险箱。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> n = 2, k = 2
  <strong>输出:</strong> &quot;00110&quot;
  <strong>说明: </strong>&quot;01100&quot;, &quot;10011&quot;, &quot;11001&quot; 也能打开保险箱。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

n 的范围是 [1, 4]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

k 的范围是 [1, 10]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

k^n 最大可能为 4096。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
