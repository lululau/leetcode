* [[https://leetcode-cn.com/problems/employee-free-time][759.
员工空闲时间]]
  :PROPERTIES:
  :CUSTOM_ID: 员工空闲时间
  :END:
[[./solution/0700-0799/0759.Employee Free Time/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定员工的 schedule 列表，表示每个员工的工作时间。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每个员工都有一个非重叠的时间段  Intervals 列表，这些时间段已经排好序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回表示 所有 员工的 共同，正数长度的空闲时间
的有限时间段的列表，同样需要排好序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>schedule = [[[1,2],[5,6]],[[1,3]],[[4,10]]]
  <strong>输出：</strong>[[3,4]]
  <strong>解释：</strong>
  共有 3 个员工，并且所有共同的
  空间时间段是 [-inf, 1], [3, 4], [10, inf]。
  我们去除所有包含 inf 的时间段，因为它们不是有限的时间段。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>schedule = [[[1,3],[6,7]],[[2,4]],[[2,5],[9,12]]]
  <strong>输出：</strong>[[5,6],[7,9]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

（尽管我们用 [x, y] 的形式表示 Intervals ，内部的对象是 Intervals
而不是列表或数组。例如，schedule[0][0].start = 1, schedule[0][0].end =
2，并且 schedule[0][0][0] 是未定义的）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

而且，答案中不包含 [5, 5] ，因为长度为 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

schedule 和 schedule[i] 为长度范围在 [1, 50]的列表。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= schedule[i].start < schedule[i].end <= 10^8。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

注：输入类型于 2019 年 4 月 15 日
改变。请重置为默认代码的定义以获取新方法。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
