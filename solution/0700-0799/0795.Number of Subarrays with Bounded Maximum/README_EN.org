* [[https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum][795.
Number of Subarrays with Bounded Maximum]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-subarrays-with-bounded-maximum
  :END:
[[./solution/0700-0799/0795.Number of Subarrays with Bounded Maximum/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We are given an array A of positive integers, and two positive integers
L and R (L <= R).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of (contiguous, non-empty) subarrays such that the
value of the maximum array element in that subarray is at least L and at
most R.

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Example :</strong>

  <strong>Input:</strong> 

  A = [2, 1, 4, 3]

  L = 2

  R = 3

  <strong>Output:</strong> 3

  <strong>Explanation:</strong> There are three subarrays that meet the requirements: [2], [2, 1], [3].

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

L, R  and A[i] will be an integer in the range [0, 10^9].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The length of A will be in the range of [1, 50000].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
