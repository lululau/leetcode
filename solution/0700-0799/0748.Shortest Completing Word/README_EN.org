* [[https://leetcode.com/problems/shortest-completing-word][748.
Shortest Completing Word]]
  :PROPERTIES:
  :CUSTOM_ID: shortest-completing-word
  :END:
[[./solution/0700-0799/0748.Shortest Completing Word/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string licensePlate and an array of strings words, find the
shortest completing word in words.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A completing word is a word that contains all the letters in
licensePlate. Ignore numbers and spaces in licensePlate, and treat
letters as case insensitive. If a letter appears more than once in
licensePlate, then it must appear in the word the same number of times
or more.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if licensePlate = "aBc 12c", then it contains letters 'a',
'b' (ignoring case), and 'c' twice. Possible completing words are
"abccdef", "caaacab", and "cbca".

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the shortest completing word in words. It is guaranteed an answer
exists. If there are multiple shortest completing words, return the
first one that occurs in words.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> licensePlate = &quot;1s3 PSt&quot;, words = [&quot;step&quot;,&quot;steps&quot;,&quot;stripe&quot;,&quot;stepple&quot;]
  <strong>Output:</strong> &quot;steps&quot;
  <strong>Explanation:</strong> licensePlate contains letters &#39;s&#39;, &#39;p&#39;, &#39;s&#39; (ignoring case), and &#39;t&#39;.
  &quot;step&quot; contains &#39;t&#39; and &#39;p&#39;, but only contains 1 &#39;s&#39;.
  &quot;steps&quot; contains &#39;t&#39;, &#39;p&#39;, and both &#39;s&#39; characters.
  &quot;stripe&quot; is missing an &#39;s&#39;.
  &quot;stepple&quot; is missing an &#39;s&#39;.
  Since &quot;steps&quot; is the only word containing all the letters, that is the answer.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> licensePlate = &quot;1s3 456&quot;, words = [&quot;looks&quot;,&quot;pest&quot;,&quot;stew&quot;,&quot;show&quot;]
  <strong>Output:</strong> &quot;pest&quot;
  <strong>Explanation:</strong> licensePlate only contains the letter &#39;s&#39;. All the words contain &#39;s&#39;, but among these &quot;pest&quot;, &quot;stew&quot;, and &quot;show&quot; are shortest. The answer is &quot;pest&quot; because it is the word that appears earliest of the 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> licensePlate = &quot;Ah71752&quot;, words = [&quot;suggest&quot;,&quot;letter&quot;,&quot;of&quot;,&quot;husband&quot;,&quot;easy&quot;,&quot;education&quot;,&quot;drug&quot;,&quot;prevent&quot;,&quot;writer&quot;,&quot;old&quot;]
  <strong>Output:</strong> &quot;husband&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> licensePlate = &quot;OgEu755&quot;, words = [&quot;enough&quot;,&quot;these&quot;,&quot;play&quot;,&quot;wide&quot;,&quot;wonder&quot;,&quot;box&quot;,&quot;arrive&quot;,&quot;money&quot;,&quot;tax&quot;,&quot;thus&quot;]
  <strong>Output:</strong> &quot;enough&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> licensePlate = &quot;iMSlpe4&quot;, words = [&quot;claim&quot;,&quot;consumer&quot;,&quot;student&quot;,&quot;camera&quot;,&quot;public&quot;,&quot;never&quot;,&quot;wonder&quot;,&quot;simple&quot;,&quot;thought&quot;,&quot;use&quot;]
  <strong>Output:</strong> &quot;simple&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= licensePlate.length <= 7

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

licensePlate contains digits, letters (uppercase or lowercase), or space
' '.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 15

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i] consists of lower case English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
