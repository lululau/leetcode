* [[https://leetcode.com/problems/number-of-atoms][726. Number of
Atoms]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-atoms
  :END:
[[./solution/0700-0799/0726.Number of Atoms/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a chemical formula (given as a string), return the count of each
atom.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The atomic element always starts with an uppercase character, then zero
or more lowercase letters, representing the name.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

One or more digits representing that element's count may follow if the
count is greater than 1. If the count is 1, no digits will follow. For
example, H2O and H2O2 are possible, but H1O2 is impossible.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two formulas concatenated together to produce another formula. For
example, H2O2He3Mg4 is also a formula.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A formula placed in parentheses, and a count (optionally added) is also
a formula. For example, (H2O2) and (H2O2)3 are formulas.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a formula, return the count of all elements as a string in the
following form: the first name (in sorted order), followed by its count
(if that count is more than 1), followed by the second name (in sorted
order), followed by its count (if that count is more than 1), and so on.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> formula = &quot;H2O&quot;
  <strong>Output:</strong> &quot;H2O&quot;
  <strong>Explanation:</strong> The count of elements are {&#39;H&#39;: 2, &#39;O&#39;: 1}.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> formula = &quot;Mg(OH)2&quot;
  <strong>Output:</strong> &quot;H2MgO2&quot;
  <strong>Explanation:</strong> The count of elements are {&#39;H&#39;: 2, &#39;Mg&#39;: 1, &#39;O&#39;: 2}.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> formula = &quot;K4(ON(SO3)2)2&quot;
  <strong>Output:</strong> &quot;K4N2O14S4&quot;
  <strong>Explanation:</strong> The count of elements are {&#39;K&#39;: 4, &#39;N&#39;: 2, &#39;O&#39;: 14, &#39;S&#39;: 4}.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> formula = &quot;Be32&quot;
  <strong>Output:</strong> &quot;Be32&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= formula.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

formula consists of English letters, digits, '(', and ')'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

formula is always valid.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
