* [[https://leetcode-cn.com/problems/insert-into-a-binary-search-tree][701.
二叉搜索树中的插入操作]]
  :PROPERTIES:
  :CUSTOM_ID: 二叉搜索树中的插入操作
  :END:
[[./solution/0700-0799/0701.Insert into a Binary Search Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定二叉搜索树（BST）的根节点和要插入树中的值，将值插入二叉搜索树。
返回插入后二叉搜索树的根节点。 输入数据 保证
，新值和原始二叉搜索树中的任意节点值都不同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，可能存在多种有效的插入方式，只要树在插入后仍保持为二叉搜索树即可。
你可以返回 任意有效的结果 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [4,2,7,1,3], val = 5
  <strong>输出：</strong>[4,2,7,1,3,5]
  <strong>解释：</strong>另一个满足题目要求可以通过的树是：
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0700-0799/0701.Insert into a Binary Search Tree/images/bst.jpg" style="width: 352px; height: 301px;" />
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [40,20,60,10,30,50,70], val = 25
  <strong>输出：</strong>[40,20,60,10,30,50,70,null,null,25]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [4,2,7,1,3,null,null,null,null,null,null], val = 5
  <strong>输出：</strong>[4,2,7,1,3,5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

给定的树上的节点数介于 0 和 10^4 之间

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每个节点都有一个唯一整数值，取值范围从 0 到 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^8 <= val <= 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

新值和原始二叉搜索树中的任意节点值都不同

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
