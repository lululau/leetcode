* [[https://leetcode-cn.com/problems/rotated-digits][788. 旋转数字]]
  :PROPERTIES:
  :CUSTOM_ID: 旋转数字
  :END:
[[./solution/0700-0799/0788.Rotated Digits/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

我们称一个数 X 为好数, 如果它的每位数字逐个地被旋转 180
度后，我们仍可以得到一个有效的，且和 X
不同的数。要求每位数字都要被旋转。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果一个数的每位数字被旋转以后仍然还是一个数字， 则这个数是有效的。0, 1,
和 8 被旋转后仍然是它们自己；2 和 5
可以互相旋转成对方（在这种情况下，它们以不同的方向旋转，换句话说，2 和 5
互为镜像）；6 和 9
同理，除了这些以外其他的数字旋转以后都不再是有效的数字。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在我们有一个正整数 N, 计算从 1 到 N 中有多少个数 X 是好数？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 10
  <strong>输出:</strong> 4
  <strong>解释:</strong> 
  在[1, 10]中有四个好数： 2, 5, 6, 9。
  注意 1 和 10 不是好数, 因为他们在旋转之后不变。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

N 的取值范围是 [1, 10000]。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
