* [[https://leetcode-cn.com/problems/number-of-matching-subsequences][792.
匹配子序列的单词数]]
  :PROPERTIES:
  :CUSTOM_ID: 匹配子序列的单词数
  :END:
[[./solution/0700-0799/0792.Number of Matching Subsequences/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定字符串 S 和单词字典 words, 求 words[i] 中是 S 的子序列的单词个数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>示例:</strong>
  <strong>输入:</strong> 
  S = &quot;abcde&quot;
  words = [&quot;a&quot;, &quot;bb&quot;, &quot;acd&quot;, &quot;ace&quot;]
  <strong>输出:</strong> 3
  <strong>解释:</strong> 有三个是&nbsp;S 的子序列的单词: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

所有在words和 S 里的单词都只由小写字母组成。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S 的长度在 [1, 50000]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words 的长度在 [1, 5000]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i]的长度在[1, 50]。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
