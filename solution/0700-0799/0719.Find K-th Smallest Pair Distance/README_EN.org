* [[https://leetcode.com/problems/find-k-th-smallest-pair-distance][719.
Find K-th Smallest Pair Distance]]
  :PROPERTIES:
  :CUSTOM_ID: find-k-th-smallest-pair-distance
  :END:
[[./solution/0700-0799/0719.Find K-th Smallest Pair Distance/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an integer array, return the k-th smallest distance among all the
pairs. The distance of a pair (A, B) is defined as the absolute
difference between A and B.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  <pre>

  <b>Input:</b>

  nums = [1,3,1]

  k = 1

  <b>Output: 0</b> 

  <b>Explanation:</b>

  Here are all the pairs:

  (1,3) -> 2

  (1,1) -> 0

  (3,1) -> 2

  Then the 1st smallest distance pair is (1,1), and its distance is 0.

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= len(nums) <= 10000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] < 1000000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= len(nums) * (len(nums) - 1) / 2.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
