* [[https://leetcode.com/problems/self-dividing-numbers][728. Self
Dividing Numbers]]
  :PROPERTIES:
  :CUSTOM_ID: self-dividing-numbers
  :END:
[[./solution/0700-0799/0728.Self Dividing Numbers/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A self-dividing number is a number that is divisible by every digit it
contains.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2
== 0, and 128 % 8 == 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Also, a self-dividing number is not allowed to contain the digit zero.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a lower and upper number bound, output a list of every possible
self dividing number, including the bounds if possible.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  <pre>

  <b>Input:</b> 

  left = 1, right = 22

  <b>Output:</b> [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  <li>
#+end_html

The boundaries of each input argument are 1 <= left <= right <= 10000.

#+begin_html
  </li>
#+end_html

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
