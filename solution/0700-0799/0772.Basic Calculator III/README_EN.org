* [[https://leetcode.com/problems/basic-calculator-iii][772. Basic
Calculator III]]
  :PROPERTIES:
  :CUSTOM_ID: basic-calculator-iii
  :END:
[[./solution/0700-0799/0772.Basic Calculator III/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Implement a basic calculator to evaluate a simple expression string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The expression string contains only non-negative integers, '+', '-',
'*', '/' operators, and open '(' and closing parentheses ')'. The
integer division should truncate toward zero.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may assume that the given expression is always valid. All
intermediate results will be in the range of [-231, 231 - 1].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;1+1&quot;
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;6-4/2&quot;
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;2*(5+5*2)/3+(6/2+8)&quot;
  <strong>Output:</strong> 21
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;(2+6*3+5-(3*14/7+2)*5)+3&quot;
  <strong>Output:</strong> -12
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;0&quot;
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of digits, '+', '-', '*', '/', '(', and ')'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s is a valid expression.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

Follow up: Could you solve the problem without using built-in library
functions?

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
