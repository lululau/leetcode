* [[https://leetcode.com/problems/contain-virus][749. Contain Virus]]
  :PROPERTIES:
  :CUSTOM_ID: contain-virus
  :END:
[[./solution/0700-0799/0749.Contain Virus/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A virus is spreading rapidly, and your task is to quarantine the
infected area by installing walls.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The world is modeled as a 2-D array of cells, where 0 represents
uninfected cells, and 1 represents cells contaminated with the virus. A
wall (and only one wall) can be installed between any two
4-directionally adjacent cells, on the shared boundary.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Every night, the virus spreads to all neighboring cells in all four
directions unless blocked by a wall.

Resources are limited. Each day, you can install walls around only one
region -- the affected area (continuous block of infected cells) that
threatens the most uninfected cells the following night. There will
never be a tie.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Can you save the day? If so, what is the number of walls required? If
not, and the world becomes fully infected, return the number of walls
used.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  <pre>

  <b>Input:</b> grid = 

  [[0,1,0,0,0,0,0,1],

   [0,1,0,0,0,0,0,1],

   [0,0,0,0,0,0,0,1],

   [0,0,0,0,0,0,0,0]]

  <b>Output:</b> 10

  <b>Explanation:</b>

  There are 2 contaminated regions.

  On the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:



  [[0,1,0,0,0,0,1,1],

   [0,1,0,0,0,0,1,1],

   [0,0,0,0,0,0,1,1],

   [0,0,0,0,0,0,0,1]]



  On the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  <pre>

  <b>Input:</b> grid = 

  [[1,1,1],

   [1,0,1],

   [1,1,1]]

  <b>Output:</b> 4

  <b>Explanation:</b> Even though there is only one cell saved, there are 4 walls built.

  Notice that walls are only built on the shared boundary of two different cells.

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  <pre>

  <b>Input:</b> grid = 

  [[1,1,1,0,0,0,0,0,0],

   [1,0,1,0,1,1,1,1,1],

   [1,1,1,0,0,0,0,0,0]]

  <b>Output:</b> 13

  <b>Explanation:</b> The region on the left only builds two new walls.

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

The number of rows and columns of grid will each be in the range [1,
50].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Each grid[i][j] will be either 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Throughout the described process, there is always a contiguous viral
region that will infect strictly more uncontaminated squares in the next
round.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
