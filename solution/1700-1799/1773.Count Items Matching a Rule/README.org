* [[https://leetcode-cn.com/problems/count-items-matching-a-rule][1773.
统计匹配检索规则的物品数量]]
  :PROPERTIES:
  :CUSTOM_ID: 统计匹配检索规则的物品数量
  :END:
[[./solution/1700-1799/1773.Count Items Matching a Rule/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 items ，其中 items[i] = [typei, colori, namei] ，描述第 i
件物品的类型、颜色以及名称。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

另给你一条由两个字符串 ruleKey 和 ruleValue 表示的检索规则。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果第 i 件物品能满足下述条件之一，则认为该物品与给定的检索规则 匹配 ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

ruleKey == "type" 且 ruleValue == typei 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ruleKey == "color" 且 ruleValue == colori 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ruleKey == "name" 且 ruleValue == namei 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

统计并返回 匹配检索规则的物品数量 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>items = [["phone","blue","pixel"],["computer","silver","lenovo"],["phone","gold","iphone"]], ruleKey = "color", ruleValue = "silver"
  <strong>输出：</strong>1
  <strong>解释：</strong>只有一件物品匹配检索规则，这件物品是 ["computer","silver","lenovo"] 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>items = [["phone","blue","pixel"],["computer","silver","phone"],["phone","gold","iphone"]], ruleKey = "type", ruleValue = "phone"
  <strong>输出：</strong>2
  <strong>解释：</strong>只有两件物品匹配检索规则，这两件物品分别是 ["phone","blue","pixel"] 和 ["phone","gold","iphone"] 。注意，["computer","silver","phone"] 未匹配检索规则。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= items.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= typei.length, colori.length, namei.length, ruleValue.length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ruleKey 等于 "type"、"color" 或 "name"

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

所有字符串仅由小写字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
