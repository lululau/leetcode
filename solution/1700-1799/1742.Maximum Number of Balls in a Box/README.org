* [[https://leetcode-cn.com/problems/maximum-number-of-balls-in-a-box][1742.
盒子中小球的最大数量]]
  :PROPERTIES:
  :CUSTOM_ID: 盒子中小球的最大数量
  :END:
[[./solution/1700-1799/1742.Maximum Number of Balls in a Box/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你在一家生产小球的玩具厂工作，有 n 个小球，编号从 lowLimit 开始，到
highLimit 结束（包括 lowLimit 和 highLimit ，即 n == highLimit -
lowLimit + 1）。另有无限数量的盒子，编号从 1 到 infinity 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你的工作是将每个小球放入盒子中，其中盒子的编号应当等于小球编号上每位数字的和。例如，编号
321 的小球应当放入编号 3 + 2 + 1 = 6 的盒子，而编号 10
的小球应当放入编号 1 + 0 = 1 的盒子。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你两个整数 lowLimit 和 highLimit
，返回放有最多小球的盒子中的小球数量。如果有多个盒子都满足放有最多小球，只需返回其中任一盒子的小球数量。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>lowLimit = 1, highLimit = 10
  <strong>输出：</strong>2
  <strong>解释：</strong>
  盒子编号：1 2 3 4 5 6 7 8 9 10 11 ...
  小球数量：2 1 1 1 1 1 1 1 1 0  0  ...
  编号 1 的盒子放有最多小球，小球数量为 2 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>lowLimit = 5, highLimit = 15
  <strong>输出：</strong>2
  <strong>解释：</strong>
  盒子编号：1 2 3 4 5 6 7 8 9 10 11 ...
  小球数量：1 1 1 1 2 2 1 1 1 0  0  ...
  编号 5 和 6 的盒子放有最多小球，每个盒子中的小球数量都是 2 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>lowLimit = 19, highLimit = 28
  <strong>输出：</strong>2
  <strong>解释：</strong>
  盒子编号：1 2 3 4 5 6 7 8 9 10 11 12 ...
  小球数量：0 1 1 1 1 1 1 1 1 2  0  0  ...
  编号 10 的盒子放有最多小球，小球数量为 2 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= lowLimit <= highLimit <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
