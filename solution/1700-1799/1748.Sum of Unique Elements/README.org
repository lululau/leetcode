* [[https://leetcode-cn.com/problems/sum-of-unique-elements][1748.
唯一元素的和]]
  :PROPERTIES:
  :CUSTOM_ID: 唯一元素的和
  :END:
[[./solution/1700-1799/1748.Sum of Unique Elements/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 。数组中唯一元素是那些只出现 恰好一次 的元素。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回 nums 中唯一元素的 和 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>nums = [1,2,3,2]
  <b>输出：</b>4
  <b>解释：</b>唯一元素为 [1,3] ，和为 4 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>nums = [1,1,1,1,1]
  <b>输出：</b>0
  <b>解释：</b>没有唯一元素，和为 0 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3 ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>nums = [1,2,3,4,5]
  <b>输出：</b>15
  <b>解释：</b>唯一元素为 [1,2,3,4,5] ，和为 15 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

定义一个计数器 counter，存放数组每个元素出现的次数。

然后遍历 counter 中每个元素，累加次数为 1 的所有下标即可。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def sumOfUnique(self, nums: List[int]) -> int:
          counter = [0] * 101
          for num in nums:
              counter[num] += 1
          return sum([i for i in range(1, 101) if counter[i] == 1])
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int sumOfUnique(int[] nums) {
          int[] counter = new int[101];
          for (int num : nums) {
              ++counter[num];
          }
          int res = 0;
          for (int i = 1; i < 101; ++i) {
              if (counter[i] == 1) {
                  res += i;
              }
          }
          return res;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
