* [[https://leetcode-cn.com/problems/largest-merge-of-two-strings][1754.
构造字典序最大的合并字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 构造字典序最大的合并字符串
  :END:
[[./solution/1700-1799/1754.Largest Merge Of Two Strings/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个字符串 word1 和 word2 。你需要按下述方式构造一个新字符串 merge
：如果 word1 或 word2 非空，选择 下面选项之一 继续操作：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 word1 非空，将 word1 中的第一个字符附加到 merge 的末尾，并将其从
word1 中移除。

#+begin_example
  <ul>
      <li>例如，<code>word1 = "abc" </code>且 <code>merge = "dv"</code> ，在执行此选项操作之后，<code>word1 = "bc"</code> ，同时 <code>merge = "dva"</code> 。</li>
  </ul>
  </li>
  <li>如果 <code>word2</code> 非空，将 <code>word2</code> 中的第一个字符附加到 <code>merge</code> 的末尾，并将其从 <code>word2</code> 中移除。
  <ul>
      <li>例如，<code>word2 = "abc" </code>且 <code>merge = ""</code> ，在执行此选项操作之后，<code>word2 = "bc"</code> ，同时 <code>merge = "a"</code> 。</li>
  </ul>
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

返回你可以构造的字典序 最大 的合并字符串 merge 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

长度相同的两个字符串 a 和 b 比较字典序大小，如果在 a 和 b
出现不同的第一个位置，a 中字符在字母表中的出现顺序位于 b
中相应字符之后，就认为字符串 a 按字典序比字符串 b 更大。例如，"abcd"
按字典序比 "abcc"
更大，因为两个字符串出现不同的第一个位置是第四个字符，而 d
在字母表中的出现顺序位于 c 之后。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word1 = "cabaa", word2 = "bcaaa"
  <strong>输出：</strong>"cbcabaaaaa"
  <strong>解释：</strong>构造字典序最大的合并字符串，可行的一种方法如下所示：
  - 从 word1 中取第一个字符：merge = "c"，word1 = "abaa"，word2 = "bcaaa"
  - 从 word2 中取第一个字符：merge = "cb"，word1 = "abaa"，word2 = "caaa"
  - 从 word2 中取第一个字符：merge = "cbc"，word1 = "abaa"，word2 = "aaa"
  - 从 word1 中取第一个字符：merge = "cbca"，word1 = "baa"，word2 = "aaa"
  - 从 word1 中取第一个字符：merge = "cbcab"，word1 = "aa"，word2 = "aaa"
  - 将 word1 和 word2 中剩下的 5 个 a 附加到 merge 的末尾。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word1 = "abcabc", word2 = "abdcaba"
  <strong>输出：</strong>"abdcabcabcaba"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word1.length, word2.length <= 3000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word1 和 word2 仅由小写英文组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
