* [[https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box][1769.
Minimum Number of Operations to Move All Balls to Each Box]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-operations-to-move-all-balls-to-each-box
  :END:
[[./solution/1700-1799/1769.Minimum Number of Operations to Move All Balls to Each Box/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You have n boxes. You are given a binary string boxes of length n, where
boxes[i] is '0' if the ith box is empty, and '1' if it contains one
ball.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

In one operation, you can move one ball from a box to an adjacent box.
Box i is adjacent to box j if abs(i - j) == 1. Note that after doing so,
there may be more than one ball in some boxes.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array answer of size n, where answer[i] is the minimum number
of operations needed to move all the balls to the ith box.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Each answer[i] is calculated considering the initial state of the boxes.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> boxes = &quot;110&quot;
  <strong>Output:</strong> [1,1,3]
  <strong>Explanation:</strong> The answer for each box is as follows:
  1) First box: you will have to move one ball from the second box to the first box in one operation.
  2) Second box: you will have to move one ball from the first box to the second box in one operation.
  3) Third box: you will have to move one ball from the first box to the third box in two operations, and move one ball from the second box to the third box in one operation.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> boxes = &quot;001011&quot;
  <strong>Output:</strong> [11,8,5,4,3,4]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == boxes.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

boxes[i] is either '0' or '1'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
