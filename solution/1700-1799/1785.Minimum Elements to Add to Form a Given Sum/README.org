* [[https://leetcode-cn.com/problems/minimum-elements-to-add-to-form-a-given-sum][1785.
构成特定和需要添加的最少元素]]
  :PROPERTIES:
  :CUSTOM_ID: 构成特定和需要添加的最少元素
  :END:
[[./solution/1700-1799/1785.Minimum Elements to Add to Form a Given Sum/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums ，和两个整数 limit 与 goal 。数组 nums
有一条重要属性：abs(nums[i]) <= limit 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回使数组元素总和等于 goal 所需要向数组中添加的 最少元素数量 ，添加元素
不应改变 数组中 abs(nums[i]) <= limit 这一属性。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，如果 x >= 0 ，那么 abs(x) 等于 x ；否则，等于 -x 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,-1,1], limit = 3, goal = -4
  <strong>输出：</strong>2
  <strong>解释：</strong>可以将 -2 和 -3 添加到数组中，数组的元素总和变为 1 - 1 + 1 - 2 - 3 = -4 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,-10,9,1], limit = 100, goal = 0
  <strong>输出：</strong>1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= limit <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-limit <= nums[i] <= limit

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= goal <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
