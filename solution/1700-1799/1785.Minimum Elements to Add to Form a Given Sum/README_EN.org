* [[https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum][1785.
Minimum Elements to Add to Form a Given Sum]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-elements-to-add-to-form-a-given-sum
  :END:
[[./solution/1700-1799/1785.Minimum Elements to Add to Form a Given Sum/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an integer array nums and two integers limit and goal. The
array nums has an interesting property that abs(nums[i]) <= limit.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of elements you need to add to make the sum of
the array equal to goal. The array must maintain its property that
abs(nums[i]) <= limit.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that abs(x) equals x if x >= 0, and -x otherwise.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,-1,1], limit = 3, goal = -4
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> You can add -2 and -3, then the sum of the array will be 1 - 1 + 1 - 2 - 3 = -4.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,-10,9,1], limit = 100, goal = 0
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= limit <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-limit <= nums[i] <= limit

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= goal <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
