* [[https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array][1764.
Form Array by Concatenating Subarrays of Another Array]]
  :PROPERTIES:
  :CUSTOM_ID: form-array-by-concatenating-subarrays-of-another-array
  :END:
[[./solution/1700-1799/1764.Form Array by Concatenating Subarrays of Another Array/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a 2D integer array groups of length n. You are also given
an integer array nums.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are asked if you can choose n disjoint subarrays from the array nums
such that the ith subarray is equal to groups[i] (0-indexed), and if i >
0, the (i-1)th subarray appears before the ith subarray in nums
(i.e. the subarrays must be in the same order as groups).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if you can do this task, and false otherwise.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that the subarrays are disjoint if and only if there is no index k
such that nums[k] belongs to more than one subarray. A subarray is a
contiguous sequence of elements within an array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> groups = [[1,-1,-1],[3,-2,0]], nums = [1,-1,0,1,-1,-1,3,-2,0]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> You can choose the 0<sup>th</sup> subarray as [1,-1,0,<u><strong>1,-1,-1</strong></u>,3,-2,0] and the 1<sup>st</sup> one as [1,-1,0,1,-1,-1,<u><strong>3,-2,0</strong></u>].
  These subarrays are disjoint as they share no common nums[k] element.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> groups = [[10,-2],[1,2,3,4]], nums = [1,2,3,4,10,-2]
  <strong>Output:</strong> false
  <strong>Explanation: </strong>Note that choosing the subarrays [<u><strong>1,2,3,4</strong></u>,10,-2] and [1,2,3,4,<u><strong>10,-2</strong></u>] is incorrect because they are not in the same order as in groups.
  [10,-2] must come before [1,2,3,4].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> groups = [[1,2,3],[3,4]], nums = [7,7,1,2,3,4,7,7]
  <strong>Output:</strong> false
  <strong>Explanation: </strong>Note that choosing the subarrays [7,7,<u><strong>1,2,3</strong></u>,4,7,7] and [7,7,1,2,<u><strong>3,4</strong></u>,7,7] is invalid because they are not disjoint.
  They share a common elements nums[4] (0-indexed).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

groups.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= groups[i].length, sum(groups[i].length) <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-107 <= groups[i][j], nums[k] <= 107

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
