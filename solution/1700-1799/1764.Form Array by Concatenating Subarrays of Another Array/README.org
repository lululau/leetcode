* [[https://leetcode-cn.com/problems/form-array-by-concatenating-subarrays-of-another-array][1764.
通过连接另一个数组的子数组得到一个数组]]
  :PROPERTIES:
  :CUSTOM_ID: 通过连接另一个数组的子数组得到一个数组
  :END:
[[./solution/1700-1799/1764.Form Array by Concatenating Subarrays of Another Array/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个长度为 n 的二维整数数组 groups ，同时给你一个整数数组 nums 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你是否可以从 nums 中选出 n 个 不相交 的子数组，使得第 i 个子数组与
groups[i] （下标从 0 开始）完全相同，且如果 i >
0 ，那么第 (i-1) 个子数组在 nums 中出现的位置在第
i 个子数组前面。（也就是说，这些子数组在 nums 中出现的顺序需要与 groups
顺序相同）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果你可以找出这样的 n 个子数组，请你返回 true ，否则返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果不存在下标为 k 的元素 nums[k] 属于不止一个子数组，就称这些子数组是
不相交 的。子数组指的是原数组中连续元素组成的一个序列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>groups = [[1,-1,-1],[3,-2,0]], nums = [1,-1,0,1,-1,-1,3,-2,0]
  <b>输出：</b>true
  <b>解释：</b>你可以分别在 nums 中选出第 0 个子数组 [1,-1,0,<strong>1,</strong><strong>-1,</strong><strong>-1</strong>,3,-2,0] 和第 1 个子数组 [1,-1,0,1,-1,-1,<strong>3,</strong><strong>-2,0</strong>] 。
  这两个子数组是不相交的，因为它们没有任何共同的元素。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>groups = [[10,-2],[1,2,3,4]], nums = [1,2,3,4,10,-2]
  <b>输出：</b>false
  <strong>解释：</strong>选择子数组 [<strong>1,2,3,4</strong>,10,-2] 和 [1,2,3,4,<strong>10,-2</strong>] 是不正确的，因为它们出现的顺序与 groups 中顺序不同。
  [10,-2] 必须出现在 [1,2,3,4] 之前。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>groups = [[1,2,3],[3,4]], nums = [7,7,1,2,3,4,7,7]
  <b>输出：</b>false
  <strong>解释：</strong>选择子数组 [7,7,<strong>1,2,3</strong>,4,7,7] 和 [7,7,1,2,<strong>3,4</strong>,7,7] 是不正确的，因为它们不是不相交子数组。
  它们有一个共同的元素 nums[4] （下标从 0 开始）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

groups.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= groups[i].length, sum(groups[i].length) <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-107 <= groups[i][j], nums[k] <= 107

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
