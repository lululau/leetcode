* [[https://leetcode-cn.com/problems/number-of-ways-to-reconstruct-a-tree][1719.
重构一棵树的方案数]]
  :PROPERTIES:
  :CUSTOM_ID: 重构一棵树的方案数
  :END:
[[./solution/1700-1799/1719.Number Of Ways To Reconstruct A Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 pairs ，其中 pairs[i] = [xi, yi] ，并且满足：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

pairs 中没有重复元素

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

xi < yi

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

令 ways 为满足下面条件的有根树的方案数：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

树所包含的所有节点值都在 pairs 中。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

一个数对 [xi, yi]
出现在 pairs 中 当且仅当 xi 是 yi 的祖先或者 yi 是 xi 的祖先。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

注意：构造出来的树不一定是二叉树。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

两棵树被视为不同的方案当存在至少一个节点在两棵树中有不同的父节点。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 ways == 0 ，返回 0 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 ways == 1 ，返回 1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 ways > 1 ，返回 2 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

一棵 有根树 指的是只有一个根节点的树，所有边都是从根往外的方向。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们称从根到一个节点路径上的任意一个节点（除去节点本身）都是该节点的
祖先 。根节点没有祖先。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>pairs = [[1,2],[2,3]]
  <b>输出：</b>1
  <b>解释：</b>如上图所示，有且只有一个符合规定的有根树。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>pairs = [[1,2],[2,3],[1,3]]
  <b>输出：</b>2
  <b>解释：</b>有多个符合规定的有根树，其中三个如上图所示。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>pairs = [[1,2],[2,3],[2,4],[1,5]]
  <b>输出：</b>0
  <b>解释：</b>没有符合规定的有根树。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= pairs.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= xi < yi <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

pairs 中的元素互不相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
