* [[https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree][1719.
Number Of Ways To Reconstruct A Tree]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-ways-to-reconstruct-a-tree
  :END:
[[./solution/1700-1799/1719.Number Of Ways To Reconstruct A Tree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array pairs, where pairs[i] = [xi, yi], and:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

There are no duplicates.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

xi < yi

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Let ways be the number of rooted trees that satisfy the following
conditions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The tree consists of nodes whose values appeared in pairs.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

A pair [xi, yi] exists in pairs if and only if xi is an ancestor of yi
or yi is an ancestor of xi.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Note: the tree does not have to be a binary tree.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Two ways are considered to be different if there is at least one node
that has different parents in both ways.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 if ways == 0

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 if ways == 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 if ways > 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

A rooted tree is a tree that has a single root node, and all edges are
oriented to be outgoing from the root.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

An ancestor of a node is any node on the path from the root to that node
(excluding the node itself). The root has no ancestors.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> pairs = [[1,2],[2,3]]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> There is exactly one valid rooted tree, which is shown in the above figure.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> pairs = [[1,2],[2,3],[1,3]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> There are multiple valid rooted trees. Three of them are shown in the above figures.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> pairs = [[1,2],[2,3],[2,4],[1,5]]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> There are no valid rooted trees.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= pairs.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= xi < yi <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The elements in pairs are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
