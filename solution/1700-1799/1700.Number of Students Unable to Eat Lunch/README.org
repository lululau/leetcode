* [[https://leetcode-cn.com/problems/number-of-students-unable-to-eat-lunch][1700.
无法吃午餐的学生数量]]
  :PROPERTIES:
  :CUSTOM_ID: 无法吃午餐的学生数量
  :END:
[[./solution/1700-1799/1700.Number of Students Unable to Eat Lunch/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

学校的自助午餐提供圆形和方形的三明治，分别用数字 0 和 1 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。
餐厅里三明治的数量与学生的数量相同。所有三明治都放在一个 栈 里，每一轮：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果队列最前面的学生 喜欢 栈顶的三明治，那么会 拿走它 并离开队列。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

否则，这名学生会 放弃这个三明治 并回到队列的尾部。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

这个过程会一直持续到队列里所有学生都不喜欢栈顶的三明治为止。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你两个整数数组 students
和 sandwiches ，其中 sandwiches[i] 是栈里面第 i​​​​​​ 个三明治的类型（i
=
0 是栈的顶部）， students[j] 是初始队列里第 j​​​​​​ 名学生对三明治的喜好（j
= 0 是队列的最开始位置）。请你返回无法吃午餐的学生数量。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>students = [1,1,0,0], sandwiches = [0,1,0,1]
  <b>输出：</b>0<strong> 
  解释：</strong>
  - 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [1,0,0,1]。
  - 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [0,0,1,1]。
  - 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [0,1,1]，三明治栈为 sandwiches = [1,0,1]。
  - 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [1,1,0]。
  - 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [1,0]，三明治栈为 sandwiches = [0,1]。
  - 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [0,1]。
  - 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [1]，三明治栈为 sandwiches = [1]。
  - 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = []，三明治栈为 sandwiches = []。
  所以所有学生都有三明治吃。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>students = [1,1,1,0,0,1], sandwiches = [1,0,0,0,1,1]
  <b>输出：</b>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= students.length, sandwiches.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

students.length == sandwiches.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sandwiches[i] 要么是 0 ，要么是 1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

students[i] 要么是 0 ，要么是 1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

学生位置可调整，而三明治位置不可调整。也就是说，若前面的三明治没被拿走，则往后的所有三明治也无法被拿走。

因此，先用计数器 counter
统计学生喜欢的三明治种类和对应的数量，然后遍历三明治，若在 counter
中找不到喜欢此三明治的学生，说明已经找到答案，当前以及往后的三明治均无法被拿走，数量为
=n - i=。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def countStudents(self, students: List[int], sandwiches: List[int]) -> int:
          counter = collections.Counter(students)
          for i, sandwich in enumerate(sandwiches):
              if counter[sandwich] == 0:
                  return len(students) - i
              counter[sandwich] -= 1
          return 0
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int countStudents(int[] students, int[] sandwiches) {
          int[] counter = new int[2];
          for (int i : students) {
              counter[i] += 1;
          }
          for (int i = 0; i < sandwiches.length; ++i) {
              if (counter[sandwiches[i]] == 0) {
                  return sandwiches.length - i;
              }
              counter[sandwiches[i]] -= 1;
          }
          return 0;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
