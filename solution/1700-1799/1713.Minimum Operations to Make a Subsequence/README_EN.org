* [[https://leetcode.com/problems/minimum-operations-to-make-a-subsequence][1713.
Minimum Operations to Make a Subsequence]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-operations-to-make-a-subsequence
  :END:
[[./solution/1700-1799/1713.Minimum Operations to Make a Subsequence/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array target that consists of distinct integers and
another integer array arr that can have duplicates.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

In one operation, you can insert any integer at any position in arr. For
example, if arr = [1,4,1,2], you can add 3 in the middle and make it
[1,4,3,1,2]. Note that you can insert the integer at the very beginning
or end of the array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of operations needed to make target a
subsequence of arr.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A subsequence of an array is a new array generated from the original
array by deleting some elements (possibly none) without changing the
remaining elements' relative order. For example, [2,7,4] is a
subsequence of [4,2,3,7,2,1,4] (the underlined elements), while [2,4,2]
is not.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> target = [5,1,3], <code>arr</code> = [9,4,2,3,4]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> You can add 5 and 1 in such a way that makes <code>arr</code> = [<u>5</u>,9,4,<u>1</u>,2,3,4], then target will be a subsequence of <code>arr</code>.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> target = [6,4,8,1,3,2], <code>arr</code> = [4,7,6,2,3,8,6,1]
  <strong>Output:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target.length, arr.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target[i], arr[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

target contains no duplicates.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
