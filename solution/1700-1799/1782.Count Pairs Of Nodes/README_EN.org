* [[https://leetcode.com/problems/count-pairs-of-nodes][1782. Count
Pairs Of Nodes]]
  :PROPERTIES:
  :CUSTOM_ID: count-pairs-of-nodes
  :END:
[[./solution/1700-1799/1782.Count Pairs Of Nodes/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an undirected graph represented by an integer n, which is
the number of nodes, and edges, where edges[i] = [ui, vi] which
indicates that there is an undirected edge between ui and vi. You are
also given an integer array queries.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The answer to the jth query is the number of pairs of nodes (a, b) that
satisfy the following conditions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

a < b

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cnt is strictly greater than queries[j], where cnt is the number of
edges incident to a or b.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array answers such that answers.length == queries.length and
answers[j] is the answer of the jth query.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that there can be repeated edges.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, edges = [[1,2],[2,4],[1,3],[2,3],[2,1]], queries = [2,3]
  <strong>Output:</strong> [6,5]
  <strong>Explanation:</strong> The number of edges incident to at least one of each pair is shown above.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, edges = [[1,5],[1,5],[3,4],[2,5],[1,3],[5,1],[2,3],[2,5]], queries = [1,2,3,4,5]
  <strong>Output:</strong> [10,10,9,8,6]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= edges.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ui, vi <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ui != vi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= queries.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= queries[j] < edges.length

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
