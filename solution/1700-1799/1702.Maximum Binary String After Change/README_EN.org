* [[https://leetcode.com/problems/maximum-binary-string-after-change][1702.
Maximum Binary String After Change]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-binary-string-after-change
  :END:
[[./solution/1700-1799/1702.Maximum Binary String After Change/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a binary string binary consisting of only 0's or 1's. You
can apply each of the following operations any number of times:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Operation 1: If the number contains the substring "00", you can replace
it with "10".

#+begin_example
  <ul>
      <li>For example, <code>&quot;<u>00</u>010&quot; -&gt; &quot;<u>10</u>010</code>&quot;</li>
  </ul>
  </li>
  <li>Operation 2: If the number contains the substring <code>&quot;10&quot;</code>, you can replace it with <code>&quot;01&quot;</code>.
  <ul>
      <li>For example, <code>&quot;000<u>10</u>&quot; -&gt; &quot;000<u>01</u>&quot;</code></li>
  </ul>
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum binary string you can obtain after any number of
operations. Binary string x is greater than binary string y if x's
decimal representation is greater than y's decimal representation.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> binary = &quot;000110&quot;
  <strong>Output:</strong> &quot;111011&quot;
  <strong>Explanation:</strong> A valid transformation sequence can be:
  &quot;0001<u>10</u>&quot; -&gt; &quot;0001<u>01</u>&quot; 
  &quot;<u>00</u>0101&quot; -&gt; &quot;<u>10</u>0101&quot; 
  &quot;1<u>00</u>101&quot; -&gt; &quot;1<u>10</u>101&quot; 
  &quot;110<u>10</u>1&quot; -&gt; &quot;110<u>01</u>1&quot; 
  &quot;11<u>00</u>11&quot; -&gt; &quot;11<u>10</u>11&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> binary = &quot;01&quot;
  <strong>Output:</strong> &quot;01&quot;
  <strong>Explanation:</strong>&nbsp;&quot;01&quot; cannot be transformed any further.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= binary.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

binary consist of '0' and '1'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
