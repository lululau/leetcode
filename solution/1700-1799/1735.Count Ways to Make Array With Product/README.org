* [[https://leetcode-cn.com/problems/count-ways-to-make-array-with-product][1735.
生成乘积数组的方案数]]
  :PROPERTIES:
  :CUSTOM_ID: 生成乘积数组的方案数
  :END:
[[./solution/1700-1799/1735.Count Ways to Make Array With Product/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个二维整数数组 queries ，其中 queries[i] = [ni, ki]
。第 i 个查询 queries[i] 要求构造长度为 ni
、每个元素都是正整数的数组，且满足所有元素的乘积为 ki ，请你找出有多少种可行的方案。由于答案可能会很大，方案数需要对
109 + 7 取余 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回一个整数数组 answer，满足 answer.length ==
queries.length ，其中 answer[i]是第 i 个查询的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>queries = [[2,6],[5,1],[73,660]]
  <b>输出：</b>[4,1,50734910]
  <b>解释：</b>每个查询之间彼此独立。
  [2,6]：总共有 4 种方案得到长度为 2 且乘积为 6 的数组：[1,6]，[2,3]，[3,2]，[6,1]。
  [5,1]：总共有 1 种方案得到长度为 5 且乘积为 1 的数组：[1,1,1,1,1]。
  [73,660]：总共有 1050734917 种方案得到长度为 73 且乘积为 660 的数组。1050734917 对 10<sup>9</sup> + 7 取余得到 50734910 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2 ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>queries = [[1,1],[2,2],[3,3],[4,4],[5,5]]
  <b>输出：</b>[1,2,3,10,5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= queries.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ni, ki <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
