* [[https://leetcode.com/problems/minimum-number-of-people-to-teach][1733.
Minimum Number of People to Teach]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-people-to-teach
  :END:
[[./solution/1700-1799/1733.Minimum Number of People to Teach/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

On a social network consisting of m users and some friendships between
users, two users can communicate with each other if they know a common
language.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given an integer n, an array languages, and an array friendships
where:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

There are n languages numbered 1 through n,

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

languages[i] is the set of languages the i​​​​​​th​​​​ user knows, and

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

friendships[i] = [u​​​​​​i​​​, v​​​​​​i] denotes a friendship between
the users u​​​​​​​​​​​i​​​​​ and vi.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

You can choose one language and teach it to some users so that all
friends can communicate with each other. Return the minimum number of
users you need to teach.

#+begin_html
  </p>
#+end_html

Note that friendships are not transitive, meaning if x is a friend of y
and y is a friend of z, this doesn't guarantee that x is a friend of z.

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 2, languages = [[1],[2],[1,2]], friendships = [[1,2],[1,3],[2,3]]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> You can either teach user 1 the second language or user 2 the first language.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 3, languages = [[2],[1,3],[1,2],[3]], friendships = [[1,4],[1,2],[3,4],[2,3]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> Teach the third language to users 1 and 3, yielding two users to teach.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

languages.length == m

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= languages[i].length <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= languages[i][j] <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= u​​​​​​i < v​​​​​​i <= languages.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= friendships.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All tuples (u​​​​​i, v​​​​​​i) are unique

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

languages[i] contains only unique values

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
