* [[https://leetcode-cn.com/problems/minimum-number-of-people-to-teach][1733.
需要教语言的最少人数]]
  :PROPERTIES:
  :CUSTOM_ID: 需要教语言的最少人数
  :END:
[[./solution/1700-1799/1733.Minimum Number of People to Teach/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在一个由 m 个用户组成的社交网络里，我们获取到一些用户之间的好友关系。两个用户之间可以相互沟通的条件是他们都掌握同一门语言。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数 n ，数组 languages 和数组 friendships ，它们的含义如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

总共有 n 种语言，编号从 1 到 n 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

languages[i] 是第 i 位用户掌握的语言集合。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

friendships[i] = [u​​​​​​i​​​, v​​​​​​i] 表示 u​​​​​​​​​​​i​​​​​
和 vi 为好友关系。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

你可以选择
一门 语言并教会一些用户，使得所有好友之间都可以相互沟通。请返回你
最少 需要教会多少名用户。

#+begin_html
  </p>
#+end_html

请注意，好友关系没有传递性，也就是说如果 x
和 y 是好友，且 y 和 z 是好友， x 和 z 不一定是好友。

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>n = 2, languages = [[1],[2],[1,2]], friendships = [[1,2],[1,3],[2,3]]
  <b>输出：</b>1
  <b>解释：</b>你可以选择教用户 1 第二门语言，也可以选择教用户 2 第一门语言。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>n = 3, languages = [[2],[1,3],[1,2],[3]], friendships = [[1,4],[1,2],[3,4],[2,3]]
  <b>输出：</b>2
  <b>解释：</b>教用户 1 和用户 3 第三门语言，需要教 2 名用户。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

languages.length == m

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= languages[i].length <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= languages[i][j] <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= u​​​​​​i < v​​​​​​i <= languages.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= friendships.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

所有的好友关系 (u​​​​​i, v​​​​​​i) 都是唯一的。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

languages[i] 中包含的值互不相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
