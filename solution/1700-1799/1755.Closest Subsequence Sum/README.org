* [[https://leetcode-cn.com/problems/closest-subsequence-sum][1755.
最接近目标值的子序列和]]
  :PROPERTIES:
  :CUSTOM_ID: 最接近目标值的子序列和
  :END:
[[./solution/1700-1799/1755.Closest Subsequence Sum/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 和一个目标值 goal 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你需要从 nums 中选出一个子序列，使子序列元素总和最接近 goal
。也就是说，如果子序列元素和为 sum ，你需要 最小化绝对差 abs(sum - goal)
。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回 abs(sum - goal) 可能的 最小值 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，数组的子序列是通过移除原始数组中的某些元素（可能全部或无）而形成的数组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [5,-7,3,5], goal = 6
  <strong>输出：</strong>0
  <strong>解释：</strong>选择整个数组作为选出的子序列，元素和为 6 。
  子序列和与目标值相等，所以绝对差为 0 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [7,-9,15,-2], goal = -5
  <strong>输出：</strong>1
  <strong>解释：</strong>选出子序列 [7,-9,-2] ，元素和为 -4 。
  绝对差为 abs(-4 - (-5)) = abs(1) = 1 ，是可能的最小值。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [1,2,3], goal = -7
  <strong>输出：</strong>7
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 40

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-107 <= nums[i] <= 107

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= goal <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
