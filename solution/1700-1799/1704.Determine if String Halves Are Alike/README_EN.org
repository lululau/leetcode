* [[https://leetcode.com/problems/determine-if-string-halves-are-alike][1704.
Determine if String Halves Are Alike]]
  :PROPERTIES:
  :CUSTOM_ID: determine-if-string-halves-are-alike
  :END:
[[./solution/1700-1799/1704.Determine if String Halves Are Alike/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a string s of even length. Split this string into two
halves of equal lengths, and let a be the first half and b be the second
half.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two strings are alike if they have the same number of vowels ('a', 'e',
'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains
uppercase and lowercase letters.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if a and b are alike. Otherwise, return false.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;book&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong>&nbsp;a = &quot;b<u>o</u>&quot; and b = &quot;<u>o</u>k&quot;. a has 1 vowel and b has 1 vowel. Therefore, they are alike.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;textbook&quot;
  <strong>Output:</strong> false
  <strong>Explanation:</strong>&nbsp;a = &quot;t<u>e</u>xt&quot; and b = &quot;b<u>oo</u>k&quot;. a has 1 vowel whereas b has 2. Therefore, they are not alike.
  Notice that the vowel o is counted twice.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;MerryChristmas&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;AbCdEfGh&quot;
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= s.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s.length is even.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of uppercase and lowercase letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def halvesAreAlike(self, s: str) -> bool:
          half = len(s) >> 1
          vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
          s1 = sum(1 for c in s[:half] if c in vowels)
          s2 = sum(1 for c in s[half:] if c in vowels)
          return s1 == s2
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean halvesAreAlike(String s) {
          int half = s.length() >> 1;
          Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'));
          int s1 = 0, s2 = 0;
          for (int i = 0; i < half; ++i) {
              if (vowels.contains(s.charAt(i))) {
                  ++s1;
              }
              if (vowels.contains(s.charAt(half + i))) {
                  ++s2;
              }
          }
          return s1 == s2;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
