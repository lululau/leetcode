* [[https://leetcode-cn.com/problems/cat-and-mouse-ii][1728. 猫和老鼠
II]]
  :PROPERTIES:
  :CUSTOM_ID: 猫和老鼠-ii
  :END:
[[./solution/1700-1799/1728.Cat and Mouse II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

一只猫和一只老鼠在玩一个叫做猫和老鼠的游戏。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

它们所处的环境设定是一个 rows x cols 的方格
grid ，其中每个格子可能是一堵墙、一块地板、一位玩家（猫或者老鼠）或者食物。

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

玩家由字符 'C' （代表猫）和 'M' （代表老鼠）表示。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

地板由字符 '.' 表示，玩家可以通过这个格子。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

墙用字符 '#' 表示，玩家不能通过这个格子。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

食物用字符 'F' 表示，玩家可以通过这个格子。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

字符 'C' ， 'M' 和 'F' 在 grid 中都只会出现一次。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

猫和老鼠按照如下规则移动：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

老鼠 先移动 ，然后两名玩家轮流移动。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每一次操作时，猫和老鼠可以跳到上下左右四个方向之一的格子，他们不能跳过墙也不能跳出 grid 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

catJump
和 mouseJump 是猫和老鼠分别跳一次能到达的最远距离，它们也可以跳小于最大距离的长度。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

它们可以停留在原地。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

老鼠可以跳跃过猫的位置。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

游戏有 4 种方式会结束：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果猫跟老鼠处在相同的位置，那么猫获胜。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果猫先到达食物，那么猫获胜。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果老鼠先到达食物，那么老鼠获胜。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果老鼠不能在 1000 次操作以内到达食物，那么猫获胜。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

给你 rows x
cols 的矩阵 grid 和两个整数 catJump 和 mouseJump ，双方都采取最优策略，如果老鼠获胜，那么请你返回 true ，否则返回
false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>grid = ["####F","#C...","M...."], catJump = 1, mouseJump = 2
  <b>输出：</b>true
  <b>解释：</b>猫无法抓到老鼠，也没法比老鼠先到达食物。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>grid = ["M.C...F"], catJump = 1, mouseJump = 4
  <b>输出：</b>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>grid = ["M.C...F"], catJump = 1, mouseJump = 3
  <b>输出：</b>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>grid = ["C...#","...#F","....#","M...."], catJump = 2, mouseJump = 5
  <b>输出：</b>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>grid = [".M...","..#..","#..#.","C#.#.","...#F"], catJump = 3, mouseJump = 1
  <b>输出：</b>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

rows == grid.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cols = grid[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rows, cols <= 8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i][j] 只包含字符 'C' ，'M' ，'F' ，'.' 和 '#' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid 中只包含一个 'C' ，'M' 和 'F' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= catJump, mouseJump <= 8

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
