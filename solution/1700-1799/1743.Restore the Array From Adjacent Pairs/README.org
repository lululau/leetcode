* [[https://leetcode-cn.com/problems/restore-the-array-from-adjacent-pairs][1743.
从相邻元素对还原数组]]
  :PROPERTIES:
  :CUSTOM_ID: 从相邻元素对还原数组
  :END:
[[./solution/1700-1799/1743.Restore the Array From Adjacent Pairs/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

存在一个由 n 个不同元素组成的整数数组 nums
，但你已经记不清具体内容。好在你还记得 nums 中的每一对相邻元素。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个二维整数数组 adjacentPairs ，大小为 n - 1 ，其中每个
adjacentPairs[i] = [ui, vi] 表示元素 ui 和 vi 在 nums 中相邻。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

题目数据保证所有由元素 nums[i] 和 nums[i+1] 组成的相邻元素对都存在于
adjacentPairs 中，存在形式可能是 [nums[i], nums[i+1]] ，也可能是
[nums[i+1], nums[i]] 。这些相邻元素对可以 按任意顺序 出现。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回 原始数组 nums 。如果存在多种解答，返回 其中任意一个 即可。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>adjacentPairs = [[2,1],[3,4],[3,2]]
  <strong>输出：</strong>[1,2,3,4]
  <strong>解释：</strong>数组的所有相邻元素对都在 adjacentPairs 中。
  特别要注意的是，adjacentPairs[i] 只表示两个元素相邻，并不保证其 左-右 顺序。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>adjacentPairs = [[4,-2],[1,4],[-3,1]]
  <strong>输出：</strong>[-2,4,1,-3]
  <strong>解释：</strong>数组中可能存在负数。
  另一种解答是 [-3,1,4,-2] ，也会被视作正确答案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>adjacentPairs = [[100000,-100000]]
  <strong>输出：</strong>[100000,-100000]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

adjacentPairs.length == n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

adjacentPairs[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-105 <= nums[i], ui, vi <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

题目数据保证存在一些以 adjacentPairs 作为元素对的数组 nums

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
