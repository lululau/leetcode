* [[https://leetcode.com/problems/number-of-rectangles-that-can-form-the-largest-square][1725.
Number Of Rectangles That Can Form The Largest Square]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-rectangles-that-can-form-the-largest-square
  :END:
[[./solution/1700-1799/1725.Number Of Rectangles That Can Form The Largest Square/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array rectangles where rectangles[i] = [li, wi]
represents the ith rectangle of length li and width wi.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can cut the ith rectangle to form a square with a side length of k
if both k <= li and k <= wi. For example, if you have a rectangle [4,6],
you can cut it to get a square with a side length of at most 4.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Let maxLen be the side length of the largest square you can obtain from
any of the given rectangles.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of rectangles that can make a square with a side
length of maxLen.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> rectangles = [[5,8],[3,9],[5,12],[16,5]]

  <strong>Output:</strong> 3

  <strong>Explanation:</strong> The largest squares you can get from each rectangle are of lengths [5,3,5,5].

  The largest possible square is of length 5, and you can get it out of 3 rectangles.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> rectangles = [[2,3],[3,7],[4,3],[3,7]]

  <strong>Output:</strong> 3

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rectangles.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

rectangles[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= li, wi <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

li != wi

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
