* [[https://leetcode.com/problems/maximum-number-of-consecutive-values-you-can-make][1798.
Maximum Number of Consecutive Values You Can Make]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-number-of-consecutive-values-you-can-make
  :END:
[[./solution/1700-1799/1798.Maximum Number of Consecutive Values You Can Make/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an integer array coins of length n which represents the n
coins that you own. The value of the ith coin is coins[i]. You can make
some value x if you can choose some of your n coins such that their
values sum up to x.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum number of consecutive integer values that you can
make with your coins starting from and including 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that you may have multiple coins of the same value.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> coins = [1,3]
  <strong>Output:</strong> 2
  <strong>Explanation: </strong>You can make the following values:
  - 0: take []
  - 1: take [1]
  You can make 2 consecutive integer values starting from 0.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> coins = [1,1,1,4]
  <strong>Output:</strong> 8
  <strong>Explanation: </strong>You can make the following values:
  - 0: take []
  - 1: take [1]
  - 2: take [1,1]
  - 3: take [1,1,1]
  - 4: take [4]
  - 5: take [4,1]
  - 6: take [4,1,1]
  - 7: take [4,1,1,1]
  You can make 8 consecutive integer values starting from 0.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,4,10,3,1]
  <strong>Output:</strong> 20</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

coins.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 4 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= coins[i] <= 4 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def getMaximumConsecutive(self, coins: List[int]) -> int:
          res = 1
          for coin in sorted(coins):
              if coin > res:
                  break
              res += coin
          return res
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int getMaximumConsecutive(int[] coins) {
          int res = 1;
          Arrays.sort(coins);
          for (int coin : coins) {
              if (coin > res) {
                  break;
              }
              res += coin;
          }
          return res;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
