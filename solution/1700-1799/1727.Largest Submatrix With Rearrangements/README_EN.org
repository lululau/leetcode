* [[https://leetcode.com/problems/largest-submatrix-with-rearrangements][1727.
Largest Submatrix With Rearrangements]]
  :PROPERTIES:
  :CUSTOM_ID: largest-submatrix-with-rearrangements
  :END:
[[./solution/1700-1799/1727.Largest Submatrix With Rearrangements/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a binary matrix matrix of size m x n, and you are allowed
to rearrange the columns of the matrix in any order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the area of the largest submatrix within matrix where every
element of the submatrix is 1 after reordering the columns optimally.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[0,0,1],[1,1,1],[1,0,1]]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> You can rearrange the columns as shown above.
  The largest submatrix of 1s, in bold, has an area of 4.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[1,0,1,0,1]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> You can rearrange the columns as shown above.
  The largest submatrix of 1s, in bold, has an area of 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[1,1,0],[1,0,1]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> Notice that you must rearrange entire columns, and there is no way to make a submatrix of 1s larger than an area of 2.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> matrix = [[0,0],[0,0]]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> As there are no 1s, no submatrix of 1s can be formed and the area is 0.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == matrix.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == matrix[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m * n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

matrix[i][j] is 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
