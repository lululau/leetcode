* [[https://leetcode.com/problems/largest-subarray-length-k][1708.
Largest Subarray Length K]]
  :PROPERTIES:
  :CUSTOM_ID: largest-subarray-length-k
  :END:
[[./solution/1700-1799/1708.Largest Subarray Length K/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

An array A is larger than some array B if for the first index i where
A[i] != B[i], A[i] > B[i].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, consider 0-indexing:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

[1,3,2,4] > [1,2,2,4], since at index 1, 3 > 2.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

[1,4,4,4] < [2,1,1,1], since at index 0, 1 < 2.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

A subarray is a contiguous subsequence of the array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an integer array nums of distinct integers, return the largest
subarray of nums of length k.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,4,5,2,3], k = 3
  <strong>Output:</strong> [5,2,3]
  <strong>Explanation:</strong> The subarrays of size 3 are: [1,4,5], [4,5,2], and [5,2,3].
  Of these, [5,2,3] is the largest.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,4,5,2,3], k = 4
  <strong>Output:</strong> [4,5,2,3]
  <strong>Explanation:</strong> The subarrays of size 4 are: [1,4,5,2], and [4,5,2,3].
  Of these, [4,5,2,3] is the largest.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,4,5,2,3], k = 1
  <strong>Output:</strong> [5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= nums.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the integers of nums are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

Follow up: What if the integers in nums are not distinct?

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
