* [[https://leetcode-cn.com/problems/largest-subarray-length-k][1708.
长度为 K 的最大子数组]]
  :PROPERTIES:
  :CUSTOM_ID: 长度为-k-的最大子数组
  :END:
[[./solution/1700-1799/1708.Largest Subarray Length K/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在数组 A 和数组 B 中，对于第一个满足 A[i] != B[i] 的索引 i ，当 A[i] >
B[i] 时，数组 A 大于数组 B。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

例如，对于索引从 0 开始的数组：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

[1,3,2,4] > [1,2,2,4] ，因为在索引 1 上， 3 > 2。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

[1,4,4,4] < [2,1,1,1] ，因为在索引 0 上， 1 < 2。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

一个数组的子数组是原数组上的一个连续子序列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一个包含不同整数的整数类型数组 nums ，返回 nums 中长度为 k
的最大子数组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> nums = [1,4,5,2,3], k = 3
  <strong>输出:</strong> [5,2,3]
  <strong>解释:</strong> 长度为 3 的子数组有： [1,4,5]、 [4,5,2] 和 [5,2,3]。
  在这些数组中， [5,2,3] 是最大的。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> nums = [1,4,5,2,3], k = 4
  <strong>输出:</strong> [4,5,2,3]
  <strong>解释:</strong> 长度为 4 的子数组有： [1,4,5,2] 和 [4,5,2,3]。
  在这些数组中， [4,5,2,3] 是最大的。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> nums = [1,4,5,2,3], k = 1
  <strong>输出:</strong> [5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= nums.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums 中的所有整数都是不同的。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

进阶：如果允许 nums 中存在相同元素，你该如何解决该问题？

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
