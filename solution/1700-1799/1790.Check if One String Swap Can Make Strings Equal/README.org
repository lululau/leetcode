* [[https://leetcode-cn.com/problems/check-if-one-string-swap-can-make-strings-equal][1790.
仅执行一次字符串交换能否使两个字符串相等]]
  :PROPERTIES:
  :CUSTOM_ID: 仅执行一次字符串交换能否使两个字符串相等
  :END:
[[./solution/1700-1799/1790.Check if One String Swap Can Make Strings Equal/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你长度相等的两个字符串 s1 和 s2 。一次 字符串交换
操作的步骤如下：选出某个字符串中的两个下标（不必不同），并交换这两个下标所对应的字符。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果对 其中一个字符串 执行 最多一次字符串交换
就可以使两个字符串相等，返回 true ；否则，返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s1 = "bank", s2 = "kanb"
  <strong>输出：</strong>true
  <strong>解释：</strong>例如，交换 s2 中的第一个和最后一个字符可以得到 "bank"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s1 = "attack", s2 = "defend"
  <strong>输出：</strong>false
  <strong>解释：</strong>一次字符串交换无法使两个字符串相等
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s1 = "kelb", s2 = "kelb"
  <strong>输出：</strong>true
  <strong>解释：</strong>两个字符串已经相等，所以不需要进行字符串交换
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s1 = "abcd", s2 = "dcba"
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s1.length, s2.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s1.length == s2.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s1 和 s2 仅由小写英文字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
