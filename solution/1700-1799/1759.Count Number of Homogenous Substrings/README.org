* [[https://leetcode-cn.com/problems/count-number-of-homogenous-substrings][1759.
统计同构子字符串的数目]]
  :PROPERTIES:
  :CUSTOM_ID: 统计同构子字符串的数目
  :END:
[[./solution/1700-1799/1759.Count Number of Homogenous Substrings/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串 s ，返回 s 中 同构子字符串
的数目。由于答案可能很大，只需返回对 109 + 7 取余 后的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

同构字符串
的定义为：如果一个字符串中的所有字符都相同，那么该字符串就是同构字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

子字符串 是字符串中的一个连续字符序列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = "abbcccaa"
  <strong>输出：</strong>13
  <strong>解释：</strong>同构子字符串如下所列：
  "a"   出现 3 次。
  "aa"  出现 1 次。
  "b"   出现 2 次。
  "bb"  出现 1 次。
  "c"   出现 3 次。
  "cc"  出现 2 次。
  "ccc" 出现 1 次。
  3 + 1 + 2 + 1 + 3 + 2 + 1 = 13</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = "xy"
  <strong>输出：</strong>2
  <strong>解释：</strong>同构子字符串是 "x" 和 "y" 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = "zzzzz"
  <strong>输出：</strong>15
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 由小写字符串组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
