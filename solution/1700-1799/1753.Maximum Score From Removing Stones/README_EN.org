* [[https://leetcode.com/problems/maximum-score-from-removing-stones][1753.
Maximum Score From Removing Stones]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-score-from-removing-stones
  :END:
[[./solution/1700-1799/1753.Maximum Score From Removing Stones/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are playing a solitaire game with three piles of stones of sizes
a​​​​​​, b,​​​​​​ and c​​​​​​ respectively. Each turn you choose two
different non-empty piles, take one stone from each, and add 1 point to
your score. The game stops when there are fewer than two non-empty piles
(meaning there are no more available moves).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given three integers a​​​​​, b,​​​​​ and c​​​​​, return the maximum
score you can get.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = 2, b = 4, c = 6
  <strong>Output:</strong> 6
  <strong>Explanation:</strong> The starting state is (2, 4, 6). One optimal set of moves is:
  - Take from 1st and 3rd piles, state is now (1, 4, 5)
  - Take from 1st and 3rd piles, state is now (0, 4, 4)
  - Take from 2nd and 3rd piles, state is now (0, 3, 3)
  - Take from 2nd and 3rd piles, state is now (0, 2, 2)
  - Take from 2nd and 3rd piles, state is now (0, 1, 1)
  - Take from 2nd and 3rd piles, state is now (0, 0, 0)
  There are fewer than two non-empty piles, so the game ends. Total: 6 points.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = 4, b = 4, c = 6
  <strong>Output:</strong> 7
  <strong>Explanation:</strong> The starting state is (4, 4, 6). One optimal set of moves is:
  - Take from 1st and 2nd piles, state is now (3, 3, 6)
  - Take from 1st and 3rd piles, state is now (2, 3, 5)
  - Take from 1st and 3rd piles, state is now (1, 3, 4)
  - Take from 1st and 3rd piles, state is now (0, 3, 3)
  - Take from 2nd and 3rd piles, state is now (0, 2, 2)
  - Take from 2nd and 3rd piles, state is now (0, 1, 1)
  - Take from 2nd and 3rd piles, state is now (0, 0, 0)
  There are fewer than two non-empty piles, so the game ends. Total: 7 points.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> a = 1, b = 8, c = 8
  <strong>Output:</strong> 8
  <strong>Explanation:</strong> One optimal set of moves is to take from the 2nd and 3rd piles for 8 turns until they are empty.
  After that, there are fewer than two non-empty piles, so the game ends.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= a, b, c <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
