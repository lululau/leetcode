* [[https://leetcode.com/problems/where-will-the-ball-fall][1706. Where
Will the Ball Fall]]
  :PROPERTIES:
  :CUSTOM_ID: where-will-the-ball-fall
  :END:
[[./solution/1700-1799/1706.Where Will the Ball Fall/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You have a 2-D grid of size m x n representing a box, and you have n
balls. The box is open on the top and bottom sides.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Each cell in the box has a diagonal board spanning two corners of the
cell that can redirect a ball to the right or to the left.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

A board that redirects the ball to the right spans the top-left corner
to the bottom-right corner and is represented in the grid as 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

A board that redirects the ball to the left spans the top-right corner
to the bottom-left corner and is represented in the grid as -1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

We drop one ball at the top of each column of the box. Each ball can get
stuck in the box or fall out of the bottom. A ball gets stuck if it hits
a "V" shaped pattern between two boards or if a board redirects the ball
into either wall of the box.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array answer of size n where answer[i] is the column that the
ball falls out of at the bottom after dropping the ball from the ith
column at the top, or -1 if the ball gets stuck in the box.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,1,-1,-1],[1,1,1,-1,-1],[-1,-1,-1,1,1],[1,1,1,1,-1],[-1,-1,-1,-1,-1]]
  <strong>Output:</strong> [1,-1,-1,-1,-1]
  <strong>Explanation:</strong> This example is shown in the photo.
  Ball b0 is dropped at column 0 and falls out of the box at column 1.
  Ball b1 is dropped at column 1 and will get stuck in the box between column 2 and 3 and row 1.
  Ball b2 is dropped at column 2 and will get stuck on the box between column 2 and 3 and row 0.
  Ball b3 is dropped at column 3 and will get stuck on the box between column 2 and 3 and row 0.
  Ball b4 is dropped at column 4 and will get stuck on the box between column 2 and 3 and row 1.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[-1]]
  <strong>Output:</strong> [-1]
  <strong>Explanation:</strong> The ball gets stuck against the left wall.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1]]
  <strong>Output:</strong> [0,1,2,3,4,-1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == grid.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == grid[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i][j] is 1 or -1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
