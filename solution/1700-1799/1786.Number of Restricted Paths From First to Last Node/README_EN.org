* [[https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node][1786.
Number of Restricted Paths From First to Last Node]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-restricted-paths-from-first-to-last-node
  :END:
[[./solution/1700-1799/1786.Number of Restricted Paths From First to Last Node/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is an undirected weighted connected graph. You are given a
positive integer n which denotes that the graph has n nodes labeled from
1 to n, and an array edges where each edges[i] = [ui, vi, weighti]
denotes that there is an edge between nodes ui and vi with weight equal
to weighti.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A path from node start to node end is a sequence of nodes [z0, z1, z2,
..., zk] such that z0 = start and zk = end and there is an edge between
zi and zi+1 where 0 <= i <= k-1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The distance of a path is the sum of the weights on the edges of the
path. Let distanceToLastNode(x) denote the shortest distance of a path
between node n and node x. A restricted path is a path that also
satisfies that distanceToLastNode(zi) > distanceToLastNode(zi+1) where 0
<= i <= k-1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of restricted paths from node 1 to node n. Since that
number may be too large, return it modulo 109 + 7.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, edges = [[1,2,3],[1,3,3],[2,3,1],[1,4,2],[5,2,2],[3,5,1],[5,4,10]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> Each circle contains the node number in black and its <code>distanceToLastNode value in blue. </code>The three restricted paths are:
  1) 1 --&gt; 2 --&gt; 5
  2) 1 --&gt; 2 --&gt; 3 --&gt; 5
  3) 1 --&gt; 3 --&gt; 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 7, edges = [[1,3,1],[4,1,2],[7,3,4],[2,5,3],[5,6,1],[6,7,2],[7,5,3],[2,6,4]]
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> Each circle contains the node number in black and its <code>distanceToLastNode value in blue. </code>The only restricted path is 1 --&gt; 3 --&gt; 7.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n - 1 <= edges.length <= 4 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges[i].length == 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ui, vi <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ui != vi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= weighti <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There is at most one edge between any two nodes.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There is at least one path between any two nodes.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
