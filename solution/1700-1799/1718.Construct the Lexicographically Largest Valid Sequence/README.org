* [[https://leetcode-cn.com/problems/construct-the-lexicographically-largest-valid-sequence][1718.
构建字典序最大的可行序列]]
  :PROPERTIES:
  :CUSTOM_ID: 构建字典序最大的可行序列
  :END:
[[./solution/1700-1799/1718.Construct the Lexicographically Largest Valid Sequence/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数 n ，请你找到满足下面条件的一个序列：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

整数 1 在序列中只出现一次。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 到 n 之间每个整数都恰好出现两次。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

对于每个 2 到 n 之间的整数 i ，两个 i 之间出现的距离恰好为 i 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

序列里面两个数 a[i] 和 a[j] 之间的
距离 ，我们定义为它们下标绝对值之差 |j - i| 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回满足上述条件中 字典序最大 的序列。题目保证在给定限制条件下，一定存在解。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一个序列 a 被认为比序列 b （两者长度相同）字典序更大的条件是： a
和 b 中第一个不一样的数字处，a 序列的数字比 b 序列的数字大。比方说，[0,1,9,0] 比 [0,1,5,6] 字典序更大，因为第一个不同的位置是第三个数字，且 9 比 5 大。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>n = 3
  <b>输出：</b>[3,1,2,3,2]
  <b>解释：</b>[2,3,2,1,3] 也是一个可行的序列，但是 [3,1,2,3,2] 是字典序最大的序列。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>n = 5
  <b>输出：</b>[5,3,1,4,3,5,2,4,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
