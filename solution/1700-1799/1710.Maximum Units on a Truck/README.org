* [[https://leetcode-cn.com/problems/maximum-units-on-a-truck][1710.
卡车上的最大单元数]]
  :PROPERTIES:
  :CUSTOM_ID: 卡车上的最大单元数
  :END:
[[./solution/1700-1799/1710.Maximum Units on a Truck/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

请你将一些箱子装在 一辆卡车 上。给你一个二维数组 boxTypes ，其中
boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi] ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

numberOfBoxesi 是类型 i 的箱子的数量。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

numberOfUnitsPerBoxi 是类型 i 每个箱子可以装载的单元数量。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

整数 truckSize 表示卡车上可以装载 箱子 的 最大数量 。只要箱子数量不超过
truckSize ，你就可以选择任意箱子装到卡车上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回卡车可以装载 单元 的 最大 总数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4
  <strong>输出：</strong>8
  <strong>解释：</strong>箱子的情况如下：
  - 1 个第一类的箱子，里面含 3 个单元。
  - 2 个第二类的箱子，每个里面含 2 个单元。
  - 3 个第三类的箱子，每个里面含 1 个单元。
  可以选择第一类和第二类的所有箱子，以及第三类的一个箱子。
  单元总数 = (1 * 3) + (2 * 2) + (1 * 1) = 8</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10
  <strong>输出：</strong>91
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= boxTypes.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= numberOfBoxesi, numberOfUnitsPerBoxi <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= truckSize <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
