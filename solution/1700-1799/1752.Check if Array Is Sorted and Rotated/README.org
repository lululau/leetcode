* [[https://leetcode-cn.com/problems/check-if-array-is-sorted-and-rotated][1752.
检查数组是否经排序和轮转得到]]
  :PROPERTIES:
  :CUSTOM_ID: 检查数组是否经排序和轮转得到
  :END:
[[./solution/1700-1799/1752.Check if Array Is Sorted and Rotated/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 nums 。nums 的源数组中，所有元素与 nums
相同，但按非递减顺序排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果 nums 能够由源数组轮转若干位置（包括 0 个位置）得到，则返回 true
；否则，返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

源数组中可能存在 重复项 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：我们称数组 A 在轮转 x 个位置后得到长度相同的数组 B ，当它们满足
A[i] == B[(i+x) % A.length] ，其中 % 为取余运算。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [3,4,5,1,2]
  <strong>输出：</strong>true
  <strong>解释：</strong>[1,2,3,4,5] 为有序的源数组。
  可以轮转 x = 3 个位置，使新数组从值为 3 的元素开始：[3,4,5,1,2] 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [2,1,3,4]
  <strong>输出：</strong>false
  <strong>解释：</strong>源数组无法经轮转得到 nums 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,2,3]
  <strong>输出：</strong>true
  <strong>解释：</strong>[1,2,3] 为有序的源数组。
  可以轮转 x = 0 个位置（即不轮转）得到 nums 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,1,1]
  <strong>输出：</strong>true
  <strong>解释：</strong>[1,1,1] 为有序的源数组。
  轮转任意个位置都可以得到 nums 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [2,1]
  <strong>输出：</strong>true
  <strong>解释：</strong>[1,2] 为有序的源数组。
  可以轮转 x = 5 个位置，使新数组从值为 2 的元素开始：[2,1] 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
