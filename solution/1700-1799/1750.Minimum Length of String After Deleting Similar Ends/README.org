* [[https://leetcode-cn.com/problems/minimum-length-of-string-after-deleting-similar-ends][1750.
删除字符串两端相同字符后的最短长度]]
  :PROPERTIES:
  :CUSTOM_ID: 删除字符串两端相同字符后的最短长度
  :END:
[[./solution/1700-1799/1750.Minimum Length of String After Deleting Similar Ends/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个只包含字符 'a'，'b' 和
'c' 的字符串 s ，你可以执行下面这个操作（5 个步骤）任意次：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

选择字符串 s 一个 非空 的前缀，这个前缀的所有字符都相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

选择字符串 s 一个 非空 的后缀，这个后缀的所有字符都相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

前缀和后缀在字符串中任意位置都不能有交集。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

前缀和后缀包含的所有字符都要相同。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

同时删除前缀和后缀。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回对字符串 s 执行上面操作任意次以后（可能 0 次），能得到的
最短长度 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>s = "ca"
  <b>输出：</b>2
  <strong>解释：</strong>你没法删除任何一个字符，所以字符串长度仍然保持不变。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>s = "cabaabac"
  <b>输出：</b>0
  <b>解释：</b>最优操作序列为：
  - 选择前缀 "c" 和后缀 "c" 并删除它们，得到 s = "abaaba" 。
  - 选择前缀 "a" 和后缀 "a" 并删除它们，得到 s = "baab" 。
  - 选择前缀 "b" 和后缀 "b" 并删除它们，得到 s = "aa" 。
  - 选择前缀 "a" 和后缀 "a" 并删除它们，得到 s = "" 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>s = "aabccabba"
  <b>输出：</b>3
  <b>解释：</b>最优操作序列为：
  - 选择前缀 "aa" 和后缀 "a" 并删除它们，得到 s = "bccabb" 。
  - 选择前缀 "b" 和后缀 "bb" 并删除它们，得到 s = "cca" 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 只包含字符 'a'，'b' 和 'c' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
