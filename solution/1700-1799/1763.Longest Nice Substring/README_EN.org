* [[https://leetcode.com/problems/longest-nice-substring][1763. Longest
Nice Substring]]
  :PROPERTIES:
  :CUSTOM_ID: longest-nice-substring
  :END:
[[./solution/1700-1799/1763.Longest Nice Substring/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A string s is nice if, for every letter of the alphabet that s contains,
it appears both in uppercase and lowercase. For example, "abABB" is nice
because 'A' and 'a' appear, and 'B' and 'b' appear. However, "abA" is
not because 'b' appears, but 'B' does not.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a string s, return the longest substring of s that is nice. If
there are multiple, return the substring of the earliest occurrence. If
there are none, return an empty string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;YazaAay&quot;
  <strong>Output:</strong> &quot;aAa&quot;
  <strong>Explanation: </strong>&quot;aAa&quot; is a nice string because &#39;A/a&#39; is the only letter of the alphabet in s, and both &#39;A&#39; and &#39;a&#39; appear.
  &quot;aAa&quot; is the longest nice substring.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;Bb&quot;
  <strong>Output:</strong> &quot;Bb&quot;
  <strong>Explanation:</strong> &quot;Bb&quot; is a nice string because both &#39;B&#39; and &#39;b&#39; appear. The whole string is a substring.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;c&quot;
  <strong>Output:</strong> &quot;&quot;
  <strong>Explanation:</strong> There are no nice substrings.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;dDzeE&quot;
  <strong>Output:</strong> &quot;dD&quot;
  <strong>Explanation: </strong>Both &quot;dD&quot; and &quot;eE&quot; are the longest nice substrings.
  As there are multiple longest nice substrings, return &quot;dD&quot; since it occurs earlier.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of uppercase and lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
