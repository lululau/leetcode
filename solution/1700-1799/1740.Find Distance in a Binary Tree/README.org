* [[https://leetcode-cn.com/problems/find-distance-in-a-binary-tree][1740.
找到二叉树中的距离]]
  :PROPERTIES:
  :CUSTOM_ID: 找到二叉树中的距离
  :END:
[[./solution/1700-1799/1740.Find Distance in a Binary Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一棵二叉树的根节点 root 以及两个整数 p 和 q ，返回该二叉树中值为 p
的结点与值为 q 的结点间的 距离 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

两个结点间的 距离 就是从一个结点到另一个结点的路径上边的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 0
  <strong>输出：</strong>3
  <strong>解释：</strong>在 5 和 0 之间有 3 条边：5-3-1-0</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 7
  <strong>输出：</strong>2
  <strong>解释：</strong>在 5 和 7 之间有 2 条边：5-2-7</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 5
  <strong>输出：</strong>0
  <strong>解释：</strong>一个结点与它本身之间的距离为 0</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

树中结点个数的范围在 [1, 104].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= Node.val <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

树中所有结点的值都是唯一的.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

p 和q 是树中结点的值.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
