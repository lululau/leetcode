* [[https://leetcode.com/problems/missing-ranges][163. Missing Ranges]]
  :PROPERTIES:
  :CUSTOM_ID: missing-ranges
  :END:
[[./solution/0100-0199/0163.Missing Ranges/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an inclusive range [lower, upper] and a sorted unique
integer array nums, where all elements are in the inclusive range.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A number x is considered missing if x is in the range [lower, upper] and
x is not in nums.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the smallest sorted list of ranges that cover every missing
number exactly. That is, no element of nums is in any of the ranges, and
each missing number is in one of the ranges.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Each range [a,b] in the list should be output as:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

"a->b" if a != b

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"a" if a == b

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [0,1,3,50,75], lower = 0, upper = 99
  <strong>Output:</strong> [&quot;2&quot;,&quot;4-&gt;49&quot;,&quot;51-&gt;74&quot;,&quot;76-&gt;99&quot;]
  <strong>Explanation:</strong> The ranges are:
  [2,2] --&gt; &quot;2&quot;
  [4,49] --&gt; &quot;4-&gt;49&quot;
  [51,74] --&gt; &quot;51-&gt;74&quot;
  [76,99] --&gt; &quot;76-&gt;99&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [], lower = 1, upper = 1
  <strong>Output:</strong> [&quot;1&quot;]
  <strong>Explanation:</strong> The only missing range is [1,1], which becomes &quot;1&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [], lower = -3, upper = -1
  <strong>Output:</strong> [&quot;-3-&gt;-1&quot;]
  <strong>Explanation:</strong> The only missing range is [-3,-1], which becomes &quot;-3-&gt;-1&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [-1], lower = -1, upper = -1
  <strong>Output:</strong> []
  <strong>Explanation:</strong> There are no missing ranges since there are no missing numbers.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [-1], lower = -2, upper = -1
  <strong>Output:</strong> [&quot;-2&quot;]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= lower <= upper <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

lower <= nums[i] <= upper

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the values of nums are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
