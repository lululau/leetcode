* [[https://leetcode-cn.com/problems/compare-version-numbers][165.
比较版本号]]
  :PROPERTIES:
  :CUSTOM_ID: 比较版本号
  :END:
[[./solution/0100-0199/0165.Compare Version Numbers/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个版本号 version1 和 version2 ，请你比较它们。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

版本号由一个或多个修订号组成，各修订号由一个 '.' 连接。每个修订号由
多位数字 组成，可能包含 前导零
。每个版本号至少包含一个字符。修订号从左到右编号，下标从 0
开始，最左边的修订号下标为 0 ，下一个修订号下标为 1
，以此类推。例如，2.5.33 和 0.1 都是有效的版本号。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

比较版本号时，请按从左到右的顺序依次比较它们的修订号。比较修订号时，只需比较
忽略任何前导零后的整数值 。也就是说，修订号 1 和修订号 001 相等
。如果版本号没有指定某个下标处的修订号，则该修订号视为 0 。例如，版本
1.0 小于版本 1.1 ，因为它们下标为 0 的修订号相同，而下标为 1
的修订号分别为 0 和 1 ，0 < 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回规则如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 version1 > version2 返回 1，

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 version1 < version2 返回 -1，

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

除此之外返回 0。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>version1 = "1.01", version2 = "1.001"
  <strong>输出：</strong>0
  <strong>解释：</strong>忽略前导零，"01" 和 "001" 都表示相同的整数 "1"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>version1 = "1.0", version2 = "1.0.0"
  <strong>输出：</strong>0
  <strong>解释：</strong>version1 没有指定下标为 2 的修订号，即视为 "0"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>version1 = "0.1", version2 = "1.1"
  <strong>输出：</strong>-1
  <strong>解释：</strong>version1 中下标为 0 的修订号是 "0"，version2 中下标为 0 的修订号是 "1" 。0 < 1，所以 version1 < version2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>version1 = "1.0.1", version2 = "1"
  <strong>输出：</strong>1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>version1 = "7.5.2.4", version2 = "7.5.3"
  <strong>输出：</strong>-1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= version1.length, version2.length <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

version1 和 version2 仅包含数字和 '.'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

version1 和 version2 都是 有效版本号

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

version1 和 version2 的所有修订号都可以存储在 32 位整数 中

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
