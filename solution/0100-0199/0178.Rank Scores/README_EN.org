* [[https://leetcode.com/problems/rank-scores][178. Rank Scores]]
  :PROPERTIES:
  :CUSTOM_ID: rank-scores
  :END:
[[./solution/0100-0199/0178.Rank Scores/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Write a SQL query to rank scores. If there is a tie between two scores,
both should have the same ranking. Note that after a tie, the next
ranking number should be the next consecutive integer value. In other
words, there should be no "holes" between ranks.

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +----+-------+
  | Id | Score |
  +----+-------+
  | 1  | 3.50  |
  | 2  | 3.65  |
  | 3  | 4.00  |
  | 4  | 3.85  |
  | 5  | 4.00  |
  | 6  | 3.65  |
  +----+-------+
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

For example, given the above Scores table, your query should generate
the following report (order by highest score):

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +-------+---------+
  | score | Rank    |
  +-------+---------+
  | 4.00  | 1       |
  | 4.00  | 1       |
  | 3.85  | 2       |
  |&nbsp;3.65  | 3       |
  | 3.65  | 3       |
  | 3.50  | 4       |
  +-------+---------+
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Important Note: For MySQL solutions, to escape reserved words used as
column names, you can use an apostrophe before and after the keyword.
For example =Rank=.

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *MySQL8*
    :PROPERTIES:
    :CUSTOM_ID: mysql8
    :END:
Use =DENSE_RANK()= to solve this problem.

#+begin_src sql
  DENSE_RANK() OVER (
      PARTITION BY <expression>[{,<expression>...}]
      ORDER BY <expression> [ASC|DESC], [{,<expression>...}]
  )
#+end_src

Solution:

#+begin_src sql
  # Write your MySQL query statement below
  SELECT Score, DENSE_RANK() OVER (ORDER BY Score DESC) 'Rank'
  FROM Scores;
#+end_src

*** *MySQL5*
    :PROPERTIES:
    :CUSTOM_ID: mysql5
    :END:
MySQL only provides
[[https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html][window
function]] after version 8. In previous versions, variables can be used
to achieve similar functions:

#+begin_src sql
  SELECT Score,
         CONVERT(rk, SIGNED) `Rank`
  FROM (SELECT Score,
               IF(@latest = Score, @rank, @rank := @rank + 1) rk,
               @latest := Score
        FROM Scores,
             (SELECT @rank := 0, @latest := NULL) tmp
        ORDER BY Score DESC) s;
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
