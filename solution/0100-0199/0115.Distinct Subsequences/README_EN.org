* [[https://leetcode.com/problems/distinct-subsequences][115. Distinct
Subsequences]]
  :PROPERTIES:
  :CUSTOM_ID: distinct-subsequences
  :END:
[[./solution/0100-0199/0115.Distinct Subsequences/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two strings s and t, return the number of distinct subsequences of
s which equals t.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A string's subsequence is a new string formed from the original string
by deleting some (can be none) of the characters without disturbing the
remaining characters' relative positions. (i.e., "ACE" is a subsequence
of "ABCDE" while "AEC" is not).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It is guaranteed the answer fits on a 32-bit signed integer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;rabbbit&quot;, t = &quot;rabbit&quot;
  <strong>Output:</strong> 3
  <strong>Explanation:</strong>
  As shown below, there are 3 ways you can generate &quot;rabbit&quot; from S.
  <code><strong><u>rabb</u></strong>b<strong><u>it</u></strong></code>
  <code><strong><u>ra</u></strong>b<strong><u>bbit</u></strong></code>
  <code><strong><u>rab</u></strong>b<strong><u>bit</u></strong></code>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;babgbag&quot;, t = &quot;bag&quot;
  <strong>Output:</strong> 5
  <strong>Explanation:</strong>
  As shown below, there are 5 ways you can generate &quot;bag&quot; from S.
  <code><strong><u>ba</u></strong>b<u><strong>g</strong></u>bag</code>
  <code><strong><u>ba</u></strong>bgba<strong><u>g</u></strong></code>
  <code><u><strong>b</strong></u>abgb<strong><u>ag</u></strong></code>
  <code>ba<u><strong>b</strong></u>gb<u><strong>ag</strong></u></code>
  <code>babg<strong><u>bag</u></strong></code></pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length, t.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s and t consist of English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
