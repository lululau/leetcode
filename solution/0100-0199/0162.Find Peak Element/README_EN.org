* [[https://leetcode.com/problems/find-peak-element][162. Find Peak
Element]]
  :PROPERTIES:
  :CUSTOM_ID: find-peak-element
  :END:
[[./solution/0100-0199/0162.Find Peak Element/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A peak element is an element that is strictly greater than its
neighbors.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an integer array nums, find a peak element, and return its index.
If the array contains multiple peaks, return the index to any of the
peaks.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may imagine that nums[-1] = nums[n] = -∞.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,1]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,1,3,5,6,4]
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-231 <= nums[i] <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[i] != nums[i + 1] for all valid i.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

Follow up: Could you implement a solution with logarithmic complexity?

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
