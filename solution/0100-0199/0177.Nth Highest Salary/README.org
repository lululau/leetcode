* [[https://leetcode-cn.com/problems/nth-highest-salary][177.
第N高的薪水]]
  :PROPERTIES:
  :CUSTOM_ID: 第n高的薪水
  :END:
[[./solution/0100-0199/0177.Nth Highest Salary/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

编写一个 SQL 查询，获取 Employee 表中第 n 高的薪水（Salary）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>+----+--------+
  | Id | Salary |
  +----+--------+
  | 1  | 100    |
  | 2  | 200    |
  | 3  | 300    |
  +----+--------+
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

例如上述 Employee 表，n =
2 时，应返回第二高的薪水 200。如果不存在第 n 高的薪水，那么查询应返回 null。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>+------------------------+
  | getNthHighestSalary(2) |
  +------------------------+
  | 200                    |
  +------------------------+
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *SQL*
    :PROPERTIES:
    :CUSTOM_ID: sql
    :END:
#+begin_src sql
  CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
  BEGIN
      SET N = N - 1;
    RETURN (
        # Write your MySQL query statement below.
        SELECT (
            SELECT DISTINCT Salary
            FROM Employee
            ORDER BY Salary DESC
            LIMIT 1 OFFSET N
        )
    );
  END
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
