* [[https://leetcode-cn.com/problems/minimum-absolute-sum-difference][1818.
绝对差值和]]
  :PROPERTIES:
  :CUSTOM_ID: 绝对差值和
  :END:
[[./solution/1800-1899/1818.Minimum Absolute Sum Difference/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个正整数数组 nums1 和 nums2 ，数组的长度都是 n 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

数组 nums1 和 nums2 的 绝对差值和 定义为所有 |nums1[i] - nums2[i]|（0 <=
i < n）的 总和（下标从 0 开始）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以选用 nums1 中的 任意一个 元素来替换 nums1 中的 至多 一个元素，以
最小化 绝对差值和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在替换数组 nums1 中最多一个元素 之后
，返回最小绝对差值和。因为答案可能很大，所以需要对 109 + 7 取余 后返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

|x| 定义为：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x >= 0 ，值为 x ，或者

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x <= 0 ，值为 -x

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums1 = [1,7,5], nums2 = [2,3,5]
  <strong>输出：</strong>3
  <strong>解释：</strong>有两种可能的最优方案：
  - 将第二个元素替换为第一个元素：[1,<strong>7</strong>,5] => [1,<strong>1</strong>,5] ，或者
  - 将第二个元素替换为第三个元素：[1,<strong>7</strong>,5] => [1,<strong>5</strong>,5]
  两种方案的绝对差值和都是 <code>|1-2| + (|1-3| 或者 |5-3|) + |5-5| = </code>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]
  <strong>输出：</strong>0
  <strong>解释：</strong>nums1 和 nums2 相等，所以不用替换元素。绝对差值和为 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]
  <strong>输出：</strong>20
  <strong>解释：</strong>将第一个元素替换为第二个元素：[<strong>1</strong>,10,4,4,2,7] => [<strong>10</strong>,10,4,4,2,7]
  绝对差值和为 <code>|10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20</code>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == nums1.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == nums2.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums1[i], nums2[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
