* [[https://leetcode.com/problems/sentence-similarity-iii][1813.
Sentence Similarity III]]
  :PROPERTIES:
  :CUSTOM_ID: sentence-similarity-iii
  :END:
[[./solution/1800-1899/1813.Sentence Similarity III/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A sentence is a list of words that are separated by a single space with
no leading or trailing spaces. For example, "Hello World", "HELLO",
"hello world hello world" are all sentences. Words consist of only
uppercase and lowercase English letters.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two sentences sentence1 and sentence2 are similar if it is possible to
insert an arbitrary sentence (possibly empty) inside one of these
sentences such that the two sentences become equal. For example,
sentence1 = "Hello my name is Jane" and sentence2 = "Hello Jane" can be
made equal by inserting "my name is" between "Hello" and "Jane" in
sentence2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given two sentences sentence1 and sentence2, return true if sentence1
and sentence2 are similar. Otherwise, return false.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> sentence1 = &quot;My name is Haley&quot;, sentence2 = &quot;My Haley&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> sentence2 can be turned to sentence1 by inserting &quot;name is&quot; between &quot;My&quot; and &quot;Haley&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> sentence1 = &quot;of&quot;, sentence2 = &quot;A lot of words&quot;
  <strong>Output:</strong> false
  <strong>Explanation: </strong>No single sentence can be inserted inside one of the sentences to make it equal to the other.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> sentence1 = &quot;Eating right now&quot;, sentence2 = &quot;Eating&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> sentence2 can be turned to sentence1 by inserting &quot;right now&quot; at the end of the sentence.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> sentence1 = &quot;Luky&quot;, sentence2 = &quot;Lucccky&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sentence1.length, sentence2.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sentence1 and sentence2 consist of lowercase and uppercase English
letters and spaces.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The words in sentence1 and sentence2 are separated by a single space.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def areSentencesSimilar(self, sentence1: str, sentence2: str) -> bool:
          if sentence1 == sentence2:
              return True
          n1, n2 = len(sentence1), len(sentence2)
          if n1 == n2:
              return False
          if n1 < n2:
              sentence1, sentence2 = sentence2, sentence1
          words1, words2 = sentence1.split(), sentence2.split()
          i = j = 0
          while i < len(words2) and words1[i] == words2[i]:
              i += 1
          if i == len(words2):
              return True
          while j < len(words2) and words1[len(words1) - 1 - j] == words2[len(words2) - 1 - j]:
              j += 1
          if j == len(words2):
              return True
          return i + j == len(words2)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean areSentencesSimilar(String sentence1, String sentence2) {
          if (Objects.equals(sentence1, sentence2)) {
              return true;
          }
          int n1 = sentence1.length(), n2 = sentence2.length();
          if (n1 == n2) {
              return false;
          }
          if (n1 < n2) {
              String t = sentence1;
              sentence1 = sentence2;
              sentence2 = t;
          }
          String[] words1 = sentence1.split(" ");
          String[] words2 = sentence2.split(" ");
          int i = 0, j = 0;
          while (i < words2.length &&  Objects.equals(words1[i], words2[i])) {
              ++i;
          }
          if (i == words2.length) {
              return true;
          }
          while (j < words2.length && Objects.equals(words1[words1.length - 1 - j], words2[words2.length - 1 - j])) {
              ++j;
          }
          if (j == words2.length) {
              return true;
          }
          return i + j == words2.length;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
