* [[https://leetcode.com/problems/minimum-sideway-jumps][1824. Minimum
Sideway Jumps]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-sideway-jumps
  :END:
[[./solution/1800-1899/1824.Minimum Sideway Jumps/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is a 3 lane road of length n that consists of n + 1 points labeled
from 0 to n. A frog starts at point 0 in the second lane and wants to
jump to point n. However, there could be obstacles along the way.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given an array obstacles of length n + 1 where each obstacles[i]
(ranging from 0 to 3) describes an obstacle on the lane obstacles[i] at
point i. If obstacles[i] == 0, there are no obstacles at point i. There
will be at most one obstacle in the 3 lanes at each point.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

For example, if obstacles[2] == 1, then there is an obstacle on lane 1
at point 2.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The frog can only travel from point i to point i + 1 on the same lane if
there is not an obstacle on the lane at point i + 1. To avoid obstacles,
the frog can also perform a side jump to jump to another lane (even if
they are not adjacent) at the same point if there is no obstacle on the
new lane.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

For example, the frog can jump from lane 3 at point 3 to lane 1 at
point 3.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of side jumps the frog needs to reach any lane
at point n starting from lane 2 at point 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: There will be no obstacles on points 0 and n.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> obstacles = [0,1,2,3,0]
  <strong>Output:</strong> 2 
  <strong>Explanation:</strong> The optimal solution is shown by the arrows above. There are 2 side jumps (red arrows).
  Note that the frog can jump over obstacles only when making side jumps (as shown at point 2).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> obstacles = [0,1,1,3,3,0]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> There are no obstacles on lane 2. No side jumps are required.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> obstacles = [0,2,1,0,3,0]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> The optimal solution is shown by the arrows above. There are 2 side jumps.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

obstacles.length == n + 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 5 * 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= obstacles[i] <= 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

obstacles[0] == obstacles[n] == 0

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
