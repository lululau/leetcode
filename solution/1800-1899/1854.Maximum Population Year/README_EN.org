* [[https://leetcode.com/problems/maximum-population-year][1854. Maximum
Population Year]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-population-year
  :END:
[[./solution/1800-1899/1854.Maximum Population Year/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a 2D integer array logs where each logs[i] = [birthi,
deathi] indicates the birth and death years of the ith person.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The population of some year x is the number of people alive during that
year. The ith person is counted in year x's population if x is in the
inclusive range [birthi, deathi - 1]. Note that the person is not
counted in the year that they die.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the earliest year with the maximum population.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> logs = [[1993,1999],[2000,2010]]
  <strong>Output:</strong> 1993
  <strong>Explanation:</strong> The maximum population is 1, and 1993 is the earliest year with this population.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> logs = [[1950,1961],[1960,1971],[1970,1981]]
  <strong>Output:</strong> 1960
  <strong>Explanation:</strong> 
  The maximum population is 2, and it had happened in years 1960 and 1970.
  The earlier year between them is 1960.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= logs.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1950 <= birthi < deathi <= 2050

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def maximumPopulation(self, logs: List[List[int]]) -> int:
          offset = 1950
          delta = [0] * 101
          for birth, death in logs:
              delta[birth - offset] += 1
              delta[death - offset] -= 1
          mx = cur = res = 0
          for i in range(101):
              cur += delta[i]
              if mx < cur:
                  mx = cur
                  res = i
          return res + offset
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int maximumPopulation(int[][] logs) {
          int offset = 1950;
          int[] delta = new int[101];
          for (int[] log : logs) {
              ++delta[log[0] - offset];
              --delta[log[1] - offset];
          }
          int mx = 0, cur = 0, res = 0;
          for (int i = 0; i < 101; ++i) {
              cur += delta[i];
              if (mx < cur) {
                  mx = cur;
                  res = i;
              }
          }
          return res + offset;
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[][]} logs
   * @return {number}
   */
  var maximumPopulation = function(logs) {
      const offset = 1950;
      const len = 2050 - 1950 + 1;
      let delta = new Array(len).fill(0);
      for (let log of logs) {
          delta[log[0] - offset] += 1;
          delta[log[1] - offset] -= 1;
      }
      let max = 0;
      let total = 0;
      let index = 0;
      for (let i = 0; i < len; i++) {
          total += delta[i];
          if (total > max) {
              max = total;
              index = i;
          }
      }
      return index + offset;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
