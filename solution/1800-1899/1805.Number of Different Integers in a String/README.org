* [[https://leetcode-cn.com/problems/number-of-different-integers-in-a-string][1805.
字符串中不同整数的数目]]
  :PROPERTIES:
  :CUSTOM_ID: 字符串中不同整数的数目
  :END:
[[./solution/1800-1899/1805.Number of Different Integers in a String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串 word ，该字符串由数字和小写英文字母组成。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你用空格替换每个不是数字的字符。例如，"a123bc34d8ef34" 将会变成 ” 123 
34 8  34”
。注意，剩下的这些整数为（相邻彼此至少有一个空格隔开）："123"、"34"、"8"
和 "34" 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回对 word 完成替换后形成的 不同 整数的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

只有当两个整数的 不含前导零 的十进制表示不同， 才认为这两个整数也不同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word = "a<strong>123</strong>bc<strong>34</strong>d<strong>8</strong>ef<strong>34</strong>"
  <strong>输出：</strong>3
  <strong>解释：</strong>不同的整数有 "123"、"34" 和 "8" 。注意，"34" 只计数一次。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word = "leet<strong>1234</strong>code<strong>234</strong>"
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>word = "a<strong>1</strong>b<strong>01</strong>c<strong>001</strong>"
  <strong>输出：</strong>1
  <strong>解释：</strong>"1"、"01" 和 "001" 视为同一个整数的十进制表示，因为在比较十进制值时会忽略前导零的存在。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word 由数字和小写英文字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

将 =word= 按照字母切分，得到数字数组 =nums=，然后利用 set 去重，返回 set
的长度即可。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  import re

  class Solution:
      def numDifferentIntegers(self, word: str) -> int:
          nums = re.split(r'[a-z]+', word)
          return len({int(num) for num in nums if num != ''})
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int numDifferentIntegers(String word) {
          String[] nums = word.split("[a-z]+");
          Set<String> numSet = new HashSet<>();
          for (String num : nums) {
              if ("".equals(num)) {
                  continue;
              }
              int j = 0;
              while (j < num.length() - 1 && num.charAt(j) == '0') {
                  ++j;
              }
              numSet.add(num.substring(j));
          }
          return numSet.size();
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
