* [[https://leetcode.com/problems/number-of-different-integers-in-a-string][1805.
Number of Different Integers in a String]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-different-integers-in-a-string
  :END:
[[./solution/1800-1899/1805.Number of Different Integers in a String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a string word that consists of digits and lowercase
English letters.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You will replace every non-digit character with a space. For example,
"a123bc34d8ef34" will become " 123  34 8  34". Notice that you are left
with some integers that are separated by at least one space: "123",
"34", "8", and "34".

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of different integers after performing the replacement
operations on word.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two integers are considered different if their decimal representations
without any leading zeros are different.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word = &quot;a<u>123</u>bc<u>34</u>d<u>8</u>ef<u>34</u>&quot;
  <strong>Output:</strong> 3
  <strong>Explanation: </strong>The three different integers are &quot;123&quot;, &quot;34&quot;, and &quot;8&quot;. Notice that &quot;34&quot; is only counted once.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word = &quot;leet<u>1234</u>code<u>234</u>&quot;
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> word = &quot;a<u>1</u>b<u>01</u>c<u>001</u>&quot;
  <strong>Output:</strong> 1
  <strong>Explanation: </strong>The three integers &quot;1&quot;, &quot;01&quot;, and &quot;001&quot; all represent the same integer because
  the leading zeros are ignored when comparing their decimal values.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word consists of digits and lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  import re

  class Solution:
      def numDifferentIntegers(self, word: str) -> int:
          nums = re.split(r'[a-z]+', word)
          return len({int(num) for num in nums if num != ''})
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int numDifferentIntegers(String word) {
          String[] nums = word.split("[a-z]+");
          Set<String> numSet = new HashSet<>();
          for (String num : nums) {
              if ("".equals(num)) {
                  continue;
              }
              int j = 0;
              while (j < num.length() - 1 && num.charAt(j) == '0') {
                  ++j;
              }
              numSet.add(num.substring(j));
          }
          return numSet.size();
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
