* [[https://leetcode-cn.com/problems/seat-reservation-manager][1845.
座位预约管理系统]]
  :PROPERTIES:
  :CUSTOM_ID: 座位预约管理系统
  :END:
[[./solution/1800-1899/1845.Seat Reservation Manager/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

请你设计一个管理 n 个座位预约的系统，座位编号从 1 到 n 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你实现 SeatManager 类：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

SeatManager(int n) 初始化一个 SeatManager 对象，它管理从 1 到
n 编号的 n 个座位。所有座位初始都是可预约的。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

int reserve() 返回可以预约座位的 最小编号 ，此座位变为不可预约。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

void unreserve(int
seatNumber) 将给定编号 seatNumber 对应的座位变成可以预约。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  ["SeatManager", "reserve", "reserve", "unreserve", "reserve", "reserve", "reserve", "reserve", "unreserve"]
  [[5], [], [], [2], [], [], [], [], [5]]
  <strong>输出：</strong>
  [null, 1, 2, null, 2, 3, 4, 5, null]

  <strong>解释：</strong>
  SeatManager seatManager = new SeatManager(5); // 初始化 SeatManager ，有 5 个座位。
  seatManager.reserve();    // 所有座位都可以预约，所以返回最小编号的座位，也就是 1 。
  seatManager.reserve();    // 可以预约的座位为 [2,3,4,5] ，返回最小编号的座位，也就是 2 。
  seatManager.unreserve(2); // 将座位 2 变为可以预约，现在可预约的座位为 [2,3,4,5] 。
  seatManager.reserve();    // 可以预约的座位为 [2,3,4,5] ，返回最小编号的座位，也就是 2 。
  seatManager.reserve();    // 可以预约的座位为 [3,4,5] ，返回最小编号的座位，也就是 3 。
  seatManager.reserve();    // 可以预约的座位为 [4,5] ，返回最小编号的座位，也就是 4 。
  seatManager.reserve();    // 唯一可以预约的是座位 5 ，所以返回 5 。
  seatManager.unreserve(5); // 将座位 5 变为可以预约，现在可预约的座位为 [5] 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= seatNumber <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每一次对 reserve 的调用，题目保证至少存在一个可以预约的座位。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每一次对 unreserve 的调用，题目保证 seatNumber 在调用函数前都是被预约状态。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

对 reserve 和 unreserve 的调用 总共 不超过 105 次。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

"小根堆"实现。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class SeatManager:

      def __init__(self, n: int):
          self.q = [i for i in range(1, n + 1)]

      def reserve(self) -> int:
          return heapq.heappop(self.q)

      def unreserve(self, seatNumber: int) -> None:
          heapq.heappush(self.q, seatNumber)


  # Your SeatManager object will be instantiated and called as such:
  # obj = SeatManager(n)
  # param_1 = obj.reserve()
  # obj.unreserve(seatNumber)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class SeatManager {
      private PriorityQueue<Integer> q;

      public SeatManager(int n) {
          q = new PriorityQueue<>(n);
          for (int i = 1; i <= n; ++i) {
              q.offer(i);
          }
      }
      
      public int reserve() {
          return q.poll();
      }
      
      public void unreserve(int seatNumber) {
          q.offer(seatNumber);
      }
  }

  /**
   * Your SeatManager object will be instantiated and called as such:
   * SeatManager obj = new SeatManager(n);
   * int param_1 = obj.reserve();
   * obj.unreserve(seatNumber);
   */
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
