* [[https://leetcode-cn.com/problems/minimum-number-of-operations-to-make-string-sorted][1830.
使字符串有序的最少操作次数]]
  :PROPERTIES:
  :CUSTOM_ID: 使字符串有序的最少操作次数
  :END:
[[./solution/1800-1899/1830.Minimum Number of Operations to Make String Sorted/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串 s （下标从 0 开始）。你需要对
s 执行以下操作直到它变为一个有序字符串：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

找到 最大下标 i ，使得 1 <= i < s.length 且 s[i] < s[i - 1] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

找到 最大下标 j ，使得 i <= j < s.length 且对于所有在闭区间 [i,
j] 之间的 k 都有 s[k] < s[i - 1] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

交换下标为 i - 1​​​​ 和 j​​​​ 处的两个字符。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

将下标 i 开始的字符串后缀反转。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回将字符串变成有序的最少操作次数。由于答案可能会很大，请返回它对 109
+ 7 取余 的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>s = "cba"
  <b>输出：</b>5
  <b>解释：</b>模拟过程如下所示：
  操作 1：i=2，j=2。交换 s[1] 和 s[2] 得到 s="cab" ，然后反转下标从 2 开始的后缀字符串，得到 s="cab" 。
  操作 2：i=1，j=2。交换 s[0] 和 s[2] 得到 s="bac" ，然后反转下标从 1 开始的后缀字符串，得到 s="bca" 。
  操作 3：i=2，j=2。交换 s[1] 和 s[2] 得到 s="bac" ，然后反转下标从 2 开始的后缀字符串，得到 s="bac" 。
  操作 4：i=1，j=1。交换 s[0] 和 s[1] 得到 s="abc" ，然后反转下标从 1 开始的后缀字符串，得到 s="acb" 。
  操作 5：i=2，j=2。交换 s[1] 和 s[2] 得到 s="abc" ，然后反转下标从 2 开始的后缀字符串，得到 s="abc" 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>s = "aabaa"
  <b>输出：</b>2
  <b>解释：</b>模拟过程如下所示：
  操作 1：i=3，j=4。交换 s[2] 和 s[4] 得到 s="aaaab" ，然后反转下标从 3 开始的后缀字符串，得到 s="aaaba" 。
  操作 2：i=4，j=4。交换 s[3] 和 s[4] 得到 s="aaaab" ，然后反转下标从 4 开始的后缀字符串，得到 s="aaaab" 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>s = "cdbea"
  <b>输出：</b>63</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>s = "leetcodeleetcodeleetcode"
  <b>输出：</b>982157772
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 3000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s​ 只包含小写英文字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
