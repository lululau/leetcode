* [[https://leetcode.com/problems/minimum-number-of-operations-to-make-string-sorted][1830.
Minimum Number of Operations to Make String Sorted]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-operations-to-make-string-sorted
  :END:
[[./solution/1800-1899/1830.Minimum Number of Operations to Make String Sorted/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a string s (0-indexed)​​​​​​. You are asked to perform the
following operation on s​​​​​​ until you get a sorted string:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

Find the largest index i such that 1 <= i < s.length and s[i] < s[i -
1].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Find the largest index j such that i <= j < s.length and s[k] < s[i - 1]
for all the possible values of k in the range [i, j] inclusive.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Swap the two characters at indices i - 1​​​​ and j​​​​​.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Reverse the suffix starting at index i​​​​​​.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of operations needed to make the string sorted. Since
the answer can be too large, return it modulo 109 + 7.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;cba&quot;
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The simulation goes as follows:
  Operation 1: i=2, j=2. Swap s[1] and s[2] to get s=&quot;cab&quot;, then reverse the suffix starting at 2. Now, s=&quot;cab&quot;.
  Operation 2: i=1, j=2. Swap s[0] and s[2] to get s=&quot;bac&quot;, then reverse the suffix starting at 1. Now, s=&quot;bca&quot;.
  Operation 3: i=2, j=2. Swap s[1] and s[2] to get s=&quot;bac&quot;, then reverse the suffix starting at 2. Now, s=&quot;bac&quot;.
  Operation 4: i=1, j=1. Swap s[0] and s[1] to get s=&quot;abc&quot;, then reverse the suffix starting at 1. Now, s=&quot;acb&quot;.
  Operation 5: i=2, j=2. Swap s[1] and s[2] to get s=&quot;abc&quot;, then reverse the suffix starting at 2. Now, s=&quot;abc&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;aabaa&quot;
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> The simulation goes as follows:
  Operation 1: i=3, j=4. Swap s[2] and s[4] to get s=&quot;aaaab&quot;, then reverse the substring starting at 3. Now, s=&quot;aaaba&quot;.
  Operation 2: i=4, j=4. Swap s[3] and s[4] to get s=&quot;aaaab&quot;, then reverse the substring starting at 4. Now, s=&quot;aaaab&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;cdbea&quot;
  <strong>Output:</strong> 63</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;leetcodeleetcodeleetcode&quot;
  <strong>Output:</strong> 982157772
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 3000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s​​​​​​ consists only of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
