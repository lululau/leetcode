* [[https://leetcode-cn.com/problems/splitting-a-string-into-descending-consecutive-values][1849.
将字符串拆分为递减的连续值]]
  :PROPERTIES:
  :CUSTOM_ID: 将字符串拆分为递减的连续值
  :END:
[[./solution/1800-1899/1849.Splitting a String Into Descending Consecutive Values/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个仅由数字组成的字符串 s 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你判断能否将 s 拆分成两个或者多个 非空子字符串 ，使子字符串的 数值 按
降序 排列，且每两个 相邻子字符串 的数值之 差 等于 1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

例如，字符串 s = "0090089" 可以拆分成 ["0090", "089"] ，数值为 [90,89]
。这些数值满足按降序排列，且相邻值相差 1 ，这种拆分方法可行。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

另一个例子中，字符串 s = "001" 可以拆分成 ["0", "01"]、["00", "1"] 或
["0", "0", "1"] 。然而，所有这些拆分方法都不可行，因为对应数值分别是
[0,1]、[0,1] 和 [0,0,1] ，都不满足按降序排列的要求。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

如果可以按要求拆分 s ，返回 true ；否则，返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

子字符串 是字符串中的一个连续字符序列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "1234"
  <strong>输出：</strong>false
  <strong>解释：</strong>不存在拆分 s 的可行方法。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "050043"
  <strong>输出：</strong>true
  <strong>解释：</strong>s 可以拆分为 ["05", "004", "3"] ，对应数值为 [5,4,3] 。
  满足按降序排列，且相邻值相差 <code>1</code> 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "9080701"
  <strong>输出：</strong>false
  <strong>解释：</strong>不存在拆分 s 的可行方法。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "10009998"
  <strong>输出：</strong>true
  <strong>解释：</strong>s 可以拆分为 ["100", "099", "98"] ，对应数值为 [100,99,98] 。
  满足按降序排列，且相邻值相差 <code>1</code> 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 仅由数字组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
