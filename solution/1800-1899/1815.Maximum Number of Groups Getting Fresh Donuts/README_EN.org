* [[https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts][1815.
Maximum Number of Groups Getting Fresh Donuts]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-number-of-groups-getting-fresh-donuts
  :END:
[[./solution/1800-1899/1815.Maximum Number of Groups Getting Fresh Donuts/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is a donuts shop that bakes donuts in batches of batchSize. They
have a rule where they must serve all of the donuts of a batch before
serving any donuts of the next batch. You are given an integer batchSize
and an integer array groups, where groups[i] denotes that there is a
group of groups[i] customers that will visit the shop. Each customer
will get exactly one donut.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

When a group visits the shop, all customers of the group must be served
before serving any of the following groups. A group will be happy if
they all get fresh donuts. That is, the first customer of the group does
not receive a donut that was left over from the previous group.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can freely rearrange the ordering of the groups. Return the maximum
possible number of happy groups after rearranging the groups.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> batchSize = 3, groups = [1,2,3,4,5,6]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> You can arrange the groups as [6,2,4,5,1,3]. Then the 1<sup>st</sup>, 2<sup>nd</sup>, 4<sup>th</sup>, and 6<sup>th</sup> groups will be happy.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> batchSize = 4, groups = [1,3,2,5,2,2,1,6]
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= batchSize <= 9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= groups.length <= 30

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= groups[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
