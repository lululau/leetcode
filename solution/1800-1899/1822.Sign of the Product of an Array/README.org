* [[https://leetcode-cn.com/problems/sign-of-the-product-of-an-array][1822.
数组元素积的符号]]
  :PROPERTIES:
  :CUSTOM_ID: 数组元素积的符号
  :END:
[[./solution/1800-1899/1822.Sign of the Product of an Array/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

已知函数 signFunc(x) 将会根据 x 的正负返回特定值：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x 是正数，返回 1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x 是负数，返回 -1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 x 是等于 0 ，返回 0 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 。令 product 为数组 nums 中所有元素值的乘积。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回 signFunc(product) 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [-1,-2,-3,-4,3,2,1]
  <strong>输出：</strong>1
  <strong>解释：</strong>数组中所有值的乘积是 144 ，且 signFunc(144) = 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,5,0,2,-3]
  <strong>输出：</strong>0
  <strong>解释：</strong>数组中所有值的乘积是 0 ，且 signFunc(0) = 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [-1,1,-1,1,-1]
  <strong>输出：</strong>-1
  <strong>解释：</strong>数组中所有值的乘积是 -1 ，且 signFunc(-1) = -1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-100 <= nums[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def arraySign(self, nums: List[int]) -> int:
          res = 1
          for num in nums:
              if num == 0:
                  return 0
              if num < 0:
                  res *= -1
          return res
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int arraySign(int[] nums) {
          int res = 1;
          for (int num : nums) {
              if (num == 0) return 0;
              if (num < 0) res *= -1;
          }
          return res;
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[]} nums
   * @return {number}
   */
  var arraySign = function (nums) {
    let res = 1;
    for (let num of nums) {
      if (num == 0) return 0;
      if (num < 0) res *= -1;
    }
    return res;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
