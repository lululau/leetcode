* [[https://leetcode.com/problems/maximum-element-after-decreasing-and-rearranging][1846.
Maximum Element After Decreasing and Rearranging]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-element-after-decreasing-and-rearranging
  :END:
[[./solution/1800-1899/1846.Maximum Element After Decreasing and Rearranging/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array of positive integers arr. Perform some operations
(possibly none) on arr so that it satisfies these conditions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The value of the first element in arr must be 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The absolute difference between any 2 adjacent elements must be less
than or equal to 1. In other words, abs(arr[i] - arr[i - 1]) <= 1 for
each i where 1 <= i < arr.length (0-indexed). abs(x) is the absolute
value of x.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

There are 2 types of operations that you can perform any number of
times:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Decrease the value of any element of arr to a smaller positive integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Rearrange the elements of arr to be in any order.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum possible value of an element in arr after performing
the operations to satisfy the conditions.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [2,2,1,2,1]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> 
  We can satisfy the conditions by rearranging <code>arr</code> so it becomes <code>[1,2,2,2,1]</code>.
  The largest element in <code>arr</code> is 2.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [100,1,1000]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> 
  One possible way to satisfy the conditions is by doing the following:
  1. Rearrange <code>arr</code> so it becomes <code>[1,100,1000]</code>.
  2. Decrease the value of the second element to 2.
  3. Decrease the value of the third element to 3.
  Now <code>arr = [1,2,3], which </code>satisfies the conditions.
  The largest element in <code>arr is 3.</code>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [1,2,3,4,5]
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The array already satisfies the conditions, and the largest element is 5.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
