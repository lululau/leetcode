* [[https://leetcode.com/problems/check-if-the-sentence-is-pangram][1832.
Check if the Sentence Is Pangram]]
  :PROPERTIES:
  :CUSTOM_ID: check-if-the-sentence-is-pangram
  :END:
[[./solution/1800-1899/1832.Check if the Sentence Is Pangram/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A pangram is a sentence where every letter of the English alphabet
appears at least once.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a string sentence containing only lowercase English letters,
return true if sentence is a pangram, or false otherwise.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> sentence = &quot;thequickbrownfoxjumpsoverthelazydog&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> sentence contains at least one of every letter of the English alphabet.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> sentence = &quot;leetcode&quot;
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sentence.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sentence consists of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
Set:

#+begin_src python
  class Solution:
      def checkIfPangram(self, sentence: str) -> bool:
          return len(set(sentence)) == 26
#+end_src

Bit Manipulation:

#+begin_src python
  class Solution:
      def checkIfPangram(self, sentence: str) -> bool:
          res = 0
          for c in sentence:
              diff = ord(c) - ord('a')
              res |= (1 << diff)
              if res == 0x3ffffff:
                  return True
          return False
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
HashSet:

#+begin_src java
  class Solution {
      public boolean checkIfPangram(String sentence) {
          Set<Character> s = new HashSet<>();
          for (int i = 0; i < sentence.length(); ++i) {
              s.add(sentence.charAt(i));
              if (s.size() == 26) return true;
          }
          return false;
      }
  }
#+end_src

Bit Manipulation:

#+begin_src java
  class Solution {
      public boolean checkIfPangram(String sentence) {
          int res = 0;
          for (int i = 0; i < sentence.length(); ++i) {
              int diff = sentence.charAt(i) - 'a';
              res |= (1 << diff);
              if (res == 0x3ffffff) return true;
          }
          return false;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
