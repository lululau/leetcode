* [[https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-binary-string-alternating][1864.
Minimum Number of Swaps to Make the Binary String Alternating]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-swaps-to-make-the-binary-string-alternating
  :END:
[[./solution/1800-1899/1864.Minimum Number of Swaps to Make the Binary String Alternating/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a binary string s, return the minimum number of character swaps to
make it alternating, or -1 if it is impossible.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The string is called alternating if no two adjacent characters are
equal. For example, the strings "010" and "1010" are alternating, while
the string "0100" is not.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Any two characters may be swapped, even if they are not adjacent.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;111000&quot;
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> Swap positions 1 and 4: &quot;1<u>1</u>10<u>0</u>0&quot; -&gt; &quot;1<u>0</u>10<u>1</u>0&quot;
  The string is now alternating.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;010&quot;
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> The string is already alternating, no swaps are needed.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;1110&quot;
  <strong>Output:</strong> -1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s[i] is either '0' or '1'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def minSwaps(self, s: str) -> int:
          s0n0 = s0n1 = s1n0 = s1n1 = 0
          for i in range(len(s)):
              if (i & 1) == 0:
                  if s[i] != '0':
                      s0n0 += 1
                  else:
                      s1n1 += 1
              else:
                  if s[i] != '0':
                      s1n0 += 1
                  else:
                      s0n1 += 1
          if s0n0 != s0n1 and s1n0 != s1n1:
              return -1
          if s0n0 != s0n1:
              return s1n0
          if s1n0 != s1n1:
              return s0n0
          return min(s0n0, s1n0)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int minSwaps(String s) {
          int s0n0 = 0, s0n1 = 0;
          int s1n0 = 0, s1n1 = 0;
          for (int i = 0; i < s.length(); ++i) {
              if ((i & 1) == 0) {
                  if (s.charAt(i) != '0') {
                      s0n0 += 1;
                  } else {
                      s1n1 += 1;
                  }
              } else {
                  if (s.charAt(i) != '0') {
                      s1n0 += 1;
                  } else {
                      s0n1 += 1;
                  }
              }
          }
          if (s0n0 != s0n1 && s1n0 != s1n1) {
              return -1;
          }
          if (s0n0 != s0n1) {
              return s1n0;
          }
          if (s1n0 != s1n1) {
              return s0n0;
          }
          return Math.min(s0n0, s1n0);
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {string} s
   * @return {number}
   */
   var minSwaps = function(s) {
      let n = s.length;
      let n1 = [...s].reduce((a, c) => parseInt(c) + a, 0);
      let n0 = n - n1;
      let count = Infinity;
      let half = n / 2;
      // 101、1010
      if (n1 == Math.ceil(half) && n0 == Math.floor(half)) {
          let cur = 0;
          for (let i = 0; i < n; i++) {
              if (i % 2 == 0 && s.charAt(i) != '1') cur++;
          }
          count = Math.min(count, cur);
      }
      // 010、0101
      if (n0 == Math.ceil(half) && n1 == Math.floor(half)) {
          let cur = 0;
          for (let i = 0; i < n; i++) {
              if (i % 2 == 0 && s.charAt(i) != '0') cur++;
          }
          count = Math.min(count, cur);
      }
      return count == Infinity ? -1 : count;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
