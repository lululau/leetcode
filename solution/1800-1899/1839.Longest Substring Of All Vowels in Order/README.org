* [[https://leetcode-cn.com/problems/longest-substring-of-all-vowels-in-order][1839.
所有元音按顺序排布的最长子字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 所有元音按顺序排布的最长子字符串
  :END:
[[./solution/1800-1899/1839.Longest Substring Of All Vowels in Order/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

当一个字符串满足如下条件时，我们称它是 美丽的 ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

所有 5
个英文元音字母（'a' ，'e' ，'i' ，'o' ，'u'）都必须 至少 出现一次。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

这些元音字母的顺序都必须按照 字典序 升序排布（也就是说所有的 'a' 都在
'e' 前面，所有的 'e' 都在 'i' 前面，以此类推）

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

比方说，字符串 "aeiou" 和 "aaaaaaeiiiioou" 都是
美丽的 ，但是 "uaeio" ，"aeoiu" 和 "aaaeeeooo" 不是美丽的 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个只包含英文元音字母的字符串 word ，请你返回 word 中
最长美丽子字符串的长度 。如果不存在这样的子字符串，请返回 0 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

子字符串 是字符串中一个连续的字符序列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>word = "aeiaaio<strong>aaaaeiiiiouuu</strong>ooaauuaeiu"
  <b>输出：</b>13
  <b>解释：</b>最长子字符串是 "aaaaeiiiiouuu" ，长度为 13 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>word = "aeeeiiiioooauuu<strong>aeiou</strong>"
  <b>输出：</b>5
  <b>解释：</b>最长子字符串是 "aeiou" ，长度为 5 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>word = "a"
  <b>输出：</b>0
  <b>解释：</b>没有美丽子字符串，所以返回 0 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word.length <= 5 * 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word 只包含字符 'a'，'e'，'i'，'o' 和 'u' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
