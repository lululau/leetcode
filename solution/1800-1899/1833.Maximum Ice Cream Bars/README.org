* [[https://leetcode-cn.com/problems/maximum-ice-cream-bars][1833.
雪糕的最大数量]]
  :PROPERTIES:
  :CUSTOM_ID: 雪糕的最大数量
  :END:
[[./solution/1800-1899/1833.Maximum Ice Cream Bars/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

夏日炎炎，小男孩 Tony 想买一些雪糕消消暑。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

商店中新到 n 支雪糕，用长度为 n 的数组 costs 表示雪糕的定价，其中
costs[i] 表示第 i 支雪糕的现金价格。Tony 一共有 coins
现金可以用于消费，他想要买尽可能多的雪糕。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你价格数组 costs 和现金量 coins ，请你计算并返回 Tony 用 coins
现金能够买到的雪糕的 最大数量 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：Tony 可以按任意顺序购买雪糕。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>costs = [1,3,2,4,1], coins = 7
  <strong>输出：</strong>4
  <strong>解释：</strong>Tony 可以买下标为 0、1、2、4 的雪糕，总价为 1 + 3 + 2 + 1 = 7
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>costs = [10,6,8,7,7,8], coins = 5
  <strong>输出：</strong>0
  <strong>解释：</strong>Tony 没有足够的钱买任何一支雪糕。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>costs = [1,6,3,1,2,5], coins = 20
  <strong>输出：</strong>6
  <strong>解释：</strong>Tony 可以买下所有的雪糕，总价为 1 + 6 + 3 + 1 + 2 + 5 = 18 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

costs.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= costs[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= coins <= 108

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
