* [[https://leetcode.com/problems/maximum-ice-cream-bars][1833. Maximum
Ice Cream Bars]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-ice-cream-bars
  :END:
[[./solution/1800-1899/1833.Maximum Ice Cream Bars/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

It is a sweltering summer day, and a boy wants to buy some ice cream
bars.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

At the store, there are n ice cream bars. You are given an array costs
of length n, where costs[i] is the price of the ith ice cream bar in
coins. The boy initially has coins coins to spend, and he wants to buy
as many ice cream bars as possible. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum number of ice cream bars the boy can buy with coins
coins.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: The boy can buy the ice cream bars in any order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> costs = [1,3,2,4,1], coins = 7
  <strong>Output:</strong> 4
  <strong>Explanation: </strong>The boy can buy ice cream bars at indices 0,1,2,4 for a total price of 1 + 3 + 2 + 1 = 7.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> costs = [10,6,8,7,7,8], coins = 5
  <strong>Output:</strong> 0
  <strong>Explanation: </strong>The boy cannot afford any of the ice cream bars.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> costs = [1,6,3,1,2,5], coins = 20
  <strong>Output:</strong> 6
  <strong>Explanation: </strong>The boy can buy all the ice cream bars for a total price of 1 + 6 + 3 + 1 + 2 + 5 = 18.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

costs.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= costs[i] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= coins <= 108

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
