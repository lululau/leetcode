* [[https://leetcode-cn.com/problems/minimum-xor-sum-of-two-arrays][1879.
两个数组最小的异或值之和]]
  :PROPERTIES:
  :CUSTOM_ID: 两个数组最小的异或值之和
  :END:
[[./solution/1800-1899/1879.Minimum XOR Sum of Two Arrays/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个整数数组 nums1 和 nums2 ，它们长度都为 n 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

两个数组的 异或值之和 为 (nums1[0] XOR nums2[0]) + (nums1[1] XOR
nums2[1]) + ... + (nums1[n - 1] XOR nums2[n - 1]) （下标从 0 开始）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

比方说，[1,2,3] 和 [3,2,1] 的 异或值之和 等于 (1 XOR 3) + (2 XOR 2) + (3
XOR 1) = 2 + 0 + 2 = 4 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请你将 nums2 中的元素重新排列，使得 异或值之和 最小 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回重新排列之后的 异或值之和 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>nums1 = [1,2], nums2 = [2,3]
  <b>输出：</b>2
  <b>解释：</b>将 <code>nums2</code> 重新排列得到 <code>[3,2] 。</code>
  异或值之和为 (1 XOR 3) + (2 XOR 2) = 2 + 0 = 2 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><b>输入：</b>nums1 = [1,0,3], nums2 = [5,3,4]
  <b>输出：</b>8
  <b>解释：</b>将 <code>nums2 重新排列得到</code> <code>[5,4,3] 。</code>
  异或值之和为 (1 XOR 5) + (0 XOR 4) + (3 XOR 3) = 4 + 4 + 0 = 8 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == nums1.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == nums2.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 14

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums1[i], nums2[i] <= 107

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
