* [[https://leetcode.com/problems/maximum-value-at-a-given-index-in-a-bounded-array][1802.
Maximum Value at a Given Index in a Bounded Array]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-value-at-a-given-index-in-a-bounded-array
  :END:
[[./solution/1800-1899/1802.Maximum Value at a Given Index in a Bounded Array/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given three positive integers: n, index, and maxSum. You want to
construct an array nums (0-indexed) that satisfies the following
conditions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[i] is a positive integer where 0 <= i < n.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

abs(nums[i] - nums[i+1]) <= 1 where 0 <= i < n-1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The sum of all the elements of nums does not exceed maxSum.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[index] is maximized.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return nums[index] of the constructed array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that abs(x) equals x if x >= 0, and -x otherwise.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, index = 2,  maxSum = 6
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> nums = [1,2,<u><strong>2</strong></u>,1] is one array that satisfies all the conditions.
  There are no arrays that satisfy all the conditions and have nums[2] == 3, so 2 is the maximum nums[2].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 6, index = 1,  maxSum = 10
  <strong>Output:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= maxSum <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= index < n

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
