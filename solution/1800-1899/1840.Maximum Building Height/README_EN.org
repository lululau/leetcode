* [[https://leetcode.com/problems/maximum-building-height][1840. Maximum
Building Height]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-building-height
  :END:
[[./solution/1800-1899/1840.Maximum Building Height/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You want to build n new buildings in a city. The new buildings will be
built in a line and are labeled from 1 to n.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

However, there are city restrictions on the heights of the new
buildings:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The height of each building must be a non-negative integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The height of the first building must be 0.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The height difference between any two adjacent buildings cannot exceed
1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Additionally, there are city restrictions on the maximum height of
specific buildings. These restrictions are given as a 2D integer array
restrictions where restrictions[i] = [idi, maxHeighti] indicates that
building idi must have a height less than or equal to maxHeighti.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It is guaranteed that each building will appear at most once in
restrictions, and building 1 will not be in restrictions.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum possible height of the tallest building.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, restrictions = [[2,1],[4,1]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> The green area in the image indicates the maximum allowed height for each building.
  We can build the buildings with heights [0,1,2,1,2], and the tallest building has a height of 2.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 6, restrictions = []
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The green area in the image indicates the maximum allowed height for each building.
  We can build the buildings with heights [0,1,2,3,4,5], and the tallest building has a height of 5.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 10, restrictions = [[5,3],[2,5],[7,4],[10,3]]
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The green area in the image indicates the maximum allowed height for each building.
  We can build the buildings with heights [0,1,2,3,3,4,4,5,4,3], and the tallest building has a height of 5.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= restrictions.length <= min(n - 1, 105)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= idi <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

idi is unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= maxHeighti <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
