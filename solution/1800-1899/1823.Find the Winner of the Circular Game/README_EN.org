* [[https://leetcode.com/problems/find-the-winner-of-the-circular-game][1823.
Find the Winner of the Circular Game]]
  :PROPERTIES:
  :CUSTOM_ID: find-the-winner-of-the-circular-game
  :END:
[[./solution/1800-1899/1823.Find the Winner of the Circular Game/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are n friends that are playing a game. The friends are sitting in
a circle and are numbered from 1 to n in clockwise order. More formally,
moving clockwise from the ith friend brings you to the (i+1)th friend
for 1 <= i < n, and moving clockwise from the nth friend brings you to
the 1st friend.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The rules of the game are as follows:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

Start at the 1st friend.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Count the next k friends in the clockwise direction including the friend
you started at. The counting wraps around the circle and may count some
friends more than once.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The last friend you counted leaves the circle and loses the game.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If there is still more than one friend in the circle, go back to step 2
starting from the friend immediately clockwise of the friend who just
lost and repeat.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Else, the last friend in the circle wins the game.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

Given the number of friends, n, and an integer k, return the winner of
the game.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = 5, k = 2

  <strong>Output:</strong> 3

  <strong>Explanation:</strong> Here are the steps of the game:

  1) Start at friend 1.

  2) Count 2 friends clockwise, which are friends 1 and 2.

  3) Friend 2 leaves the circle. Next start is friend 3.

  4) Count 2 friends clockwise, which are friends 3 and 4.

  5) Friend 4 leaves the circle. Next start is friend 5.

  6) Count 2 friends clockwise, which are friends 5 and 1.

  7) Friend 1 leaves the circle. Next start is friend 3.

  8) Count 2 friends clockwise, which are friends 3 and 5.

  9) Friend 5 leaves the circle. Only friend 3 is left, so they are the winner.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = 6, k = 5

  <strong>Output:</strong> 1

  <strong>Explanation:</strong> The friends leave in this order: 5, 4, 6, 2, 3. The winner is friend 1.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
