* [[https://leetcode.com/problems/replace-all-digits-with-characters][1844.
Replace All Digits with Characters]]
  :PROPERTIES:
  :CUSTOM_ID: replace-all-digits-with-characters
  :END:
[[./solution/1800-1899/1844.Replace All Digits with Characters/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a 0-indexed string s that has lowercase English letters in
its even indices and digits in its odd indices.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

There is a function shift(c, x), where c is a character and x is a
digit, that returns the xth character after c.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

For example, shift('a', 5) = 'f' and shift('x', 0) = 'x'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

For every odd index i, you want to replace the digit s[i] with
shift(s[i-1], s[i]).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return s after replacing all digits. It is guaranteed that shift(s[i-1],
s[i]) will never exceed 'z'.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;a1c1e1&quot;
  <strong>Output:</strong> &quot;abcdef&quot;
  <strong>Explanation: </strong>The digits are replaced as follows:
  - s[1] -&gt; shift(&#39;a&#39;,1) = &#39;b&#39;
  - s[3] -&gt; shift(&#39;c&#39;,1) = &#39;d&#39;
  - s[5] -&gt; shift(&#39;e&#39;,1) = &#39;f&#39;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;a1b2c3d4e&quot;
  <strong>Output:</strong> &quot;abbdcfdhe&quot;
  <strong>Explanation: </strong>The digits are replaced as follows:
  - s[1] -&gt; shift(&#39;a&#39;,1) = &#39;b&#39;
  - s[3] -&gt; shift(&#39;b&#39;,2) = &#39;d&#39;
  - s[5] -&gt; shift(&#39;c&#39;,3) = &#39;f&#39;
  - s[7] -&gt; shift(&#39;d&#39;,4) = &#39;h&#39;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists only of lowercase English letters and digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

shift(s[i-1], s[i]) <= 'z' for all odd indices i.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def replaceDigits(self, s: str) -> str:
          s = list(s)
          for i in range(1, len(s), 2):
              s[i] = chr(ord(s[i - 1]) + int(s[i]))
          return ''.join(s)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public String replaceDigits(String s) {
          char[] chars = s.toCharArray();
          for (int i = 1; i < chars.length; i += 2) {
              chars[i] = (char) (chars[i - 1] + (chars[i] - '0'));
          }
          return new String(chars);
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
