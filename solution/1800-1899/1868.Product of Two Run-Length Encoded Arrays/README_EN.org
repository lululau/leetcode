* [[https://leetcode.com/problems/product-of-two-run-length-encoded-arrays][1868.
Product of Two Run-Length Encoded Arrays]]
  :PROPERTIES:
  :CUSTOM_ID: product-of-two-run-length-encoded-arrays
  :END:
[[./solution/1800-1899/1868.Product of Two Run-Length Encoded Arrays/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Run-length encoding is a compression algorithm that allows for an
integer array nums with many segments of consecutive repeated numbers to
be represented by a (generally smaller) 2D array encoded. Each
encoded[i] = [vali, freqi] describes the ith segment of repeated numbers
in nums where vali is the value that is repeated freqi times.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

For example, nums = [1,1,1,2,2,2,2,2] is represented by the run-length
encoded array encoded = [[1,3],[2,5]]. Another way to read this is
"three 1s followed by five 2s".

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The product of two run-length encoded arrays encoded1 and encoded2 can
be calculated using the following steps:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

Expand both encoded1 and encoded2 into the full arrays nums1 and nums2
respectively.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Create a new array prodNums of length nums1.length and set prodNums[i] =
nums1[i] * nums2[i].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Compress prodNums into a run-length encoded array and return it.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

You are given two run-length encoded arrays encoded1 and encoded2
representing full arrays nums1 and nums2 respectively. Both nums1 and
nums2 have the same length. Each encoded1[i] = [vali, freqi] describes
the ith segment of nums1, and each encoded2[j] = [valj, freqj] describes
the jth segment of nums2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the product of encoded1 and encoded2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: Compression should be done such that the run-length encoded array
has the minimum possible length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> encoded1 = [[1,3],[2,3]], encoded2 = [[6,3],[3,3]]
  <strong>Output:</strong> [[6,6]]
  <strong>Explanation:</strong> encoded1 expands to [1,1,1,2,2,2] and encoded2 expands to [6,6,6,3,3,3].
  prodNums = [6,6,6,6,6,6], which is compressed into the run-length encoded array [[6,6]].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> encoded1 = [[1,3],[2,1],[3,2]], encoded2 = [[2,3],[3,3]]
  <strong>Output:</strong> [[2,3],[6,1],[9,2]]
  <strong>Explanation:</strong> encoded1 expands to [1,1,1,2,3,3] and encoded2 expands to [2,2,2,3,3,3].
  prodNums = [2,2,2,6,9,9], which is compressed into the run-length encoded array [[2,3],[6,1],[9,2]].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= encoded1.length, encoded2.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

encoded1[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

encoded2[j].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= vali, freqi <= 104 for each encoded1[i].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= valj, freqj <= 104 for each encoded2[j].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The full arrays that encoded1 and encoded2 represent are the same
length.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
