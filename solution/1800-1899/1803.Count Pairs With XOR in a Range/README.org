* [[https://leetcode-cn.com/problems/count-pairs-with-xor-in-a-range][1803.
统计异或值在范围内的数对有多少]]
  :PROPERTIES:
  :CUSTOM_ID: 统计异或值在范围内的数对有多少
  :END:
[[./solution/1800-1899/1803.Count Pairs With XOR in a Range/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums （下标 从 0 开始 计数）以及两个整数：low 和 high
，请返回 漂亮数对 的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

漂亮数对 是一个形如 (i, j) 的数对，其中 0 <= i < j < nums.length 且 low
<= (nums[i] XOR nums[j]) <= high 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [1,4,2,7], low = 2, high = 6
  <strong>输出：</strong>6
  <strong>解释：</strong>所有漂亮数对 (i, j) 列出如下：
      - (0, 1): nums[0] XOR nums[1] = 5 
      - (0, 2): nums[0] XOR nums[2] = 3
      - (0, 3): nums[0] XOR nums[3] = 6
      - (1, 2): nums[1] XOR nums[2] = 6
      - (1, 3): nums[1] XOR nums[3] = 3
      - (2, 3): nums[2] XOR nums[3] = 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [9,8,4,2,1], low = 5, high = 14
  <strong>输出：</strong>8
  <strong>解释：</strong>所有漂亮数对 (i, j) 列出如下：
  ​​​​​    - (0, 2): nums[0] XOR nums[2] = 13
      - (0, 3): nums[0] XOR nums[3] = 11
      - (0, 4): nums[0] XOR nums[4] = 8
      - (1, 2): nums[1] XOR nums[2] = 12
      - (1, 3): nums[1] XOR nums[3] = 10
      - (1, 4): nums[1] XOR nums[4] = 9
      - (2, 3): nums[2] XOR nums[3] = 6
      - (2, 4): nums[2] XOR nums[4] = 5</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= low <= high <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
