* [[https://leetcode.com/problems/maximum-number-of-accepted-invitations][1820.
Maximum Number of Accepted Invitations]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-number-of-accepted-invitations
  :END:
[[./solution/1800-1899/1820.Maximum Number of Accepted Invitations/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are m boys and n girls in a class attending an upcoming party.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given an m x n integer matrix grid, where grid[i][j] equals 0 or
1. If grid[i][j] == 1, then that means the ith boy can invite the jth
girl to the party. A boy can invite at most one girl, and a girl can
accept at most one invitation from a boy.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum possible number of accepted invitations.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,1],
                 [1,0,1],
                 [0,0,1]]
  <strong>Output:</strong> 3<strong>
  Explanation:</strong> The invitations are sent as follows:
  - The 1<sup>st</sup> boy invites the 2<sup>nd</sup> girl.
  - The 2<sup>nd</sup> boy invites the 1<sup>st</sup> girl.
  - The 3<sup>rd</sup> boy invites the 3<sup>rd</sup> girl.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,0,1,0],
                 [1,0,0,0],
                 [0,0,1,0],
                 [1,1,1,0]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> The invitations are sent as follows:
  -The 1<sup>st</sup> boy invites the 3<sup>rd</sup> girl.
  -The 2<sup>nd</sup> boy invites the 1<sup>st</sup> girl.
  -The 3<sup>rd</sup> boy invites no one.
  -The 4<sup>th</sup> boy invites the 2<sup>nd</sup> girl.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

grid.length == m

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i].length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i][j] is either 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
