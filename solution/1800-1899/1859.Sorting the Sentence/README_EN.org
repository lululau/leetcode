* [[https://leetcode.com/problems/sorting-the-sentence][1859. Sorting
the Sentence]]
  :PROPERTIES:
  :CUSTOM_ID: sorting-the-sentence
  :END:
[[./solution/1800-1899/1859.Sorting the Sentence/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A sentence is a list of words that are separated by a single space with
no leading or trailing spaces. Each word consists of lowercase and
uppercase English letters.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A sentence can be shuffled by appending the 1-indexed word position to
each word then rearranging the words in the sentence.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

For example, the sentence "This is a sentence" can be shuffled as
"sentence4 a3 is2 This1" or "is2 sentence4 This1 a3".

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Given a shuffled sentence s containing no more than 9 words, reconstruct
and return the original sentence.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;is2 sentence4 This1 a3&quot;

  <strong>Output:</strong> &quot;This is a sentence&quot;

  <strong>Explanation:</strong> Sort the words in s to their original positions &quot;This1 is2 a3 sentence4&quot;, then remove the numbers.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;Myself2 Me1 I4 and3&quot;

  <strong>Output:</strong> &quot;Me Myself and I&quot;

  <strong>Explanation:</strong> Sort the words in s to their original positions &quot;Me1 Myself2 and3 I4&quot;, then remove the numbers.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= s.length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of lowercase and uppercase English letters, spaces, and
digits from 1 to 9.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The number of words in s is between 1 and 9.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The words in s are separated by a single space.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s contains no leading or trailing spaces.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def sortSentence(self, s: str) -> str:
          words = s.split(' ')
          arr = [None] * len(words)
          for word in words:
              idx = int(word[-1]) - 1
              arr[idx] = word[:-1]
          return ' '.join(arr)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public String sortSentence(String s) {
          String[] words = s.split(" ");
          String[] arr = new String[words.length];
          for (String word : words) {
              int idx = word.charAt(word.length() - 1) - '0' - 1;
              arr[idx] = word.substring(0, word.length() - 1);
          }
          return String.join(" ", arr);
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {string} s
   * @return {string}
   */
  var sortSentence = function(s) {
      let words = s.split(' ');
      let n = words.length;
      let res = new Array(n);
      for (let word of words) {
          let key = word.slice(-1);
          let val = word.slice(0, -1);
          res[parseInt(key) - 1] = val;
      }
      return res.join(' ');
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
