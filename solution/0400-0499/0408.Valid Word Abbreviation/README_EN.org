* [[https://leetcode.com/problems/valid-word-abbreviation][408. Valid
Word Abbreviation]]
  :PROPERTIES:
  :CUSTOM_ID: valid-word-abbreviation
  :END:
[[./solution/0400-0499/0408.Valid Word Abbreviation/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A string can be abbreviated by replacing any number of non-adjacent
substrings with their lengths. For example, a string such as
"substitution" could be abbreviated as (but not limited to):

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

"s10n" ("s ubstitutio n")

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"sub4u4" ("sub stit u tion")

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"12" ("substitution")

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"su3i1u2on" ("su bst i t u ti on")

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"substitution" (no substrings replaced)

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Note that "s55n" ("s ubsti tutio n") is not a valid abbreviation of
"substitution" because the replaced substrings are adjacent.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given a string s and an abbreviation abbr, return whether the string
matches with the given abbreviation.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> word = "internationalization", abbr = "i12iz4n"
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> word = "apple", abbr = "a2e"
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word.length, abbr.length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word consists of only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

abbr consists of lowercase English letters and digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
