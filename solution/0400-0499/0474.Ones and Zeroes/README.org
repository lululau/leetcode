* [[https://leetcode-cn.com/problems/ones-and-zeroes][474. 一和零]]
  :PROPERTIES:
  :CUSTOM_ID: 一和零
  :END:
[[./solution/0400-0499/0474.Ones and Zeroes/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个二进制字符串数组 strs 和两个整数 m 和 n 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p class="MachineTrans-lang-zh-CN">
#+end_html

请你找出并返回 strs 的最大子集的大小，该子集中 最多 有 m 个 0 和 n 个 1
。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p class="MachineTrans-lang-zh-CN">
#+end_html

如果 x 的所有元素也是 y 的元素，集合 x 是集合 y 的 子集 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>strs = ["10", "0001", "111001", "1", "0"], m = 5, n = 3
  <strong>输出：</strong>4
  <strong>解释：</strong>最多有 5 个 0 和 3 个 1 的最大子集是 {"10","0001","1","0"} ，因此答案是 4 。
  其他满足题意但较小的子集包括 {"0001","1"} 和 {"10","1","0"} 。{"111001"} 不满足题意，因为它含 4 个 1 ，大于 n 的值 3 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>strs = ["10", "0", "1"], m = 1, n = 1
  <strong>输出：</strong>2
  <strong>解释：</strong>最大的子集是 {"0", "1"} ，所以答案是 2 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs.length <= 600

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs[i].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

strs[i] 仅由 '0' 和 '1' 组成

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
