* [[https://leetcode-cn.com/problems/optimal-account-balancing][465.
最优账单平衡]]
  :PROPERTIES:
  :CUSTOM_ID: 最优账单平衡
  :END:
[[./solution/0400-0499/0465.Optimal Account Balancing/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

一群朋友在度假期间会相互借钱。比如说，小爱同学支付了小新同学的午餐共计
10 美元。如果小明同学支付了小爱同学的出租车钱共计 5
美元。我们可以用一个三元组 (x, y, z) 表示一次交易，表示 x 借给 y 共计 z
美元。用 0, 1, 2 表示小爱同学、小新同学和小明同学（0, 1, 2
为人的标号），上述交易可以表示为 [[0, 1, 10], [2, 0, 5]]。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一群人之间的交易信息列表，计算能够还清所有债务的最小次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

一次交易会以三元组 (x, y, z) 表示，并有 x ≠ y 且 z > 0。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

人的标号可能不是按顺序的，例如标号可能为 0, 1, 2 也可能为 0, 2, 6。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  [[0,1,10], [2,0,5]]

  <strong>输出：</strong>
  2

  <strong>解释：</strong>
  人 #0 给人 #1 共计 10 美元。
  人 #2 给人 #0 共计 5 美元。

  需要两次交易。一种方式是人 #1 分别给人 #0 和人 #2 各 5 美元。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  [[0,1,10], [1,0,1], [1,2,5], [2,0,5]]

  <strong>输出：</strong>
  1

  <strong>解释：</strong>
  人 #0 给人 #1 共计 10 美元。Person #0 gave person #1 $10.
  人 #1 给人 #0 共计 1 美元。Person #1 gave person #0 $1.
  人 #1 给人 #2 共计 5 美元。Person #1 gave person #2 $5.
  人 #2 给人 #0 共计 5 美元。Person #2 gave person #0 $5.

  因此，人 #1 需要给人 #0 共计 4 美元，所有的债务即可还清。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
