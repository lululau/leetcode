* [[https://leetcode-cn.com/problems/delete-node-in-a-bst][450.
删除二叉搜索树中的节点]]
  :PROPERTIES:
  :CUSTOM_ID: 删除二叉搜索树中的节点
  :END:
[[./solution/0400-0499/0450.Delete Node in a BST/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个二叉搜索树的根节点 root 和一个值
key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一般来说，删除节点可分为两个步骤：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

首先找到需要删除的节点；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果找到了，删除它。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

说明： 要求算法时间复杂度为 O(h)，h 为树的高度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  root = [5,3,6,2,4,null,7]
  key = 3

      5
     / \
    3   6
   / \   \
  2   4   7

  给定需要删除的节点值是 3，所以我们首先找到 3 这个节点，然后删除它。

  一个正确的答案是 [5,4,6,2,null,null,7], 如下图所示。

      5
     / \
    4   6
   /     \
  2       7

  另一个正确答案是 [5,2,6,null,4,null,7]。

      5
     / \
    2   6
     \   \
      4   7
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
