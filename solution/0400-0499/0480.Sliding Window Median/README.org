* [[https://leetcode-cn.com/problems/sliding-window-median][480.
滑动窗口中位数]]
  :PROPERTIES:
  :CUSTOM_ID: 滑动窗口中位数
  :END:
[[./solution/0400-0499/0480.Sliding Window Median/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

中位数是有序序列最中间的那个数。如果序列的长度是偶数，则没有最中间的数；此时中位数是最中间的两个数的平均数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

例如：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

[2,3,4]，中位数是 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

[2,3]，中位数是 (2 + 3) / 2 = 2.5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 nums，有一个长度为 k 的窗口从最左端滑动到最右端。窗口中有 k
个数，每次窗口向右移动 1
位。你的任务是找出每次窗口移动后得到的新窗口中元素的中位数，并输出由它们组成的数组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给出 nums = [1,3,-1,-3,5,3,6,7]，以及 k = 3。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  窗口位置                      中位数
  ---------------               -----
  [1  3  -1] -3  5  3  6  7       1
   1 [3  -1  -3] 5  3  6  7      -1
   1  3 [-1  -3  5] 3  6  7      -1
   1  3  -1 [-3  5  3] 6  7       3
   1  3  -1  -3 [5  3  6] 7       5
   1  3  -1  -3  5 [3  6  7]      6
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 因此，返回该滑动窗口的中位数数组 [1,-1,-1,3,5,6]。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

你可以假设 k 始终有效，即：k 始终小于等于输入的非空数组的元素个数。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

与真实值误差在 10 ^ -5 以内的答案将被视作正确答案。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
