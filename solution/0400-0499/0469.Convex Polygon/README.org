* [[https://leetcode-cn.com/problems/convex-polygon][469. 凸多边形]]
  :PROPERTIES:
  :CUSTOM_ID: 凸多边形
  :END:
[[./solution/0400-0499/0469.Convex Polygon/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个按顺序连接的多边形的顶点，判断该多边形是否为凸多边形。（凸多边形的定义）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

顶点个数至少为 3 个且不超过 10,000。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

坐标范围为 -10,000 到 10,000。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

你可以假定给定的点形成的多边形均为简单多边形（简单多边形的定义）。换句话说，保证每个顶点处恰好是两条边的汇合点，并且这些边 互不相交 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>[[0,0],[0,1],[1,1],[1,0]]

  输出： True

  解释：<img src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0400-0499/0469.Convex Polygon/images/polygon_convex.png" style="height: 100px; width: 100px;">
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>[[0,0],[0,10],[10,10],[10,0],[5,5]]

  输出： False

  解释：<img src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0400-0499/0469.Convex Polygon/images/polygon_not_convex.png" style="height: 100px; width: 100px;">
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
