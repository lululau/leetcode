* [[https://leetcode-cn.com/problems/arithmetic-slices-ii-subsequence][446.
等差数列划分 II - 子序列]]
  :PROPERTIES:
  :CUSTOM_ID: 等差数列划分-ii---子序列
  :END:
[[./solution/0400-0499/0446.Arithmetic Slices II - Subsequence/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

如果一个数列至少有三个元素，并且任意两个相邻元素之差相同，则称该数列为等差数列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

例如，以下数列为等差数列:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  1, 3, 5, 7, 9
  7, 7, 7, 7
  3, -1, -5, -9</pre>
#+end_html

#+begin_html
  <p>
#+end_html

以下数列不是等差数列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  1, 1, 2, 5, 7</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

数组 A 包含 N 个数，且索引从 0 开始。该数组子序列将划分为整数序列 (P0,
P1, ..., Pk)，满足 0 ≤ P0 < P1 < ... < Pk < N。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果序列 A[P0]，A[P1]，...，A[Pk-1]，A[Pk] 是等差的，那么数组 A 的子序列
(P0，P1，...，PK) 称为等差序列。值得注意的是，这意味着 k ≥ 2。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

函数要返回数组 A 中所有等差子序列的个数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输入包含 N 个整数。每个整数都在 -231 和 231-1 之间，另外 0 ≤ N ≤
1000。保证输出小于 231-1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>[2, 4, 6, 8, 10]

  <strong>输出：</strong>7

  <strong>解释：</strong>
  所有的等差子序列为：
  [2,4,6]
  [4,6,8]
  [6,8,10]
  [2,4,6,8]
  [4,6,8,10]
  [2,4,6,8,10]
  [2,6,10]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
