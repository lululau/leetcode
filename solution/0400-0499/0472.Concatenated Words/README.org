* [[https://leetcode-cn.com/problems/concatenated-words][472. 连接词]]
  :PROPERTIES:
  :CUSTOM_ID: 连接词
  :END:
[[./solution/0400-0499/0472.Concatenated Words/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个 不含重复 单词的字符串数组 words ，编写一个程序，返回 words
中的所有 连接词 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

连接词 的定义为：一个字符串完全是由至少两个给定数组中的单词组成的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>words = ["cat","cats","catsdogcats","dog","dogcatsdog","hippopotamuses","rat","ratcatdogcat"]
  <strong>输出：</strong>["catsdogcats","dogcatsdog","ratcatdogcat"]
  <strong>解释：</strong>"catsdogcats"由"cats", "dog" 和 "cats"组成; 
       "dogcatsdog"由"dog", "cats"和"dog"组成; 
       "ratcatdogcat"由"rat", "cat", "dog"和"cat"组成。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>words = ["cat","dog","catdog"]
  <strong>输出：</strong>["catdog"]</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= words[i].length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i] 仅由小写字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= sum(words[i].length) <= 6 * 105

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
