* [[https://leetcode.com/problems/sequence-reconstruction][444. Sequence
Reconstruction]]
  :PROPERTIES:
  :CUSTOM_ID: sequence-reconstruction
  :END:
[[./solution/0400-0499/0444.Sequence Reconstruction/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Check whether the original sequence org can be uniquely reconstructed
from the sequences in seqs. The org sequence is a permutation of the
integers from 1 to n, with 1 ≤ n ≤ 104. Reconstruction means building a
shortest common supersequence of the sequences in seqs (i.e., a shortest
sequence so that all sequences in seqs are subsequences of it).
Determine whether there is only one sequence that can be reconstructed
from seqs and it is the org sequence.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> org = [1,2,3], seqs = [[1,2],[1,3]]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> [1,2,3] is not the only one sequence that can be reconstructed, because [1,3,2] is also a valid sequence that can be reconstructed.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> org = [1,2,3], seqs = [[1,2]]
  <strong>Output:</strong> false
  <strong>Explanation:</strong> The reconstructed sequence can only be [1,2].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> org = [1,2,3], seqs = [[1,2],[1,3],[2,3]]
  <strong>Output:</strong> true
  <strong>Explanation:</strong> The sequences [1,2], [1,3], and [2,3] can uniquely reconstruct the original sequence [1,2,3].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> org = [4,1,5,2,6,3], seqs = [[5,2,6,3],[4,1,5,2]]
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

org is a permutation of {1,2,...,n}.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= segs[i].length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

seqs[i][j] fits in a 32-bit signed integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

UPDATE (2017/1/8): The seqs parameter had been changed to a list of list
of strings (instead of a 2d array of strings). Please reload the code
definition to get the latest changes.

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
