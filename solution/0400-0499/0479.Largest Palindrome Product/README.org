* [[https://leetcode-cn.com/problems/largest-palindrome-product][479.
最大回文数乘积]]
  :PROPERTIES:
  :CUSTOM_ID: 最大回文数乘积
  :END:
[[./solution/0400-0499/0479.Largest Palindrome Product/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你需要找到由两个 n 位数的乘积组成的最大回文数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

由于结果会很大，你只需返回最大回文数 mod 1337得到的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输入: 2

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输出: 987

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

解释: 99 x 91 = 9009, 9009 % 1337 = 987

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

n 的取值范围为 [1,8]。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
