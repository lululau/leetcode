* [[https://leetcode.com/problems/license-key-formatting][482. License
Key Formatting]]
  :PROPERTIES:
  :CUSTOM_ID: license-key-formatting
  :END:
[[./solution/0400-0499/0482.License Key Formatting/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a license key represented as a string s that consists of
only alphanumeric characters and dashes. The string is separated into n
+ 1 groups by n dashes. You are also given an integer k.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We want to reformat the string s such that each group contains exactly k
characters, except for the first group, which could be shorter than k
but still must contain at least one character. Furthermore, there must
be a dash inserted between two groups, and you should convert all
lowercase letters to uppercase.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the reformatted license key.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;5F3Z-2e-9-w&quot;, k = 4
  <strong>Output:</strong> &quot;5F3Z-2E9W&quot;
  <strong>Explanation:</strong> The string s has been split into two parts, each part has 4 characters.
  Note that the two extra dashes are not needed and can be removed.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;2-5g-3-J&quot;, k = 2
  <strong>Output:</strong> &quot;2-5G-3J&quot;
  <strong>Explanation:</strong> The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of English letters, digits, and dashes '-'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
