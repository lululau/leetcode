* [[https://leetcode-cn.com/problems/license-key-formatting][482.
密钥格式化]]
  :PROPERTIES:
  :CUSTOM_ID: 密钥格式化
  :END:
[[./solution/0400-0499/0482.License Key Formatting/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有一个密钥字符串 S ，只包含字母，数字以及 '-'（破折号）。其中， N 个 '-'
将字符串分成了 N+1 组。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数字 K，请你重新格式化字符串，使每个分组恰好包含 K
个字符。特别地，第一个分组包含的字符个数必须小于等于 K，但至少要包含 1
个字符。两个分组之间需要用
'-'（破折号）隔开，并且将所有的小写字母转换为大写字母。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定非空字符串 S 和数字 K，按照上面描述的规则进行格式化。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>S = &quot;5F3Z-2e-9-w&quot;, K = 4
  <strong>输出：</strong>&quot;5F3Z-2E9W&quot;
  <strong>解释：</strong>字符串 S 被分成了两个部分，每部分 4 个字符；
  &nbsp;    注意，两个额外的破折号需要删掉。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>S = &quot;2-5g-3-J&quot;, K = 2
  <strong>输出：</strong>&quot;2-5G-3J&quot;
  <strong>解释：</strong>字符串 S 被分成了 3 个部分，按照前面的规则描述，第一部分的字符可以少于给定的数量，其余部分皆为 2 个字符。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

S 的长度可能很长，请按需分配大小。K 为正整数。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S 只包含字母数字（a-z，A-Z，0-9）以及破折号'-'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S 非空

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
