* [[https://leetcode-cn.com/problems/magical-string][481. 神奇字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 神奇字符串
  :END:
[[./solution/0400-0499/0481.Magical String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

神奇的字符串 S 只包含 '1' 和 '2'，并遵守以下规则：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

字符串 S 是神奇的，因为串联字符 '1' 和 '2' 的连续出现次数会生成字符串 S
本身。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

字符串 S 的前几个元素如下：S = “1221121221221121122 ......”

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果我们将 S 中连续的 1 和 2 进行分组，它将变成：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

1 22 11 2 1 22 1 22 11 2 11 22 ......

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

并且每个组中 '1' 或 '2' 的出现次数分别是：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

1 2 2 1 1 2 1 2 2 1 2 2 ......

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以看到上面的出现次数就是 S 本身。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一个整数 N 作为输入，返回神奇字符串 S 中前 N 个数字中的 '1' 的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：N 不会超过 100,000。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>6
  <strong>输出：</strong>3
  <strong>解释：</strong>神奇字符串 S 的前 6 个元素是 &ldquo;12211&rdquo;，它包含三个 1，因此返回 3。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
