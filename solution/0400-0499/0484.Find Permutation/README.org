* [[https://leetcode-cn.com/problems/find-permutation][484. 寻找排列]]
  :PROPERTIES:
  :CUSTOM_ID: 寻找排列
  :END:
[[./solution/0400-0499/0484.Find Permutation/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

现在给定一个只由字符 'D' 和 'I' 组成的 秘密签名。'D'
表示两个数字间的递减关系，'I' 表示两个数字间的递增关系。并且 秘密签名
是由一个特定的整数数组生成的，该数组唯一地包含 1 到 n
中所有不同的数字（秘密签名的长度加 1 等于 n）。例如，秘密签名 "DI"
可以由数组 [2,1,3] 或 [3,1,2] 生成，但是不能由数组 [3,2,4] 或 [2,1,3,4]
生成，因为它们都不是合法的能代表 "DI" 秘密签名 的特定串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在你的任务是找到具有最小字典序的 [1, 2, ... n]
的排列，使其能代表输入的 秘密签名。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong> &quot;I&quot;
  <strong>输出：</strong> [1,2]
  <strong>解释：</strong> [1,2] 是唯一合法的可以生成秘密签名 &quot;I&quot; 的特定串，数字 1 和 2 构成递增关系。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong> &quot;DI&quot;
  <strong>输出：</strong> [2,1,3]
  <strong>解释：</strong> [2,1,3] 和 [3,1,2] 可以生成秘密签名 &quot;DI&quot;，
  但是由于我们要找字典序最小的排列，因此你需要输出 [2,1,3]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

输出字符串只会包含字符 'D' 和 'I'。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入字符串的长度是一个正整数且不会超过 10,000。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
