* [[https://leetcode-cn.com/problems/max-consecutive-ones][485. 最大连续
1 的个数]]
  :PROPERTIES:
  :CUSTOM_ID: 最大连续-1-的个数
  :END:
[[./solution/0400-0499/0485.Max Consecutive Ones/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个二进制数组， 计算其中最大连续 1 的个数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>[1,1,0,1,1,1]
  <strong>输出：</strong>3
  <strong>解释：</strong>开头的两位和最后的三位都是连续 1 ，所以最大连续 1 的个数是 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

输入的数组只包含 0 和 1 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入数组的长度是正整数，且不超过 10,000。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def findMaxConsecutiveOnes(self, nums: List[int]) -> int:
          res = t = 0
          for num in nums:
              if num == 1:
                  t += 1
              else:
                  res = max(res, t)
                  t = 0
          return max(res, t)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public int findMaxConsecutiveOnes(int[] nums) {
          int res = 0, t = 0;
          for (int num : nums) {
              if (num == 1) {
                  ++t;
              } else {
                  res = Math.max(res, t);
                  t = 0;
              }
          }
          return Math.max(res, t);
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[]} nums
   * @return {number}
   */
  var findMaxConsecutiveOnes = function (nums) {
    let res = 0,
      t = 0;
    for (let num of nums) {
      if (num == 1) {
        ++t;
      } else {
        res = Math.max(res, t);
        t = 0;
      }
    }
    return Math.max(res, t);
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
