* [[https://leetcode.com/problems/max-consecutive-ones][485. Max
Consecutive Ones]]
  :PROPERTIES:
  :CUSTOM_ID: max-consecutive-ones
  :END:
[[./solution/0400-0499/0485.Max Consecutive Ones/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a binary array nums, return the maximum number of consecutive 1's
in the array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,1,0,1,1,1]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,0,1,1,0,1]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[i] is either 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def findMaxConsecutiveOnes(self, nums: List[int]) -> int:
          res = t = 0
          for num in nums:
              if num == 1:
                  t += 1
              else:
                  res = max(res, t)
                  t = 0
          return max(res, t)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int findMaxConsecutiveOnes(int[] nums) {
          int res = 0, t = 0;
          for (int num : nums) {
              if (num == 1) {
                  ++t;
              } else {
                  res = Math.max(res, t);
                  t = 0;
              }
          }
          return Math.max(res, t);
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[]} nums
   * @return {number}
   */
  var findMaxConsecutiveOnes = function (nums) {
    let res = 0,
      t = 0;
    for (let num of nums) {
      if (num == 1) {
        ++t;
      } else {
        res = Math.max(res, t);
        t = 0;
      }
    }
    return Math.max(res, t);
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
