* [[https://leetcode.com/problems/number-complement][476. Number
Complement]]
  :PROPERTIES:
  :CUSTOM_ID: number-complement
  :END:
[[./solution/0400-0499/0476.Number Complement/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a positive integer num, output its complement number. The
complement strategy is to flip the bits of its binary representation.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> num = 5
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> num = 1
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The given integer num is guaranteed to fit within the range of a 32-bit
signed integer.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

num >= 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

You could assume no leading zero bit in the integer's binary
representation.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

This question is the same as
1009: https://leetcode.com/problems/complement-of-base-10-integer/

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
