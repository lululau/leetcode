* [[https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons][452.
Minimum Number of Arrows to Burst Balloons]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-arrows-to-burst-balloons
  :END:
[[./solution/0400-0499/0452.Minimum Number of Arrows to Burst Balloons/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are some spherical balloons spread in two-dimensional space. For
each balloon, provided input is the start and end coordinates of the
horizontal diameter. Since it's horizontal, y-coordinates don't matter,
and hence the x-coordinates of start and end of the diameter suffice.
The start is always smaller than the end.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

An arrow can be shot up exactly vertically from different points along
the x-axis. A balloon with xstart and xend bursts by an arrow shot at x
if xstart ≤ x ≤ xend. There is no limit to the number of arrows that can
be shot. An arrow once shot keeps traveling up infinitely.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an array points where points[i] = [xstart, xend], return the
minimum number of arrows that must be shot to burst all balloons.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> points = [[10,16],[2,8],[1,6],[7,12]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> One way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> points = [[1,2],[3,4],[5,6],[7,8]]
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> points = [[1,2],[2,3],[3,4],[4,5]]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= points.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

points[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-231 <= xstart < xend <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
