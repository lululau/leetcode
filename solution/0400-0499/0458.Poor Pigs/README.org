* [[https://leetcode-cn.com/problems/poor-pigs][458. 可怜的小猪]]
  :PROPERTIES:
  :CUSTOM_ID: 可怜的小猪
  :END:
[[./solution/0400-0499/0458.Poor Pigs/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有 buckets 桶液体，其中 正好
有一桶含有毒药，其余装的都是水。它们从外观看起来都一样。为了弄清楚哪只水桶含有毒药，你可以喂一些猪喝，通过观察猪是否会死进行判断。不幸的是，你只有 minutesToTest
分钟时间来确定哪桶液体是有毒的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

喂猪的规则如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

选择若干活猪进行喂养

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

可以允许小猪同时饮用任意数量的桶中的水，并且该过程不需要时间。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

小猪喝完水后，必须有 minutesToDie
分钟的冷却时间。在这段时间里，你只能观察，而不允许继续喂猪。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

过了 minutesToDie
分钟后，所有喝到毒药的猪都会死去，其他所有猪都会活下来。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

重复这一过程，直到时间用完。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

给你桶的数目 buckets ，minutesToDie 和 minutesToTest
，返回在规定时间内判断哪个桶有毒所需的 最小 猪数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>buckets = 1000, minutesToDie = 15, minutesToTest = 60
  <strong>输出：</strong>5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>buckets = 4, minutesToDie = 15, minutesToTest = 15
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>buckets = 4, minutesToDie = 15, minutesToTest = 30
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= buckets <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= minutesToDie <= minutesToTest <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
