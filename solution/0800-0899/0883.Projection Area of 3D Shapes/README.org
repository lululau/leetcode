* [[https://leetcode-cn.com/problems/projection-area-of-3d-shapes][883.
三维形体投影面积]]
  :PROPERTIES:
  :CUSTOM_ID: 三维形体投影面积
  :END:
[[./solution/0800-0899/0883.Projection Area of 3D Shapes/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在 N / N 的网格中，我们放置了一些与 x，y，z 三轴对齐的 1 / 1 *
1 立方体。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每个值 v = grid[i][j] 表示 v 个正方体叠放在单元格 (i, j) 上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在，我们查看这些立方体在 xy、yz 和 zx 平面上的投影。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

投影就像影子，将三维形体映射到一个二维平面上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在这里，从顶部、前面和侧面看立方体时，我们会看到“影子”。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回所有三个投影的总面积。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[2]]
  <strong>输出：</strong>5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[1,2],[3,4]]
  <strong>输出：</strong>17
  <strong>解释：</strong>
  这里有该形体在三个轴对齐平面上的三个投影(&ldquo;阴影部分&rdquo;)。
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0800-0899/0883.Projection Area of 3D Shapes/images/shadow.png" style="height: 200px; width: 749px;">
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[1,0],[0,2]]
  <strong>输出：</strong>8
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[1,1,1],[1,0,1],[1,1,1]]
  <strong>输出：</strong>14
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[2,2,2],[2,1,2],[2,2,2]]
  <strong>输出：</strong>21
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid.length = grid[0].length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= grid[i][j] <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
