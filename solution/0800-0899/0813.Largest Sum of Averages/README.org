* [[https://leetcode-cn.com/problems/largest-sum-of-averages][813.
最大平均值和的分组]]
  :PROPERTIES:
  :CUSTOM_ID: 最大平均值和的分组
  :END:
[[./solution/0800-0899/0813.Largest Sum of Averages/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

我们将给定的数组 A 分成 K 个相邻的非空子数组
，我们的分数由每个子数组内的平均值的总和构成。计算我们所能得到的最大分数是多少。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意我们必须使用 A 数组中的每一个数进行分组，并且分数不一定需要是整数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>示例:</strong>
  <strong>输入:</strong> 
  A = [9,1,2,3,9]
  K = 3
  <strong>输出:</strong> 20
  <strong>解释:</strong> 
  A 的最优分组是[9], [1, 2, 3], [9]. 得到的分数是 9 + (1 + 2 + 3) / 3 + 9 = 20.
  我们也可以把 A 分成[9, 1], [2], [3, 9].
  这样的分组得到的分数为 5 + 2 + 6 = 13, 但不是最大值.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 100.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A[i] <= 10000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= K <= A.length.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

答案误差在 10^-6 内被视为是正确的。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
