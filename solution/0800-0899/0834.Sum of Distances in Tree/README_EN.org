* [[https://leetcode.com/problems/sum-of-distances-in-tree][834. Sum of
Distances in Tree]]
  :PROPERTIES:
  :CUSTOM_ID: sum-of-distances-in-tree
  :END:
[[./solution/0800-0899/0834.Sum of Distances in Tree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

An undirected, connected tree with N nodes labelled 0...N-1 and N-1
edges are given.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The ith edge connects nodes edges[i][0] and edges[i][1] together.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return a list ans, where ans[i] is the sum of the distances between node
i and all other nodes.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]

  <strong>Output: </strong>[8,12,6,10,10,10]

  <strong>Explanation: </strong>

  Here is a diagram of the given tree:

    0

   / \

  1   2

     /|\

    3 4 5

  We can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)

  equals 1 + 1 + 2 + 2 + 2 = 8.  Hence, answer[0] = 8, and so on.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note: 1 <= N <= 10000

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
