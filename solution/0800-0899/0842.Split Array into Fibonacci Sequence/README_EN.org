* [[https://leetcode.com/problems/split-array-into-fibonacci-sequence][842.
Split Array into Fibonacci Sequence]]
  :PROPERTIES:
  :CUSTOM_ID: split-array-into-fibonacci-sequence
  :END:
[[./solution/0800-0899/0842.Split Array into Fibonacci Sequence/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string S of digits, such as S = "123456579", we can split it
into a Fibonacci-like sequence [123, 456, 579].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Formally, a Fibonacci-like sequence is a list F of non-negative integers
such that:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= F[i] <= 2^31 - 1, (that is, each integer fits a 32-bit signed
integer type);

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

F.length >= 3;

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

and F[i] + F[i+1] = F[i+2] for all 0 <= i < F.length - 2.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Also, note that when splitting the string into pieces, each piece must
not have extra leading zeroes, except if the piece is the number 0
itself.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return any Fibonacci-like sequence split from S, or return [] if it
cannot be done.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>&quot;123456579&quot;

  <strong>Output: </strong>[123,456,579]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>&quot;11235813&quot;

  <strong>Output: </strong>[1,1,2,3,5,8,13]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>&quot;112358130&quot;

  <strong>Output: </strong>[]

  <strong>Explanation: </strong>The task is impossible.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>&quot;0123&quot;

  <strong>Output: </strong>[]

  <strong>Explanation: </strong>Leading zeroes are not allowed, so &quot;01&quot;, &quot;2&quot;, &quot;3&quot; is not valid.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>&quot;1101111&quot;

  <strong>Output: </strong>[110, 1, 111]

  <strong>Explanation: </strong>The output [11, 0, 11, 11] would also be accepted.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= S.length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S contains only digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
