* [[https://leetcode-cn.com/problems/exam-room][855. 考场就座]]
  :PROPERTIES:
  :CUSTOM_ID: 考场就座
  :END:
[[./solution/0800-0899/0855.Exam Room/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在考场里，一排有 N 个座位，分别编号为 0, 1, 2, ..., N-1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

当学生进入考场后，他必须坐在能够使他与离他最近的人之间的距离达到最大化的座位上。如果有多个这样的座位，他会坐在编号最小的座位上。(另外，如果考场里没有人，那么学生就坐在
0 号座位上。)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回 ExamRoom(int
N) 类，它有两个公开的函数：其中，函数 ExamRoom.seat() 会返回一个 int （整型数据），代表学生坐的位置；函数 ExamRoom.leave(int
p) 代表坐在座位 p
上的学生现在离开了考场。每次调用 ExamRoom.leave(p) 时都保证有学生坐在座位 p 上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;], [[10],[],[],[],[],[4],[]]
  <strong>输出：</strong>[null,0,9,4,2,null,5]
  <strong>解释：</strong>
  ExamRoom(10) -&gt; null
  seat() -&gt; 0，没有人在考场里，那么学生坐在 0 号座位上。
  seat() -&gt; 9，学生最后坐在 9 号座位上。
  seat() -&gt; 4，学生最后坐在 4 号座位上。
  seat() -&gt; 2，学生最后坐在 2 号座位上。
  leave(4) -&gt; null
  seat() -&gt; 5，学生最后坐在 5 号座位上。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= N <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

在所有的测试样例中 ExamRoom.seat() 和 ExamRoom.leave() 最多被调用 10^4 次。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

保证在调用 ExamRoom.leave(p) 时有学生正坐在座位 p 上。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
