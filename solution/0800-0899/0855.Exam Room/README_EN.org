* [[https://leetcode.com/problems/exam-room][855. Exam Room]]
  :PROPERTIES:
  :CUSTOM_ID: exam-room
  :END:
[[./solution/0800-0899/0855.Exam Room/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

In an exam room, there are N seats in a single row, numbered 0, 1, 2,
..., N-1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

When a student enters the room, they must sit in the seat that maximizes
the distance to the closest person.  If there are multiple such seats,
they sit in the seat with the lowest number.  (Also, if no one is in the
room, then the student sits at seat number 0.)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return a class ExamRoom(int N) that exposes two functions:
ExamRoom.seat() returning an int representing what seat the student sat
in, and ExamRoom.leave(int p) representing that the student in seat
number p now leaves the room.  It is guaranteed that any calls to
ExamRoom.leave(p) have a student sitting in seat p.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;]</span>, <span id="example-input-1-2">[[10],[],[],[],[],[4],[]]</span>

  <strong>Output: </strong><span id="example-output-1">[null,0,9,4,2,null,5]</span>

  <span><strong>Explanation</strong>:

  ExamRoom(10) -&gt; null

  seat() -&gt; 0, no one is in the room, then the student sits at seat number 0.

  seat() -&gt; 9, the student sits at the last seat number 9.

  seat() -&gt; 4, the student sits at the last seat number 4.

  seat() -&gt; 2, the student sits at the last seat number 2.

  leave(4) -&gt; null

  seat() -&gt; 5, the student sits at the last seat number 5.</span>

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

​​​​​​​

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= N <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ExamRoom.seat() and ExamRoom.leave() will be called at most 10^4 times
across all test cases.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Calls to ExamRoom.leave(p) are guaranteed to have a student currently
sitting in seat number p.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
