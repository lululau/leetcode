* [[https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes][865.
Smallest Subtree with all the Deepest Nodes]]
  :PROPERTIES:
  :CUSTOM_ID: smallest-subtree-with-all-the-deepest-nodes
  :END:
[[./solution/0800-0899/0865.Smallest Subtree with all the Deepest Nodes/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given the root of a binary tree, the depth of each node is the shortest
distance to the root.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the smallest subtree such that it contains all the deepest nodes
in the original tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A node is called the deepest if it has the largest depth possible
among any node in the entire tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The subtree of a node is tree consisting of that node, plus the set of
all descendants of that node.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: This question is the same as 1123:
https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4]

  <strong>Output:</strong> [2,7,4]

  <strong>Explanation:</strong> We return the node with value 2, colored in yellow in the diagram.

  The nodes coloured in blue are the deepest nodes of the tree.

  Notice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> root = [1]

  <strong>Output:</strong> [1]

  <strong>Explanation:</strong> The root is the deepest node in the tree.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> root = [0,1,3,null,2]

  <strong>Output:</strong> [2]

  <strong>Explanation:</strong> The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the tree will be in the range [1, 500].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= Node.val <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The values of the nodes in the tree are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
