* [[https://leetcode-cn.com/problems/number-of-lines-to-write-string][806.
写字符串需要的行数]]
  :PROPERTIES:
  :CUSTOM_ID: 写字符串需要的行数
  :END:
[[./solution/0800-0899/0806.Number of Lines To Write String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

我们要把给定的字符串
S 从左到右写到每一行上，每一行的最大宽度为100个单位，如果我们在写某个字母的时候会使这行超过了100
个单位，那么我们应该把这个字母写到下一行。我们给定了一个数组 widths ，这个数组 widths[0]
代表 'a' 需要的单位， widths[1] 代表 'b' 需要的单位，...， widths[25]
代表 'z' 需要的单位。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在回答两个问题：至少多少行能放下S，以及最后一行使用的宽度是多少个单位？将你的答案作为长度为2的整数列表返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>示例 1:</strong>
  <strong>输入:</strong> 
  widths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]
  S = &quot;abcdefghijklmnopqrstuvwxyz&quot;
  <strong>输出:</strong> [3, 60]
  <strong>解释: 
  </strong>所有的字符拥有相同的占用单位10。所以书写所有的26个字母，
  我们需要2个整行和占用60个单位的一行。
  </pre>
#+end_html

#+begin_html
  <pre>
  <strong>示例 2:</strong>
  <strong>输入:</strong> 
  widths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]
  S = &quot;bbbcccdddaaa&quot;
  <strong>输出:</strong> [2, 4]
  <strong>解释: 
  </strong>除去字母&#39;a&#39;所有的字符都是相同的单位10，并且字符串 &quot;bbbcccdddaa&quot; 将会覆盖 9 * 10 + 2 * 4 = 98 个单位.
  最后一个字母 &#39;a&#39; 将会被写到第二行，因为第一行只剩下2个单位了。
  所以，这个答案是2行，第二行有4个单位宽度。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

字符串 S 的长度在 [1, 1000] 的范围。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S 只包含小写字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

widths 是长度为 26的数组。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

widths[i] 值的范围在 [2, 10]。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
