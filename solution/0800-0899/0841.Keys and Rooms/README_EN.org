* [[https://leetcode.com/problems/keys-and-rooms][841. Keys and Rooms]]
  :PROPERTIES:
  :CUSTOM_ID: keys-and-rooms
  :END:
[[./solution/0800-0899/0841.Keys and Rooms/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There are N rooms and you start in room 0.  Each room has a distinct
number in 0, 1, 2, ..., N-1, and each room may have some keys to access
the next room. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Formally, each room i has a list of keys rooms[i], and each key
rooms[i][j] is an integer in [0, 1, ..., N-1] where N = rooms.length.  A
key rooms[i][j] = v opens the room with number v.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Initially, all the rooms start locked (except for room 0). 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You can walk back and forth between rooms freely.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return true if and only if you can enter every room.

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>[[1],[2],[3],[]]

  <strong>Output: </strong>true

  <strong>Explanation:  </strong>

  We start in room 0, and pick up key 1.

  We then go to room 1, and pick up key 2.

  We then go to room 2, and pick up key 3.

  We then go to room 3.  Since we were able to go to every room, we return true.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>[[1,3],[3,0,1],[2],[0]]

  <strong>Output: </strong>false

  <strong>Explanation: </strong>We can&#39;t enter the room with number 2.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rooms.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= rooms[i].length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The number of keys in all rooms combined is at most 3000.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
