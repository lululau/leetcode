* [[https://leetcode-cn.com/problems/largest-triangle-area][812.
最大三角形面积]]
  :PROPERTIES:
  :CUSTOM_ID: 最大三角形面积
  :END:
[[./solution/0800-0899/0812.Largest Triangle Area/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定包含多个点的集合，从其中取三个点组成三角形，返回能组成的最大三角形的面积。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>示例:</strong>
  <strong>输入:</strong> points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
  <strong>输出:</strong> 2
  <strong>解释:</strong> 
  这五个点如下图所示。组成的橙色三角形是最大的，面积为2。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= points.length <= 50.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

不存在重复的点。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

 -50 <= points[i][j] <= 50.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

结果误差值在 10^-6 以内都认为是正确答案。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
