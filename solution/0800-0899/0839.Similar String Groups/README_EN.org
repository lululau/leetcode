* [[https://leetcode.com/problems/similar-string-groups][839. Similar
String Groups]]
  :PROPERTIES:
  :CUSTOM_ID: similar-string-groups
  :END:
[[./solution/0800-0899/0839.Similar String Groups/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Two strings X and Y are similar if we can swap two letters (in different
positions) of X, so that it equals Y. Also two strings X and Y are
similar if they are equal.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, "tars" and "rats" are similar (swapping at positions 0 and
2), and "rats" and "arts" are similar, but "star" is not similar to
"tars", "rats", or "arts".

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Together, these form two connected groups by similarity: {"tars",
"rats", "arts"} and {"star"}.  Notice that "tars" and "arts" are in the
same group even though they are not similar.  Formally, each group is
such that a word is in the group if and only if it is similar to at
least one other word in the group.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We are given a list strs of strings where every string in strs is an
anagram of every other string in strs. How many groups are there?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;tars&quot;,&quot;rats&quot;,&quot;arts&quot;,&quot;star&quot;]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> strs = [&quot;omv&quot;,&quot;ovm&quot;]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs.length <= 300

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= strs[i].length <= 300

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

strs[i] consists of lowercase letters only.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All words in strs have the same length and are anagrams of each other.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
