* [[https://leetcode.com/problems/boats-to-save-people][881. Boats to
Save People]]
  :PROPERTIES:
  :CUSTOM_ID: boats-to-save-people
  :END:
[[./solution/0800-0899/0881.Boats to Save People/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array people where people[i] is the weight of the ith
person, and an infinite number of boats where each boat can carry a
maximum weight of limit. Each boat carries at most two people at the
same time, provided the sum of the weight of those people is at most
limit.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of boats to carry every given person.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> people = [1,2], limit = 3
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> 1 boat (1, 2)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> people = [3,2,2,1], limit = 3
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> 3 boats (1, 2), (2) and (3)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> people = [3,5,3,4], limit = 5
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> 4 boats (3), (3), (4), (5)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= people.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= people[i] <= limit <= 3 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def numRescueBoats(self, people: List[int], limit: int) -> int:
          people.sort()
          num, i, j = 0, 0, len(people) - 1
          while i <= j:
              if people[i] + people[j] <= limit:
                  i += 1
              j -= 1
              num += 1
          return num
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int numRescueBoats(int[] people, int limit) {
          Arrays.sort(people);
          int num = 0;
          int i = 0, j = people.length - 1;
          while (i <= j) {
              if (people[i] + people[j] <= limit) {
                  ++i;
              }
              --j;
              ++num;
          }
          return num;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
