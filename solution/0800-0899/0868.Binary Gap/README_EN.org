* [[https://leetcode.com/problems/binary-gap][868. Binary Gap]]
  :PROPERTIES:
  :CUSTOM_ID: binary-gap
  :END:
[[./solution/0800-0899/0868.Binary Gap/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a positive integer n, find and return the longest distance between
any two adjacent 1's in the binary representation of n. If there are no
two adjacent 1's, return 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two 1's are adjacent if there are only 0's separating them (possibly no
0's). The distance between two 1's is the absolute difference between
their bit positions. For example, the two 1's in "1001" have a distance
of 3.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 22
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> 22 in binary is &quot;10110&quot;.
  The first adjacent pair of 1&#39;s is &quot;<u>1</u>0<u>1</u>10&quot; with a distance of 2.
  The second adjacent pair of 1&#39;s is &quot;10<u>11</u>0&quot; with a distance of 1.
  The answer is the largest of these two distances, which is 2.
  Note that &quot;<u>1</u>01<u>1</u>0&quot; is not a valid pair since there is a 1 separating the two 1&#39;s underlined.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> 5 in binary is &quot;101&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 6
  <strong>Output:</strong> 1
  <strong>Explanation:</strong> 6 in binary is &quot;110&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 8
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> 8 in binary is &quot;1000&quot;.
  There aren&#39;t any adjacent pairs of 1&#39;s in the binary representation of 8, so we return 0.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 1
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
