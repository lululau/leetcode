* [[https://leetcode.com/problems/profitable-schemes][879. Profitable
Schemes]]
  :PROPERTIES:
  :CUSTOM_ID: profitable-schemes
  :END:
[[./solution/0800-0899/0879.Profitable Schemes/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

There is a group of n members, and a list of various crimes they could
commit. The ith crime generates a profit[i] and requires group[i]
members to participate in it. If a member participates in one crime,
that member can't participate in another crime.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Let's call a profitable scheme any subset of these crimes that generates
at least minProfit profit, and the total number of members participating
in that subset of crimes is at most n.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of schemes that can be chosen. Since the answer may be
very large, return it modulo 109 + 7.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 5, minProfit = 3, group = [2,2], profit = [2,3]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> To make a profit of at least 3, the group could either commit crimes 0 and 1, or just crime 1.
  In total, there are 2 schemes.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 10, minProfit = 5, group = [2,3,5], profit = [6,7,8]
  <strong>Output:</strong> 7
  <strong>Explanation:</strong> To make a profit of at least 5, the group could commit any crimes, as long as they commit one.
  There are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= minProfit <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= group.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= group[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

profit.length == group.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= profit[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
