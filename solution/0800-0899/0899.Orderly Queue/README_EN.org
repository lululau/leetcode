* [[https://leetcode.com/problems/orderly-queue][899. Orderly Queue]]
  :PROPERTIES:
  :CUSTOM_ID: orderly-queue
  :END:
[[./solution/0800-0899/0899.Orderly Queue/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A string S of lowercase letters is given.  Then, we may make any number
of moves.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

In each move, we choose one of the first K letters (starting from the
left), remove it, and place it at the end of the string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the lexicographically smallest string we could have after any
number of moves.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>S = <span id="example-input-1-1">&quot;cba&quot;</span>, K = <span id="example-input-1-2">1</span>

  <strong>Output: </strong><span id="example-output-1">&quot;acb&quot;</span>

  <strong>Explanation: </strong>

  In the first move, we move the 1st character (&quot;c&quot;) to the end, obtaining the string &quot;bac&quot;.

  In the second move, we move the 1st character (&quot;b&quot;) to the end, obtaining the final result &quot;acb&quot;.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>S = <span id="example-input-2-1">&quot;baaca&quot;</span>, K = <span id="example-input-2-2">3</span>

  <strong>Output: </strong><span id="example-output-2">&quot;aaabc&quot;</span>

  <strong>Explanation: </strong>

  In the first move, we move the 1st character (&quot;b&quot;) to the end, obtaining the string &quot;aacab&quot;.

  In the second move, we move the 3rd character (&quot;c&quot;) to the end, obtaining the final result &quot;aaabc&quot;.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= K <= S.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S consists of lowercase letters only.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
