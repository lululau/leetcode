* [[https://leetcode.com/problems/find-and-replace-pattern][890. Find
and Replace Pattern]]
  :PROPERTIES:
  :CUSTOM_ID: find-and-replace-pattern
  :END:
[[./solution/0800-0899/0890.Find and Replace Pattern/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You have a list of words and a pattern, and you want to know which words
in words matches the pattern.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A word matches the pattern if there exists a permutation of letters p so
that after replacing every letter x in the pattern with p(x), we get the
desired word.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

(Recall that a permutation of letters is a bijection from letters to
letters: every letter maps to another letter, and no two letters map to
the same letter.)

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return a list of the words in words that match the given pattern. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may return the answer in any order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong>words = <span id="example-input-1-1">[&quot;abc&quot;,&quot;deq&quot;,&quot;mee&quot;,&quot;aqq&quot;,&quot;dkd&quot;,&quot;ccc&quot;]</span>, pattern = <span id="example-input-1-2">&quot;abb&quot;</span>

  <strong>Output: </strong><span id="example-output-1">[&quot;mee&quot;,&quot;aqq&quot;]</span>

  <strong><span>Explanation: </span></strong>&quot;mee&quot; matches the pattern because there is a permutation {a -&gt; m, b -&gt; e, ...}. 

  &quot;ccc&quot; does not match the pattern because {a -&gt; c, b -&gt; c, ...} is not a permutation,

  since a and b map to the same letter.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= pattern.length = words[i].length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
