* [[https://leetcode-cn.com/problems/rectangle-overlap][836. 矩形重叠]]
  :PROPERTIES:
  :CUSTOM_ID: 矩形重叠
  :END:
[[./solution/0800-0899/0836.Rectangle Overlap/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

矩形以列表 [x1, y1, x2, y2] 的形式表示，其中 (x1, y1)
为左下角的坐标，(x2, y2) 是右上角的坐标。矩形的上下边平行于 x
轴，左右边平行于 y 轴。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果相交的面积为 正
，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给出两个矩形 rec1 和 rec2 。如果它们重叠，返回 true；否则，返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>rec1 = [0,0,2,2], rec2 = [1,1,3,3]
  <strong>输出：</strong>true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>rec1 = [0,0,1,1], rec2 = [1,0,2,1]
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>rec1 = [0,0,1,1], rec2 = [2,2,3,3]
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

rect1.length == 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

rect2.length == 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= rec1[i], rec2[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

rec1[0] <= rec1[2] 且 rec1[1] <= rec1[3]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

rec2[0] <= rec2[2] 且 rec2[1] <= rec2[3]

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
