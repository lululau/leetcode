* [[https://leetcode.com/problems/groups-of-special-equivalent-strings][893.
Groups of Special-Equivalent Strings]]
  :PROPERTIES:
  :CUSTOM_ID: groups-of-special-equivalent-strings
  :END:
[[./solution/0800-0899/0893.Groups of Special-Equivalent Strings/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array A of strings.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

A move onto S consists of swapping any two even indexed characters of S,
or any two odd indexed characters of S.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two strings S and T are special-equivalent if after any number of moves
onto S, S == T.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, S = "zzxy" and T = "xyzz" are special-equivalent because we
may make the moves "zzxy" -> "xzzy" -> "xyzz" that swap S[0] and S[2],
then S[1] and S[3].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Now, a group of special-equivalent strings from A is a non-empty subset
of A such that:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

Every pair of strings in the group are special equivalent, and;

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The group is the largest size possible (ie., there isn't a string S not
in the group such that S is special equivalent to every string in the
group)

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of groups of special-equivalent strings from A.

#+begin_html
  </p>
#+end_html

 

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[&quot;abcd&quot;,&quot;cdab&quot;,&quot;cbad&quot;,&quot;xyzz&quot;,&quot;zzxy&quot;,&quot;zzyx&quot;]</span>

  <strong>Output: </strong><span id="example-output-1">3</span>

  <strong>Explanation: </strong>

  One group is [&quot;abcd&quot;, &quot;cdab&quot;, &quot;cbad&quot;], since they are all pairwise special equivalent, and none of the other strings are all pairwise special equivalent to these.



  The other two groups are [&quot;xyzz&quot;, &quot;zzxy&quot;] and [&quot;zzyx&quot;].  Note that in particular, &quot;zzxy&quot; is not special equivalent to &quot;zzyx&quot;.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-2-1">[&quot;abc&quot;,&quot;acb&quot;,&quot;bac&quot;,&quot;bca&quot;,&quot;cab&quot;,&quot;cba&quot;]</span>

  <strong>Output: </strong><span id="example-output-2">3</span></pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A[i].length <= 20

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All A[i] have the same length.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All A[i] consist of only lowercase letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
