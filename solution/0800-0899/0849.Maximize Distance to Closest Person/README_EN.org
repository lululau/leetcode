* [[https://leetcode.com/problems/maximize-distance-to-closest-person][849.
Maximize Distance to Closest Person]]
  :PROPERTIES:
  :CUSTOM_ID: maximize-distance-to-closest-person
  :END:
[[./solution/0800-0899/0849.Maximize Distance to Closest Person/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an array representing a row of seats where seats[i] = 1
represents a person sitting in the ith seat, and seats[i] = 0 represents
that the ith seat is empty (0-indexed).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

There is at least one empty seat, and at least one person sitting.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Alex wants to sit in the seat such that the distance between him and the
closest person to him is maximized. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return that maximum distance to the closest person.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> seats = [1,0,0,0,1,0,1]
  <strong>Output:</strong> 2
  <strong>Explanation: </strong>
  If Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.
  If Alex sits in any other open seat, the closest person has distance 1.
  Thus, the maximum distance to the closest person is 2.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> seats = [1,0,0,0]
  <strong>Output:</strong> 3
  <strong>Explanation: </strong>
  If Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.
  This is the maximum distance possible, so the answer is 3.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> seats = [0,1]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= seats.length <= 2 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

seats[i] is 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At least one seat is empty.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At least one seat is occupied.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
