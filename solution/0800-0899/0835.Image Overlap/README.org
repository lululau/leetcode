* [[https://leetcode-cn.com/problems/image-overlap][835. 图像重叠]]
  :PROPERTIES:
  :CUSTOM_ID: 图像重叠
  :END:
[[./solution/0800-0899/0835.Image Overlap/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给出两个图像 A 和 B ，A 和
B 为大小相同的二维正方形矩阵。（并且为二进制矩阵，只包含0和1）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们转换其中一个图像，向左，右，上，或下滑动任何数量的单位，并把它放在另一个图像的上面。之后，该转换的重叠是指两个图像都具有
1 的位置的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

（请注意，转换不包括向任何方向旋转。）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

最大可能的重叠是什么？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>A = [[1,1,0],
            [0,1,0],
  &nbsp;         [0,1,0]]
  &nbsp;    B = [[0,0,0],
  &nbsp;         [0,1,1],
  &nbsp;         [0,0,1]]
  <strong>输出：</strong>3
  <strong>解释:</strong> 将 A 向右移动一个单位，然后向下移动一个单位。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意: 

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length = A[0].length = B.length = B[0].length <= 30

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i][j], B[i][j] <= 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
