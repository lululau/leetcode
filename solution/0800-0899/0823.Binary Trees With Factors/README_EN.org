* [[https://leetcode.com/problems/binary-trees-with-factors][823. Binary
Trees With Factors]]
  :PROPERTIES:
  :CUSTOM_ID: binary-trees-with-factors
  :END:
[[./solution/0800-0899/0823.Binary Trees With Factors/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array of unique integers, arr, where each integer arr[i] is
strictly greater than 1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We make a binary tree using these integers, and each number may be used
for any number of times. Each non-leaf node's value should be equal to
the product of the values of its children.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of binary trees we can make. The answer may be too
large so return the answer modulo 109 + 7.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [2,4]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> We can make these trees: <code>[2], [4], [4, 2, 2]</code></pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [2,4,5,10]
  <strong>Output:</strong> 7
  <strong>Explanation:</strong> We can make these trees: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= arr[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the values of arr are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
