* [[https://leetcode-cn.com/problems/binary-trees-with-factors][823.
带因子的二叉树]]
  :PROPERTIES:
  :CUSTOM_ID: 带因子的二叉树
  :END:
[[./solution/0800-0899/0823.Binary Trees With Factors/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给出一个含有不重复整数元素的数组，每个整数均大于 1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们用这些整数来构建二叉树，每个整数可以使用任意次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

其中：每个非叶结点的值应等于它的两个子结点的值的乘积。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

满足条件的二叉树一共有多少个？返回的结果应模除 10 ** 9 + 7。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> <code>A = [2, 4]</code>
  <strong>输出:</strong> 3
  <strong>解释:</strong> 我们可以得到这些二叉树: <code>[2], [4], [4, 2, 2]</code></pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> <code>A = [2, 4, 5, 10]</code>
  <strong>输出:</strong> <code>7</code>
  <strong>解释:</strong> 我们可以得到这些二叉树: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 1000.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= A[i] <= 10 ^ 9.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
