* [[https://leetcode.com/problems/backspace-string-compare][844.
Backspace String Compare]]
  :PROPERTIES:
  :CUSTOM_ID: backspace-string-compare
  :END:
[[./solution/0800-0899/0844.Backspace String Compare/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two strings s and t, return true if they are equal when both are
typed into empty text editors. '#' means a backspace character.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that after backspacing an empty text, the text will continue empty.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;ab#c&quot;, t = &quot;ad#c&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> Both s and t become &quot;ac&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;ab##&quot;, t = &quot;c#d#&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> Both s and t become &quot;&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;a##c&quot;, t = &quot;#a#c&quot;
  <strong>Output:</strong> true
  <strong>Explanation:</strong> Both s and t become &quot;c&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;a#c&quot;, t = &quot;b&quot;
  <strong>Output:</strong> false
  <strong>Explanation:</strong> s becomes &quot;c&quot; while t becomes &quot;b&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length, t.length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s and t only contain lowercase letters and '#' characters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow up: Can you solve it in O(n) time and O(1) space?

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
