* [[https://leetcode.com/problems/find-and-replace-in-string][833. Find
And Replace in String]]
  :PROPERTIES:
  :CUSTOM_ID: find-and-replace-in-string
  :END:
[[./solution/0800-0899/0833.Find And Replace in String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

To some string S, we will perform some replacement operations that
replace groups of letters with new ones (not necessarily the same size).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Each replacement operation has 3 parameters: a starting index i, a
source word x and a target word y.  The rule is that if x starts at
position i in the original string S, then we will replace that
occurrence of x with y.  If not, we do nothing.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, if we have S = "abcd" and we have some replacement
operation i = 2, x = "cd", y = "ffff", then because "cd" starts at
position 2 in the original string S, we will replace it with "ffff".

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Using another example on S = "abcd", if we have both the replacement
operation i = 0, x = "ab", y = "eee", as well as another replacement
operation i = 2, x = "ec", y = "ffff", this second operation does
nothing because in the original string S[2] = 'c', which doesn't
match x[0] = 'e'.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

All these operations occur simultaneously.  It's guaranteed that there
won't be any overlap in replacement: for example, S = "abc", indexes =
[0, 1], sources = ["ab","bc"] is not a valid test case.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> S = &quot;abcd&quot;, indexes = [0, 2], sources = [&quot;a&quot;, &quot;cd&quot;], targets = [&quot;eee&quot;, &quot;ffff&quot;]
  <strong>Output:</strong> &quot;eeebffff&quot;
  <strong>Explanation:</strong>
  &quot;a&quot; starts at index 0 in S, so it&#39;s replaced by &quot;eee&quot;.
  &quot;cd&quot; starts at index 2 in S, so it&#39;s replaced by &quot;ffff&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> S = &quot;abcd&quot;, indexes = [0, 2], sources = [&quot;ab&quot;,&quot;ec&quot;], targets = [&quot;eee&quot;,&quot;ffff&quot;]
  <strong>Output:</strong> &quot;eeecd&quot;
  <strong>Explanation:</strong>
  &quot;ab&quot; starts at index 0 in S, so it&#39;s replaced by &quot;eee&quot;.
  &quot;ec&quot; doesn&#39;t starts at index 2 in the <strong>original</strong> S, so we do nothing.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= S.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

S consists of only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= indexes.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= indexes[i] < S.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sources.length == indexes.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

targets.length == indexes.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sources[i].length, targets[i].length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sources[i] and targets[i] consist of only lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
