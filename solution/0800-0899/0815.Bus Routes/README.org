* [[https://leetcode-cn.com/problems/bus-routes][815. 公交路线]]
  :PROPERTIES:
  :CUSTOM_ID: 公交路线
  :END:
[[./solution/0800-0899/0815.Bus Routes/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个数组 routes ，表示一系列公交线路，其中每个 routes[i]
表示一条公交线路，第 i 辆公交车将会在上面循环行驶。

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

例如，路线 routes[0] = [1, 5, 7] 表示第 0 辆公交车会一直按序列 1 -> 5 ->
7 -> 1 -> 5 -> 7 -> 1 -> ... 这样的车站路线行驶。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

现在从 source 车站出发（初始时不在公交车上），要前往 target 车站。
期间仅可乘坐公交车。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

求出 最少乘坐的公交车数量 。如果不可能到达终点车站，返回 -1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>routes = [[1,2,7],[3,6,7]], source = 1, target = 6
  <strong>输出：</strong>2
  <strong>解释：</strong>最优策略是先乘坐第一辆公交车到达车站 7 , 然后换乘第二辆公交车到车站 6 。 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>routes = [[7,12],[4,5,15],[6],[15,19],[9,12,13]], source = 15, target = 12
  <strong>输出：</strong>-1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= routes.length <= 500.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= routes[i].length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

routes[i] 中的所有值 互不相同

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

sum(routes[i].length) <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= routes[i][j] < 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= source, target < 106

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
