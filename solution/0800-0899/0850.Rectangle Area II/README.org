* [[https://leetcode-cn.com/problems/rectangle-area-ii][850. 矩形面积
II]]
  :PROPERTIES:
  :CUSTOM_ID: 矩形面积-ii
  :END:
[[./solution/0800-0899/0850.Rectangle Area II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

我们给出了一个（轴对齐的）矩形列表 rectangles 。 对于 rectangle[i] =
[x1, y1, x2,
y2]，其中（x1，y1）是矩形 i 左下角的坐标，（x2，y2）是该矩形右上角的坐标。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

找出平面中所有矩形叠加覆盖后的总面积。 由于答案可能太大，请返回它对 10 ^
9 + 7 取模的结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]
  <strong>输出：</strong>6
  <strong>解释：</strong>如图所示。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[0,0,1000000000,1000000000]]
  <strong>输出：</strong>49
  <strong>解释：</strong>答案是 10^18 对 (10^9 + 7) 取模的结果， 即 (10^9)^2 &rarr; (-7)^2 = 49 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rectangles.length <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

rectanges[i].length = 4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= rectangles[i][j] <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

矩形叠加覆盖后的总面积不会超越 2^63 - 1 ，这意味着可以用一个 64
位有符号整数来保存面积结果。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
