* [[https://leetcode-cn.com/problems/spiral-matrix-iii][885. 螺旋矩阵
III]]
  :PROPERTIES:
  :CUSTOM_ID: 螺旋矩阵-iii
  :END:
[[./solution/0800-0899/0885.Spiral Matrix III/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在 R 行 C 列的矩阵上，我们从 (r0, c0) 面朝东面开始

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

这里，网格的西北角位于第一行第一列，网格的东南角位于最后一行最后一列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在，我们以顺时针按螺旋状行走，访问此网格中的每个位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每当我们移动到网格的边界之外时，我们会继续在网格之外行走（但稍后可能会返回到网格边界）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

最终，我们到过网格的所有 R * C 个空间。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

按照访问顺序返回表示网格位置的坐标列表。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>R = 1, C = 4, r0 = 0, c0 = 0
  <strong>输出：</strong>[[0,0],[0,1],[0,2],[0,3]]

  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0800-0899/0885.Spiral Matrix III/images/example_1.png" style="height: 99px; width: 174px;">
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>R = 5, C = 6, r0 = 1, c0 = 4
  <strong>输出：</strong>[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]

  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0800-0899/0885.Spiral Matrix III/images/example_2.png" style="height: 142px; width: 202px;">
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= R <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= C <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= r0 < R

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= c0 < C

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
