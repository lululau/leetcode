* [[https://leetcode-cn.com/problems/minimum-cost-to-cut-a-stick][1547.
切棍子的最小成本]]
  :PROPERTIES:
  :CUSTOM_ID: 切棍子的最小成本
  :END:
[[./solution/1500-1599/1547.Minimum Cost to Cut a Stick/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有一根长度为 n 个单位的木棍，棍上从 0 到 n 标记了若干位置。例如，长度为
6 的棍子可以标记如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 cuts ，其中 cuts[i] 表示你需要将棍子切开的位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以按顺序完成切割，也可以根据需要更改切割的顺序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每次切割的成本都是当前要切割的棍子的长度，切棍子的总成本是历次切割成本的总和。对棍子进行切割将会把一根木棍分成两根较小的木棍（这两根木棍的长度和就是切割前木棍的长度）。请参阅第一个示例以获得更直观的解释。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回切棍子的 最小总成本 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 7, cuts = [1,3,4,5]
  <strong>输出：</strong>16
  <strong>解释：</strong>按 [1, 3, 4, 5] 的顺序切割的情况如下所示：
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1547.Minimum Cost to Cut a Stick/images/e11.jpg" style="height: 284px; width: 350px;" />
  第一次切割长度为 7 的棍子，成本为 7 。第二次切割长度为 6 的棍子（即第一次切割得到的第二根棍子），第三次切割为长度 4 的棍子，最后切割长度为 3 的棍子。总成本为 7 + 6 + 4 + 3 = 20 。
  而将切割顺序重新排列为 [3, 5, 1, 4] 后，总成本 = 16（如示例图中 7 + 4 + 3 + 2 = 16）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>n = 9, cuts = [5,6,1,4,2]
  <strong>输出：</strong>22
  <strong>解释：</strong>如果按给定的顺序切割，则总成本为 25 。总成本 <= 25 的切割顺序很多，例如，[4, 6, 5, 2, 1] 的总成本 = 22，是所有可能方案中成本最小的。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= cuts.length <= min(n - 1, 100)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= cuts[i] <= n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cuts 数组中的所有整数都 互不相同

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
