* [[https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island][1568.
Minimum Number of Days to Disconnect Island]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-days-to-disconnect-island
  :END:
[[./solution/1500-1599/1568.Minimum Number of Days to Disconnect Island/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a 2D grid consisting of 1s (land) and 0s (water).  An island is a
maximal 4-directionally (horizontal or vertical) connected group of 1s.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The grid is said to be connected if we have exactly one island,
otherwise is said disconnected.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

In one day, we are allowed to change any single land cell (1) into a
water cell (0).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of days to disconnect the grid.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[0,1,1,0],[0,1,1,0],[0,0,0,0]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> We need at least 2 days to get a disconnected grid.
  Change land grid[1][1] and grid[0][2] to water and get 2 disconnected island.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1]]
  <strong>Output:</strong> 2
  <strong>Explanation: </strong>Grid of full water is also disconnected ([[1,1]] -&gt; [[0,0]]), 0 islands.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,0,1,0]]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,0,1,1],
  &nbsp;              [1,1,1,1,1],
  &nbsp;              [1,1,0,1,1],
  &nbsp;              [1,1,0,1,1]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,0,1,1],
  &nbsp;              [1,1,1,1,1],
  &nbsp;              [1,1,0,1,1],
  &nbsp;              [1,1,1,1,1]]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid.length, grid[i].length <= 30

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i][j] is 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
