* [[https://leetcode-cn.com/problems/maximum-number-of-coins-you-can-get][1561.
你可以获得的最大硬币数目]]
  :PROPERTIES:
  :CUSTOM_ID: 你可以获得的最大硬币数目
  :END:
[[./solution/1500-1599/1561.Maximum Number of Coins You Can Get/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

有 3n 堆数目不一的硬币，你和你的朋友们打算按以下方式分硬币：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

每一轮中，你将会选出 任意 3 堆硬币（不一定连续）。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Alice 将会取走硬币数量最多的那一堆。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

你将会取走硬币数量第二多的那一堆。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Bob 将会取走最后一堆。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

重复这个过程，直到没有更多硬币。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 piles ，其中 piles[i] 是第 i 堆中硬币的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回你可以获得的最大硬币数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>piles = [2,4,1,2,7,8]
  <strong>输出：</strong>9
  <strong>解释：</strong>选出 (2, 7, 8) ，Alice 取走 8 枚硬币的那堆，你取走 <strong>7</strong> 枚硬币的那堆，Bob 取走最后一堆。
  选出 (1, 2, 4) , Alice 取走 4 枚硬币的那堆，你取走 <strong>2</strong> 枚硬币的那堆，Bob 取走最后一堆。
  你可以获得的最大硬币数目：7 + 2 = 9.
  考虑另外一种情况，如果选出的是 (1, <strong>2</strong>, 8) 和 (2, <strong>4</strong>, 7) ，你就只能得到 2 + 4 = 6 枚硬币，这不是最优解。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>piles = [2,4,5]
  <strong>输出：</strong>4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>piles = [9,8,7,6,5,1,2,3,4]
  <strong>输出：</strong>18
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= piles.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

piles.length % 3 == 0

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= piles[i] <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
