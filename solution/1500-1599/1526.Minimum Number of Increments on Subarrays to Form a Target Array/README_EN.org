* [[https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array][1526.
Minimum Number of Increments on Subarrays to Form a Target Array]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-increments-on-subarrays-to-form-a-target-array
  :END:
[[./solution/1500-1599/1526.Minimum Number of Increments on Subarrays to Form a Target Array/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array of positive integers target and an array initial of same
size with all zeros.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of operations to form a target array from
initial if you are allowed to do the following operation:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Choose any subarray from initial and increment each value by one.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

The answer is guaranteed to fit within the range of a 32-bit signed
integer.

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> target = [1,2,3,2,1]
  <strong>Output:</strong> 3
  <strong>Explanation: </strong>We need at least 3 operations to form the target array from the initial array.
  [0,0,0,0,0] increment 1 from index 0 to 4&nbsp;(inclusive).
  [1,1,1,1,1] increment 1 from index 1 to 3&nbsp;(inclusive).
  [1,2,2,2,1] increment 1 at index 2.
  [1,2,3,2,1] target array is formed.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> target = [3,1,1,2]
  <strong>Output:</strong> 4
  <strong>Explanation: </strong>(initial)[0,0,0,0] -&gt; [1,1,1,1] -&gt; [1,1,1,2] -&gt; [2,1,1,2] -&gt; [3,1,1,2] (target).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> target = [3,1,5,4,2]
  <strong>Output:</strong> 7
  <strong>Explanation: </strong>(initial)[0,0,0,0,0] -&gt; [1,1,1,1,1] -&gt; [2,1,1,1,1] -&gt; [3,1,1,1,1] 
                                    -&gt; [3,1,2,2,2] -&gt; [3,1,3,3,2] -&gt; [3,1,4,4,2] -&gt; [3,1,5,4,2] (target).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> target = [1,1,1,1]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= target[i] <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
