* [[https://leetcode-cn.com/problems/crawler-log-folder][1598.
文件夹操作日志搜集器]]
  :PROPERTIES:
  :CUSTOM_ID: 文件夹操作日志搜集器
  :END:
[[./solution/1500-1599/1598.Crawler Log Folder/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

每当用户执行变更文件夹操作时，LeetCode 文件系统都会保存一条日志记录。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

下面给出对变更操作的说明：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

"../" ：移动到当前文件夹的父文件夹。如果已经在主文件夹下，则
继续停留在当前文件夹 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"./" ：继续停留在当前文件夹。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"x/" ：移动到名为 x 的子文件夹中。题目数据 保证总是存在文件夹 x 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串列表 logs ，其中 logs[i] 是用户在 ith 步执行的操作。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

文件系统启动时位于主文件夹，然后执行 logs 中的操作。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

执行完所有变更文件夹操作后，请你找出 返回主文件夹所需的最小步数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>logs = [&quot;d1/&quot;,&quot;d2/&quot;,&quot;../&quot;,&quot;d21/&quot;,&quot;./&quot;]
  <strong>输出：</strong>2
  <strong>解释：</strong>执行 &quot;../&quot; 操作变更文件夹 2 次，即可回到主文件夹
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>logs = [&quot;d1/&quot;,&quot;d2/&quot;,&quot;./&quot;,&quot;d3/&quot;,&quot;../&quot;,&quot;d31/&quot;]
  <strong>输出：</strong>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>logs = [&quot;d1/&quot;,&quot;../&quot;,&quot;../&quot;,&quot;../&quot;]
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= logs.length <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= logs[i].length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

logs[i] 包含小写英文字母，数字，'.' 和 '/'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

logs[i] 符合语句中描述的格式

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

文件夹名称由小写英文字母和数字组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
