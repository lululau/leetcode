* [[https://leetcode.com/problems/crawler-log-folder][1598. Crawler Log
Folder]]
  :PROPERTIES:
  :CUSTOM_ID: crawler-log-folder
  :END:
[[./solution/1500-1599/1598.Crawler Log Folder/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

The Leetcode file system keeps a log each time some user performs a
change folder operation.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The operations are described below:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

"../" : Move to the parent folder of the current folder. (If you are
already in the main folder, remain in the same folder).

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"./" : Remain in the same folder.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

"x/" : Move to the child folder named x (This folder is guaranteed to
always exist).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

You are given a list of strings logs where logs[i] is the operation
performed by the user at the ith step.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The file system starts in the main folder, then the operations in logs
are performed.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of operations needed to go back to the main
folder after the change folder operations.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> logs = [&quot;d1/&quot;,&quot;d2/&quot;,&quot;../&quot;,&quot;d21/&quot;,&quot;./&quot;]
  <strong>Output:</strong> 2
  <strong>Explanation: </strong>Use this change folder operation &quot;../&quot; 2 times and go back to the main folder.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> logs = [&quot;d1/&quot;,&quot;d2/&quot;,&quot;./&quot;,&quot;d3/&quot;,&quot;../&quot;,&quot;d31/&quot;]
  <strong>Output:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> logs = [&quot;d1/&quot;,&quot;../&quot;,&quot;../&quot;,&quot;../&quot;]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= logs.length <= 103

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= logs[i].length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

logs[i] contains lowercase English letters, digits, '.', and '/'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

logs[i] follows the format described in the statement.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Folder names consist of lowercase English letters and digits.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
