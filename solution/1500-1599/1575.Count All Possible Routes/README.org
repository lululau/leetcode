* [[https://leetcode-cn.com/problems/count-all-possible-routes][1575.
统计所有可行路径]]
  :PROPERTIES:
  :CUSTOM_ID: 统计所有可行路径
  :END:
[[./solution/1500-1599/1575.Count All Possible Routes/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个
互不相同 的整数数组，其中 locations[i] 表示第 i 个城市的位置。同时给你 start，finish 和 fuel 分别表示出发城市、目的地城市和你初始拥有的汽油总量

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每一步中，如果你在城市 i ，你可以选择任意一个城市 j ，满足  j != i 且 0
<= j <
locations.length ，并移动到城市 j 。从城市 i 移动到 j 消耗的汽油量为 |locations[i] -
locations[j]|，|x| 表示 x 的绝对值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请注意， fuel 任何时刻都 不能 为负，且你 可以 经过任意城市超过一次（包括 start 和 finish ）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回从 start 到 finish 所有可能路径的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

由于答案可能很大， 请将它对 10^9 + 7 取余后返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>locations = [2,3,6,8,4], start = 1, finish = 3, fuel = 5
  <strong>输出：</strong>4
  <strong>解释：</strong>以下为所有可能路径，每一条都用了 5 单位的汽油：
  1 -&gt; 3
  1 -&gt; 2 -&gt; 3
  1 -&gt; 4 -&gt; 3
  1 -&gt; 4 -&gt; 2 -&gt; 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>locations = [4,3,1], start = 1, finish = 0, fuel = 6
  <strong>输出：</strong>5
  <strong>解释：</strong>以下为所有可能的路径：
  1 -&gt; 0，使用汽油量为 fuel = 1
  1 -&gt; 2 -&gt; 0，使用汽油量为 fuel = 5
  1 -&gt; 2 -&gt; 1 -&gt; 0，使用汽油量为 fuel = 5
  1 -&gt; 0 -&gt; 1 -&gt; 0，使用汽油量为 fuel = 3
  1 -&gt; 0 -&gt; 1 -&gt; 0 -&gt; 1 -&gt; 0，使用汽油量为 fuel = 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>locations = [5,2,1], start = 0, finish = 2, fuel = 3
  <strong>输出：</strong>0
  <strong>解释：</strong>没有办法只用 3 单位的汽油从 0 到达 2 。因为最短路径需要 4 单位的汽油。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4 ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>locations = [2,1,5], start = 0, finish = 0, fuel = 3
  <strong>输出：</strong>2
  <strong>解释：</strong>总共有两条可行路径，0 和 0 -&gt; 1 -&gt; 0 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>locations = [1,2,3], start = 0, finish = 2, fuel = 40
  <strong>输出：</strong>615088286
  <strong>解释：</strong>路径总数为 2615088300 。将结果对 10^9 + 7 取余，得到 615088286 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= locations.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= locations[i] <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

所有 locations 中的整数 互不相同 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= start, finish < locations.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= fuel <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
