* [[https://leetcode-cn.com/problems/customer-who-visited-but-did-not-make-any-transactions][1581.
进店却未进行过交易的顾客]]
  :PROPERTIES:
  :CUSTOM_ID: 进店却未进行过交易的顾客
  :END:
[[./solution/1500-1599/1581.Customer Who Visited but Did Not Make Any Transactions/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

表：Visits

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +-------------+---------+
  | Column Name | Type    |
  +-------------+---------+
  | visit_id    | int     |
  | customer_id | int     |
  +-------------+---------+
  visit_id 是该表的主键。
  该表包含有关光临过购物中心的顾客的信息。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

表：Transactions

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +----------------+---------+
  | Column Name    | Type    |
  +----------------+---------+
  | transaction_id | int     |
  | visit_id       | int     |
  | amount         | int     |
  +----------------+---------+
  transaction_id 是此表的主键。
  此表包含 visit_id 期间进行的交易的信息。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

有一些顾客可能光顾了购物中心但没有进行交易。请你编写一个 SQL
查询，来查找这些顾客的 ID ，以及他们只光顾不交易的次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回以任何顺序排序的结果表。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

查询结果格式如下例所示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <code>Visits</code>
  +----------+-------------+
  | visit_id | customer_id |
  +----------+-------------+
  | 1        | 23          |
  | 2        | 9           |
  | 4        | 30          |
  | 5        | 54          |
  | 6        | 96          |
  | 7        | 54          |
  | 8        | 54          |
  +----------+-------------+

  <code>Transactions</code>
  +----------------+----------+--------+
  | transaction_id | visit_id | amount |
  +----------------+----------+--------+
  | 2              | 5        | 310    |
  | 3              | 5        | 300    |
  | 9              | 5        | 200    |
  | 12             | 1        | 910    |
  | 13             | 2        | 970    |
  +----------------+----------+--------+

  Result 表：
  +-------------+----------------+
  | customer_id | count_no_trans |
  +-------------+----------------+
  | 54          | 2              |
  | 30          | 1              |
  | 96          | 1              |
  +-------------+----------------+
  ID = 23 的顾客曾经逛过一次购物中心，并在 ID = 12 的访问期间进行了一笔交易。
  ID = 9 的顾客曾经逛过一次购物中心，并在 ID = 13 的访问期间进行了一笔交易。
  ID = 30 的顾客曾经去过购物中心，并且没有进行任何交易。
  ID = 54 的顾客三度造访了购物中心。在 2 次访问中，他们没有进行任何交易，在 1 次访问中，他们进行了 3 次交易。
  ID = 96 的顾客曾经去过购物中心，并且没有进行任何交易。
  如我们所见，ID 为 30 和 96 的顾客一次没有进行任何交易就去了购物中心。顾客 54 也两次访问了购物中心并且没有进行任何交易。
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
