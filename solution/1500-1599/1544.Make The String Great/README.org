* [[https://leetcode-cn.com/problems/make-the-string-great][1544.
整理字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 整理字符串
  :END:
[[./solution/1500-1599/1544.Make The String Great/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个由大小写英文字母组成的字符串 s 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一个整理好的字符串中，两个相邻字符 s[i] 和 s[i+1]，其中 0<= i <=
s.length-2 ，要满足如下条件:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

若 s[i] 是小写字符，则 s[i+1] 不可以是相同的大写字符。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

若 s[i] 是大写字符，则 s[i+1] 不可以是相同的小写字符。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请你将字符串整理好，每次你都可以从字符串中选出满足上述条件的 两个相邻
字符并删除，直到字符串整理好为止。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请返回整理好的 字符串
。题目保证在给出的约束条件下，测试样例对应的答案是唯一的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：空字符串也属于整理好的字符串，尽管其中没有任何字符。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "leEeetcode"
  <strong>输出：</strong>"leetcode"
  <strong>解释：</strong>无论你第一次选的是 i = 1 还是 i = 2，都会使 "leEeetcode" 缩减为 "leetcode" 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "abBAcC"
  <strong>输出：</strong>""
  <strong>解释：</strong>存在多种不同情况，但所有的情况都会导致相同的结果。例如：
  "abBAcC" --> "aAcC" --> "cC" --> ""
  "abBAcC" --> "abBA" --> "aA" --> ""
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = "s"
  <strong>输出：</strong>"s"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 只包含小写和大写英文字母

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
