* [[https://leetcode-cn.com/problems/min-cost-to-connect-all-points][1584.
连接所有点的最小费用]]
  :PROPERTIES:
  :CUSTOM_ID: 连接所有点的最小费用
  :END:
[[./solution/1500-1599/1584.Min Cost to Connect All Points/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个points 数组，表示 2D 平面上的一些点，其中 points[i] = [xi,
yi] 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

连接点 [xi, yi] 和点 [xj, yj] 的费用为它们之间的 曼哈顿距离 ：|xi - xj|
+ |yi - yj| ，其中 |val| 表示 val 的绝对值。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回将所有点连接的最小总费用。只有任意两点之间
有且仅有 一条简单路径时，才认为所有点都已连接。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>points = [[0,0],[2,2],[3,10],[5,2],[7,0]]
  <strong>输出：</strong>20
  <strong>解释：
  </strong><img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1584.Min Cost to Connect All Points/images/c.png" style="height:268px; width:214px" />
  我们可以按照上图所示连接所有点得到最小总费用，总费用为 20 。
  注意到任意两个点之间只有唯一一条路径互相到达。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>points = [[3,12],[-2,5],[-4,1]]
  <strong>输出：</strong>18
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>points = [[0,0],[1,1],[1,0],[-1,1]]
  <strong>输出：</strong>4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>points = [[-1000000,-1000000],[1000000,1000000]]
  <strong>输出：</strong>4000000
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>points = [[0,0]]
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= points.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-106 <= xi, yi <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

所有点 (xi, yi) 两两不同。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
