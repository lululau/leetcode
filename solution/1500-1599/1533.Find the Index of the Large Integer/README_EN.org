* [[https://leetcode.com/problems/find-the-index-of-the-large-integer][1533.
Find the Index of the Large Integer]]
  :PROPERTIES:
  :CUSTOM_ID: find-the-index-of-the-large-integer
  :END:
[[./solution/1500-1599/1533.Find the Index of the Large Integer/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We have an integer array arr, where all the integers in arr are equal
except for one integer which is larger than the rest of the integers.
You will not be given direct access to the array, instead, you will have
an API ArrayReader which have the following functions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

int compareSub(int l, int r, int x, int y): where 0 <= l, r, x, y
< ArrayReader.length(), l <= r and x <= y. The function compares the sum
of sub-array arr[l..r] with the sum of the sub-array arr[x..y] and
returns:

#+begin_example
  <ul>
      <li><strong>1</strong> if <code>arr[l]+arr[l+1]+...+arr[r] &gt; arr[x]+arr[x+1]+...+arr[y]</code>.</li>
      <li><strong>0</strong> if <code>arr[l]+arr[l+1]+...+arr[r] == arr[x]+arr[x+1]+...+arr[y]</code>.</li>
      <li><strong>-1</strong> if <code>arr[l]+arr[l+1]+...+arr[r] &lt; arr[x]+arr[x+1]+...+arr[y]</code>.</li>
  </ul>
  </li>
  <li><code>int length()</code>: Returns the size of the array.</li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

You are allowed to call compareSub() 20 times at most. You can assume
both functions work in O(1) time.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the index of the array arr which has the largest integer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow-up:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

What if there are two numbers in arr that are bigger than all other
numbers?

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

What if there is one number that is bigger than other numbers and one
number that is smaller than other numbers?

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [7,7,7,7,10,7,7,7]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> The following calls to the API
  reader.compareSub(0, 0, 1, 1) // returns 0 this is a query comparing the sub-array (0, 0) with the sub array (1, 1), (i.e. compares arr[0] with arr[1]).
  Thus we know that arr[0] and arr[1] doesn&#39;t contain the largest element.
  reader.compareSub(2, 2, 3, 3) // returns 0, we can exclude arr[2] and arr[3].
  reader.compareSub(4, 4, 5, 5) // returns 1, thus for sure arr[4] is the largest element in the array.
  Notice that we made only 3 calls, so the answer is valid.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [6,6,12]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= arr.length <= 5 * 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All elements of arr are equal except for one element which is larger
than all other elements.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
