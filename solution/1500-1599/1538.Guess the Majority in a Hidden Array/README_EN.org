* [[https://leetcode.com/problems/guess-the-majority-in-a-hidden-array][1538.
Guess the Majority in a Hidden Array]]
  :PROPERTIES:
  :CUSTOM_ID: guess-the-majority-in-a-hidden-array
  :END:
[[./solution/1500-1599/1538.Guess the Majority in a Hidden Array/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We have an integer array nums, where all the integers in nums are 0 or
1. You will not be given direct access to the array, instead, you will
have an API ArrayReader which have the following functions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

int query(int a, int b, int c, int d): where 0 <= a < b < c <
d < ArrayReader.length(). The function returns the distribution of the
value of the 4 elements and returns:

#+begin_example
  <ul>
      <li><strong>4 </strong>: if the values of the 4 elements are the same (0 or 1).</li>
      <li><strong>2</strong>&nbsp;: if three&nbsp;elements have a value&nbsp;equal to 0&nbsp;and one&nbsp;element has value equal to 1&nbsp;or vice versa.</li>
      <li><strong>0&nbsp;</strong>:&nbsp;if two element have a value equal to 0 and two elements have a value equal to 1.</li>
  </ul>
  </li>
  <li><code>int length()</code>: Returns the size of the array.</li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

You are allowed to call query() 2 * n times at most where n is equal to
ArrayReader.length().

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return any index of the most frequent value in nums, in case of tie,
return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow up: What is the minimum number of calls needed to find the
majority element?

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [0,0,1,0,1,1,1,1]
  <strong>Output:</strong> 5
  <strong>Explanation:</strong> The following calls to the API
  reader.length() // returns 8 because there are 8 elements in the hidden array.
  reader.query(0,1,2,3) // returns 2 this is a query that compares the elements nums[0], nums[1], nums[2], nums[3]
  // Three elements have a value equal to 0 and one element has value equal to 1 or viceversa.
  reader.query(4,5,6,7) // returns 4 because nums[4], nums[5], nums[6], nums[7] have the same value.
  we can infer that the most frequent value is found in the last 4 elements.
  Index 2, 4, 6, 7 is also a correct answer.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [0,0,1,1,0]
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,0,1,0,1,0,1,0]
  <strong>Output:</strong> -1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

5 <= nums.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] <= 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
