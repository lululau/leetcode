* [[https://leetcode.com/problems/shuffle-string][1528. Shuffle String]]
  :PROPERTIES:
  :CUSTOM_ID: shuffle-string
  :END:
[[./solution/1500-1599/1528.Shuffle String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string s and an integer array indices of the same length.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The string s will be shuffled such that the character at the ith
position moves to indices[i] in the shuffled string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the shuffled string.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;codeleet&quot;, <code>indices</code> = [4,5,6,7,0,2,1,3]

  <strong>Output:</strong> &quot;leetcode&quot;

  <strong>Explanation:</strong> As shown, &quot;codeleet&quot; becomes &quot;leetcode&quot; after shuffling.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;abc&quot;, <code>indices</code> = [0,1,2]

  <strong>Output:</strong> &quot;abc&quot;

  <strong>Explanation:</strong> After shuffling, each character remains in its position.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;aiohn&quot;, <code>indices</code> = [3,1,4,2,0]

  <strong>Output:</strong> &quot;nihao&quot;

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;aaiougrt&quot;, <code>indices</code> = [4,0,2,6,7,3,1,5]

  <strong>Output:</strong> &quot;arigatou&quot;

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> s = &quot;art&quot;, <code>indices</code> = [1,0,2]

  <strong>Output:</strong> &quot;rat&quot;

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

s.length == indices.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s contains only lower-case English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= indices[i] < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All values of indices are unique (i.e. indices is a permutation of the
integers from 0 to n - 1).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
