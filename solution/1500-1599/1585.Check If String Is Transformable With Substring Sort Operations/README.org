* [[https://leetcode-cn.com/problems/check-if-string-is-transformable-with-substring-sort-operations][1585.
检查字符串是否可以通过排序子字符串得到另一个字符串]]
  :PROPERTIES:
  :CUSTOM_ID: 检查字符串是否可以通过排序子字符串得到另一个字符串
  :END:
[[./solution/1500-1599/1585.Check If String Is Transformable With Substring Sort Operations/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个字符串 s
和 t ，请你通过若干次以下操作将字符串 s 转化成字符串 t ：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

选择 s 中一个 非空 子字符串并将它包含的字符就地 升序 排序。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

比方说，对下划线所示的子字符串进行操作可以由 "14234" 得到 "12344" 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果可以将字符串 s 变成 t ，返回 true 。否则，返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

一个 子字符串 定义为一个字符串中连续的若干字符。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = &quot;84532&quot;, t = &quot;34852&quot;
  <strong>输出：</strong>true
  <strong>解释：</strong>你可以按以下操作将 s 转变为 t ：
  &quot;84<strong>53</strong>2&quot; （从下标 2 到下标 3）-&gt; &quot;84<strong>35</strong>2&quot;
  &quot;<strong>843</strong>52&quot; （从下标 0 到下标 2） -&gt; &quot;<strong>348</strong>52&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = &quot;34521&quot;, t = &quot;23415&quot;
  <strong>输出：</strong>true
  <strong>解释：</strong>你可以按以下操作将 s 转变为 t ：
  &quot;<strong>3452</strong>1&quot; -&gt; &quot;<strong>2345</strong>1&quot;
  &quot;234<strong>51</strong>&quot; -&gt; &quot;234<strong>15</strong>&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = &quot;12345&quot;, t = &quot;12435&quot;
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>s = &quot;1&quot;, t = &quot;2&quot;
  <strong>输出：</strong>false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

s.length == t.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 和 t 都只包含数字字符，即 '0' 到 '9' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
