* [[https://leetcode-cn.com/problems/minimum-insertions-to-balance-a-parentheses-string][1541.
平衡括号字符串的最少插入次数]]
  :PROPERTIES:
  :CUSTOM_ID: 平衡括号字符串的最少插入次数
  :END:
[[./solution/1500-1599/1541.Minimum Insertions to Balance a Parentheses String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个括号字符串 s ，它只包含字符 '('
和 ')' 。一个括号字符串被称为平衡的当它满足：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

任何左括号 '(' 必须对应两个连续的右括号 '))' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

左括号 '(' 必须在对应的连续两个右括号 '))' 之前。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

比方说 "())"， "())(())))" 和 "(())())))" 都是平衡的， ")()"， "()))"
和 "(()))" 都是不平衡的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以在任意位置插入字符 '(' 和 ')' 使字符串平衡。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回让 s 平衡的最少插入次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;(()))&quot;
  <strong>输出：</strong>1
  <strong>解释：</strong>第二个左括号有与之匹配的两个右括号，但是第一个左括号只有一个右括号。我们需要在字符串结尾额外增加一个 &#39;)&#39; 使字符串变成平衡字符串 &quot;(())))&quot; 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;())&quot;
  <strong>输出：</strong>0
  <strong>解释：</strong>字符串已经平衡了。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;))())(&quot;
  <strong>输出：</strong>3
  <strong>解释：</strong>添加 &#39;(&#39; 去匹配最开头的 &#39;))&#39; ，然后添加 &#39;))&#39; 去匹配最后一个 &#39;(&#39; 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;((((((&quot;
  <strong>输出：</strong>12
  <strong>解释：</strong>添加 12 个 &#39;)&#39; 得到平衡字符串。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;)))))))&quot;
  <strong>输出：</strong>5
  <strong>解释：</strong>在字符串开头添加 4 个 &#39;(&#39; 并在结尾添加 1 个 &#39;)&#39; ，字符串变成平衡字符串 &quot;(((())))))))&quot; 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 只包含 '(' 和 ')' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
