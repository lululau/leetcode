* [[https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable][1579.
Remove Max Number of Edges to Keep Graph Fully Traversable]]
  :PROPERTIES:
  :CUSTOM_ID: remove-max-number-of-edges-to-keep-graph-fully-traversable
  :END:
[[./solution/1500-1599/1579.Remove Max Number of Edges to Keep Graph Fully Traversable/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Alice and Bob have an undirected graph of n nodes and 3 types of edges:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Type 1: Can be traversed by Alice only.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Type 2: Can be traversed by Bob only.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Type 3: Can by traversed by both Alice and Bob.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Given an array edges where edges[i] = [typei, ui, vi] represents a
bidirectional edge of type typei between nodes ui and vi, find the
maximum number of edges you can remove so that after removing the edges,
the graph can still be fully traversed by both Alice and Bob. The graph
is fully traversed by Alice and Bob if starting from any node, they can
reach all other nodes.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum number of edges you can remove, or return -1 if it's
impossible for the graph to be fully traversed by Alice and Bob.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, edges = [[3,1,2],[3,2,3],[1,1,3],[1,2,4],[1,1,2],[2,3,4]]
  <strong>Output:</strong> 2
  <strong>Explanation: </strong>If we remove the 2 edges [1,1,2] and [1,1,3]. The graph will still be fully traversable by Alice and Bob. Removing any additional edge will not make it so. So the maximum number of edges we can remove is 2.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, edges = [[3,1,2],[3,2,3],[1,1,4],[2,1,4]]
  <strong>Output:</strong> 0
  <strong>Explanation: </strong>Notice that removing any edge will not make the graph fully traversable by Alice and Bob.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, edges = [[3,2,3],[1,1,2],[2,3,4]]
  <strong>Output:</strong> -1
  <b>Explanation: </b>In the current graph, Alice cannot reach node 4 from the other nodes. Likewise, Bob cannot reach 1. Therefore it&#39;s impossible to make the graph fully traversable.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= edges.length <= min(10^5, 3 * n * (n-1) / 2)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges[i].length == 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= edges[i][0] <= 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= edges[i][1] < edges[i][2] <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All tuples (typei, ui, vi) are distinct.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
