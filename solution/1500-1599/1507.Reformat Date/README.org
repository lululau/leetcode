* [[https://leetcode-cn.com/problems/reformat-date][1507. 转变日期格式]]
  :PROPERTIES:
  :CUSTOM_ID: 转变日期格式
  :END:
[[./solution/1500-1599/1507.Reformat Date/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串 date ，它的格式为 Day Month Year ，其中：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Day 是集合 {"1st", "2nd", "3rd", "4th", ..., "30th",
"31st"} 中的一个元素。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Month 是集合 {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec"} 中的一个元素。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Year 的范围在 ​[1900, 2100] 之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请你将字符串转变为 YYYY-MM-DD 的格式，其中：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

YYYY 表示 4 位的年份。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

MM 表示 2 位的月份。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

DD 表示 2 位的天数。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>date = &quot;20th Oct 2052&quot;
  <strong>输出：</strong>&quot;2052-10-20&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>date = &quot;6th Jun 1933&quot;
  <strong>输出：</strong>&quot;1933-06-06&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>date = &quot;26th May 1960&quot;
  <strong>输出：</strong>&quot;1960-05-26&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

给定日期保证是合法的，所以不需要处理异常输入。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

切分 =date= 字符串，获取对应的 =year=, =month=,
=day=，然后拼接起来即可。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def reformatDate(self, date: str) -> str:
          months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
          mapper = {v: str(k + 1) for k, v in enumerate(months)}
          split = date.split(' ')
          year = split[2]
          month = mapper.get(split[1])
          day = split[0][:len(split[0]) - 2]
          return year + '-' + month.zfill(2) + '-' + day.zfill(2)
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public String reformatDate(String date) {
          Map<String, Integer> mapper = new HashMap<>();
          String[] months = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};
          for (int i = 0; i < months.length; ++i) {
              mapper.put(months[i], i + 1);
          }
          String[] split = date.split(" ");
          int year = Integer.parseInt(split[2]);
          int month = mapper.get(split[1]);
          int day = Integer.parseInt(split[0].substring(0, split[0].length() -2));
          return String.format("%d-%02d-%02d", year, month, day);
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
