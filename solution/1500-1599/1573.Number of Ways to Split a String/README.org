* [[https://leetcode-cn.com/problems/number-of-ways-to-split-a-string][1573.
分割字符串的方案数]]
  :PROPERTIES:
  :CUSTOM_ID: 分割字符串的方案数
  :END:
[[./solution/1500-1599/1573.Number of Ways to Split a String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个二进制串 s  （一个只包含 0 和 1 的字符串），我们可以将 s 分割成
3 个 非空 字符串 s1, s2, s3 （s1 + s2 + s3 = s）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回分割 s 的方案数，满足 s1，s2 和 s3 中字符 '1' 的数目相同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

由于答案可能很大，请将它对 10^9 + 7 取余后返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;10101&quot;
  <strong>输出：</strong>4
  <strong>解释：</strong>总共有 4 种方法将 s 分割成含有 &#39;1&#39; 数目相同的三个子字符串。
  &quot;1|010|1&quot;
  &quot;1|01|01&quot;
  &quot;10|10|1&quot;
  &quot;10|1|01&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;1001&quot;
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;0000&quot;
  <strong>输出：</strong>3
  <strong>解释：</strong>总共有 3 种分割 s 的方法。
  &quot;0|0|00&quot;
  &quot;0|00|0&quot;
  &quot;00|0|0&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;100100010100110&quot;
  <strong>输出：</strong>12
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

s[i] == '0' 或者 s[i] == '1'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= s.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
