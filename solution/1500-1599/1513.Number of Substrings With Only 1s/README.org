* [[https://leetcode-cn.com/problems/number-of-substrings-with-only-1s][1513.
仅含 1 的子串数]]
  :PROPERTIES:
  :CUSTOM_ID: 仅含-1-的子串数
  :END:
[[./solution/1500-1599/1513.Number of Substrings With Only 1s/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个二进制字符串 s（仅由 '0' 和 '1' 组成的字符串）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回所有字符都为 1 的子字符串的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

由于答案可能很大，请你将它对 10^9 + 7 取模后返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;0110111&quot;
  <strong>输出</strong>：9
  <strong>解释：</strong>共有 9 个子字符串仅由 &#39;1&#39; 组成
  &quot;1&quot; -&gt; 5 次
  &quot;11&quot; -&gt; 3 次
  &quot;111&quot; -&gt; 1 次</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;101&quot;
  <strong>输出：</strong>2
  <strong>解释：</strong>子字符串 &quot;1&quot; 在 s 中共出现 2 次
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;111111&quot;
  <strong>输出：</strong>21
  <strong>解释：</strong>每个子字符串都仅由 &#39;1&#39; 组成
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;000&quot;
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

s[i] == '0' 或 s[i] == '1'

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
