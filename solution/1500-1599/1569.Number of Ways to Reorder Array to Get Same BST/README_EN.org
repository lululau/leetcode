* [[https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst][1569.
Number of Ways to Reorder Array to Get Same BST]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-ways-to-reorder-array-to-get-same-bst
  :END:
[[./solution/1500-1599/1569.Number of Ways to Reorder Array to Get Same BST/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array nums that represents a permutation of integers
from 1 to n. We are going to construct a binary search tree (BST) by
inserting the elements of nums in order into an initially empty BST.
Find the number of different ways to reorder nums so that the
constructed BST is identical to that formed from the original
array nums.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For example, given nums = [2,1,3], we will have 2 as the root, 1 as a
left child, and 3 as a right child. The array [2,3,1] also yields the
same BST but [3,2,1] yields a different BST.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of ways to reorder nums such that the BST formed is
identical to the original BST formed from nums.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Since the answer may be very large, return it modulo 10^9 + 7.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [2,1,3]
  <strong>Output:</strong> 1
  <strong>Explanation: </strong>We can reorder nums to be [2,3,1] which will yield the same BST. There are no other ways to reorder nums which will yield the same BST.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [3,4,5,1,2]
  <strong>Output:</strong> 5
  <b>Explanation: </b>The following 5 arrays will yield the same BST: 
  [3,1,2,4,5]
  [3,1,4,2,5]
  [3,1,4,5,2]
  [3,4,1,2,5]
  [3,4,1,5,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3]
  <strong>Output:</strong> 0
  <strong>Explanation: </strong>There are no other orderings of nums that will yield the same BST.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [3,1,2,5,4,6]
  <strong>Output:</strong> 19
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [9,4,2,1,3,6,5,7,8,14,11,10,12,13,16,15,17,18]
  <strong>Output:</strong> 216212978
  <strong>Explanation: </strong>The number of ways to reorder nums to get the same BST is 3216212999. Taking this number modulo 10^9 + 7 gives 216212978.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= nums.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All integers in nums are distinct.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
