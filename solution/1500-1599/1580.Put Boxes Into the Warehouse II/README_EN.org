* [[https://leetcode.com/problems/put-boxes-into-the-warehouse-ii][1580.
Put Boxes Into the Warehouse II]]
  :PROPERTIES:
  :CUSTOM_ID: put-boxes-into-the-warehouse-ii
  :END:
[[./solution/1500-1599/1580.Put Boxes Into the Warehouse II/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given two arrays of positive integers, boxes and warehouse,
representing the heights of some boxes of unit width and the heights of
n rooms in a warehouse respectively. The warehouse's rooms are labeled
from 0 to n - 1 from left to right where warehouse[i] (0-indexed) is the
height of the ith room.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Boxes are put into the warehouse by the following rules:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Boxes cannot be stacked.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

You can rearrange the insertion order of the boxes.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Boxes can be pushed into the warehouse from either side (left or right)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If the height of some room in the warehouse is less than the height of a
box, then that box and all other boxes behind it will be stopped before
that room.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum number of boxes you can put into the warehouse.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> boxes = [1,2,2,3,4], warehouse = [3,4,1,2]

  <strong>Output:</strong> 4

  <strong>Explanation:

  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1580.Put Boxes Into the Warehouse II/images/22-1.png" style="width: 240px; height: 202px;" />

  </strong>We can store the boxes in the following order:

  1- Put the yellow box in room 2 from either the left or right side.

  2- Put the orange box in room 3 from the right side.

  3- Put the green box in room 1 from the left side.

  4- Put the red box in room 0 from the left side.

  Notice that there are other valid ways to put 4 boxes such as swapping the red and green boxes or the red and orange boxes.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> boxes = [3,5,5,2], warehouse = [2,1,3,4,5]

  <strong>Output:</strong> 3

  <strong>Explanation:

  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1580.Put Boxes Into the Warehouse II/images/22-3.png" style="width: 280px; height: 242px;" />

  </strong>It&#39;s not possible to put the two boxes of height 5 in the warehouse since there&#39;s only 1 room of height &gt;= 5.

  Other valid solutions are to put the green box in room 2 or to put the orange box first in room 2 before putting the green and red boxes.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> boxes = [1,2,3], warehouse = [1,2,3,4]

  <strong>Output:</strong> 3

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> boxes = [4,5,6], warehouse = [3,3,3,3,3]

  <strong>Output:</strong> 0

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == warehouse.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= boxes.length, warehouse.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= boxes[i], warehouse[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
