* [[https://leetcode-cn.com/problems/put-boxes-into-the-warehouse-ii][1580.
把箱子放进仓库里 II]]
  :PROPERTIES:
  :CUSTOM_ID: 把箱子放进仓库里-ii
  :END:
[[./solution/1500-1599/1580.Put Boxes Into the Warehouse II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定两个正整数数组 boxes 和
warehouse ，分别包含单位宽度的箱子的高度，以及仓库中n个房间各自的高度。仓库的房间分别从0 到
n - 1自左向右编号，warehouse[i]（索引从 0 开始）是第 i 个房间的高度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

箱子放进仓库时遵循下列规则：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

箱子不可叠放。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

你可以重新调整箱子的顺序。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

箱子可以从任意方向（左边或右边）推入仓库中。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果仓库中某房间的高度小于某箱子的高度，则这个箱子和之后的箱子都会停在这个房间的前面。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

你最多可以在仓库中放进多少个箱子？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> boxes = [1,2,2,3,4], warehouse = [3,4,1,2]
  <strong>输出:</strong> 4
  <strong>解释:
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1580.Put Boxes Into the Warehouse II/images/22-1.png" style="width: 240px; height: 202px;" />
  </strong>我们可以按如下顺序推入箱子:
  1- 从左边或右边把黄色箱子推入2号房间；
  2- 从右边把橙色箱子推入3号房间；
  3- 从左边把绿色箱子推入1号房间；
  4- 从左边把红色箱子推入0号房间；
  还有其他方式推入4个箱子，比如交换红色与绿色箱子，或者交换红色与橙色箱子。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> boxes = [3,5,5,2], warehouse = [2,1,3,4,5]
  <strong>输出:</strong> 3
  <strong>解释:
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1580.Put Boxes Into the Warehouse II/images/22-3.png" style="width: 280px; height: 242px;" />
  </strong>因为只有一个高度大于等于5的房间，所以无法将两个高度为5的箱子都推入仓库。
  还有其他方式推入箱子，比如将绿色箱子推入2号房间，或者在绿色及红色箱子之前将橙色箱子推入2号房间。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> boxes = [1,2,3], warehouse = [1,2,3,4]
  <strong>输出:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> boxes = [4,5,6], warehouse = [3,3,3,3,3]
  <strong>输出:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

n == warehouse.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= boxes.length, warehouse.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= boxes[i], warehouse[i] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
