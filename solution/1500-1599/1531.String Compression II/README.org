* [[https://leetcode-cn.com/problems/string-compression-ii][1531.
压缩字符串 II]]
  :PROPERTIES:
  :CUSTOM_ID: 压缩字符串-ii
  :END:
[[./solution/1500-1599/1531.String Compression II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

行程长度编码 是一种常用的字符串压缩方法，它将连续的相同字符（重复 2
次或更多次）替换为字符和表示字符计数的数字（行程长度）。例如，用此方法压缩字符串
"aabccc" ，将 "aa" 替换为 "a2" ，"ccc" 替换为` "c3"
。因此压缩后的字符串变为 "a2bc3" 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，本问题中，压缩时没有在单个字符后附加计数 '1' 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串 s 和一个整数 k 。你需要从字符串 s 中删除最多 k
个字符，以使 s 的行程长度编码长度最小。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回删除最多 k 个字符后，s 行程长度编码的最小长度 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;aaabcccd&quot;, k = 2
  <strong>输出：</strong>4
  <strong>解释：</strong>在不删除任何内容的情况下，压缩后的字符串是 &quot;a3bc3d&quot; ，长度为 6 。最优的方案是删除 &#39;b&#39; 和 &#39;d&#39;，这样一来，压缩后的字符串为 &quot;a3c3&quot; ，长度是 4 。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;aabbaa&quot;, k = 2
  <strong>输出：</strong>2
  <strong>解释：</strong>如果删去两个 &#39;b&#39; 字符，那么压缩后的字符串是长度为 2 的 &quot;a4&quot; 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;aaaaaaaaaaa&quot;, k = 0
  <strong>输出：</strong>3
  <strong>解释：</strong>由于 k 等于 0 ，不能删去任何字符。压缩后的字符串是 &quot;a11&quot; ，长度为 3 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= k <= s.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 仅包含小写英文字母

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
