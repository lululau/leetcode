* [[https://leetcode-cn.com/problems/count-unhappy-friends][1583.
统计不开心的朋友]]
  :PROPERTIES:
  :CUSTOM_ID: 统计不开心的朋友
  :END:
[[./solution/1500-1599/1583.Count Unhappy Friends/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一份 n 位朋友的亲近程度列表，其中 n 总是 偶数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

对每位朋友 i，preferences[i] 包含一份 按亲近程度从高到低排列
的朋友列表。换句话说，排在列表前面的朋友与 i
的亲近程度比排在列表后面的朋友更高。每个列表中的朋友均以 0 到 n-1
之间的整数表示。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

所有的朋友被分成几对，配对情况以列表 pairs 给出，其中 pairs[i] = [xi,
yi] 表示 xi 与 yi 配对，且 yi 与 xi 配对。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

但是，这样的配对情况可能会是其中部分朋友感到不开心。在 x 与 y 配对且 u
与 v 配对的情况下，如果同时满足下述两个条件，x 就会不开心：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

x 与 u 的亲近程度胜过 x 与 y，且

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

u 与 x 的亲近程度胜过 u 与 v

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

返回 不开心的朋友的数目 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]
  <strong>输出：</strong>2
  <strong>解释：</strong>
  朋友 1 不开心，因为：
  - <strong>1 与 0 </strong>配对，但 <strong>1 与 3</strong> 的亲近程度比 <strong>1 与 0</strong> 高，且
  - <strong>3 与 1</strong> 的亲近程度比 <strong>3 与 2</strong> 高。
  朋友 3 不开心，因为：
  - 3 与 2 配对，但 <strong>3 与 1</strong> 的亲近程度比 <strong>3 与 2</strong> 高，且
  - <strong>1 与 3</strong> 的亲近程度比 <strong>1 与 0</strong> 高。
  朋友 0 和 2 都是开心的。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 2, preferences = [[1], [0]], pairs = [[1, 0]]
  <strong>输出：</strong>0
  <strong>解释：</strong>朋友 0 和 1 都开心。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]
  <strong>输出：</strong>4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n 是偶数

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences[i].length == n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= preferences[i][j] <= n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences[i] 不包含 i

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences[i] 中的所有值都是独一无二的

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

pairs.length == n/2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

pairs[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

xi != yi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= xi, yi <= n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

每位朋友都 恰好 被包含在一对中

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
