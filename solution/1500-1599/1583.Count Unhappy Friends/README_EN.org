* [[https://leetcode.com/problems/count-unhappy-friends][1583. Count
Unhappy Friends]]
  :PROPERTIES:
  :CUSTOM_ID: count-unhappy-friends
  :END:
[[./solution/1500-1599/1583.Count Unhappy Friends/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a list of preferences for n friends, where n is always
even.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

For each person i, preferences[i] contains a list of friends sorted in
the order of preference. In other words, a friend earlier in the list is
more preferred than a friend later in the list. Friends in each list
are denoted by integers from 0 to n-1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

All the friends are divided into pairs. The pairings are given in a
list pairs, where pairs[i] = [xi, yi] denotes xi is paired with yi and
yi is paired with xi.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

However, this pairing may cause some of the friends to be unhappy. A
friend x is unhappy if x is paired with y and there exists a friend
u who is paired with v but:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

x prefers u over y, and

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

u prefers x over v.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of unhappy friends.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong>
  Friend 1 is unhappy because:
  - 1 is paired with 0 but prefers 3 over 0, and
  - 3 prefers 1 over 2.
  Friend 3 is unhappy because:
  - 3 is paired with 2 but prefers 1 over 2, and
  - 1 prefers 3 over 0.
  Friends 0 and 2 are happy.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 2, preferences = [[1], [0]], pairs = [[1, 0]]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> Both friends 0 and 1 are happy.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n is even.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences[i].length == n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= preferences[i][j] <= n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

preferences[i] does not contain i.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All values in preferences[i] are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

pairs.length == n/2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

pairs[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

xi != yi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= xi, yi <= n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Each person is contained in exactly one pair.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
