* [[https://leetcode-cn.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label][1519.
子树中标签相同的节点数]]
  :PROPERTIES:
  :CUSTOM_ID: 子树中标签相同的节点数
  :END:
[[./solution/1500-1599/1519.Number of Nodes in the Sub-Tree With the Same Label/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一棵树（即，一个连通的无环无向图），这棵树由编号从 0  到 n - 1 的 n
个节点组成，且恰好有 n - 1 条 edges 。树的根节点为节点 0
，树上的每一个节点都有一个标签，也就是字符串 labels
中的一个小写字符（编号为 i 的 节点的标签就是 labels[i] ）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

边数组 edges 以 edges[i] = [ai, bi] 的形式给出，该格式表示节点 ai 和 bi
之间存在一条边。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回一个大小为 n 的数组，其中 ans[i] 表示第 i 个节点的子树中与节点 i
标签相同的节点数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

树 T 中的子树是由 T 中的某个节点及其所有后代节点组成的树。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], labels = &quot;abaedcd&quot;
  <strong>输出：</strong>[2,1,1,1,1,1,1]
  <strong>解释：</strong>节点 0 的标签为 &#39;a&#39; ，以 &#39;a&#39; 为根节点的子树中，节点 2 的标签也是 &#39;a&#39; ，因此答案为 2 。注意树中的每个节点都是这棵子树的一部分。
  节点 1 的标签为 &#39;b&#39; ，节点 1 的子树包含节点 1、4 和 5，但是节点 4、5 的标签与节点 1 不同，故而答案为 1（即，该节点本身）。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 4, edges = [[0,1],[1,2],[0,3]], labels = &quot;bbbb&quot;
  <strong>输出：</strong>[4,2,1,1]
  <strong>解释：</strong>节点 2 的子树中只有节点 2 ，所以答案为 1 。
  节点 3 的子树中只有节点 3 ，所以答案为 1 。
  节点 1 的子树中包含节点 1 和 2 ，标签都是 &#39;b&#39; ，因此答案为 2 。
  节点 0 的子树中包含节点 0、1、2 和 3，标签都是 &#39;b&#39;，因此答案为 4 。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 5, edges = [[0,1],[0,2],[1,3],[0,4]], labels = &quot;aabab&quot;
  <strong>输出：</strong>[3,2,1,1,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 6, edges = [[0,1],[0,2],[1,3],[3,4],[4,5]], labels = &quot;cbabaa&quot;
  <strong>输出：</strong>[1,2,1,1,2,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 5：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 7, edges = [[0,1],[1,2],[2,3],[3,4],[4,5],[5,6]], labels = &quot;aaabaaa&quot;
  <strong>输出：</strong>[6,5,4,1,3,2,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges.length == n - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= ai, bi < n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ai != bi

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

labels.length == n

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

labels 仅由小写英文字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
