* [[https://leetcode-cn.com/problems/special-positions-in-a-binary-matrix][1582.
二进制矩阵中的特殊位置]]
  :PROPERTIES:
  :CUSTOM_ID: 二进制矩阵中的特殊位置
  :END:
[[./solution/1500-1599/1582.Special Positions in a Binary Matrix/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个大小为 rows x cols 的矩阵 mat，其中 mat[i][j] 是 0 或 1，请返回
矩阵 mat 中特殊位置的数目 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

特殊位置 定义：如果 mat[i][j] == 1 并且第 i 行和第 j
列中的所有其他元素均为 0（行和列的下标均 从 0 开始 ），则位置 (i, j)
被称为特殊位置。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[1,0,0],
  &nbsp;           [0,0,<strong>1</strong>],
  &nbsp;           [1,0,0]]
  <strong>输出：</strong>1
  <strong>解释：</strong>(1,2) 是一个特殊位置，因为 mat[1][2] == 1 且所处的行和列上所有其他元素都是 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[<strong>1</strong>,0,0],
  &nbsp;           [0,<strong>1</strong>,0],
  &nbsp;           [0,0,<strong>1</strong>]]
  <strong>输出：</strong>3
  <strong>解释：</strong>(0,0), (1,1) 和 (2,2) 都是特殊位置
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[0,0,0,<strong>1</strong>],
  &nbsp;           [<strong>1</strong>,0,0,0],
  &nbsp;           [0,1,1,0],
  &nbsp;           [0,0,0,0]]
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>mat = [[0,0,0,0,0],
  &nbsp;           [<strong>1</strong>,0,0,0,0],
  &nbsp;           [0,<strong>1</strong>,0,0,0],
  &nbsp;           [0,0,<strong>1</strong>,0,0],
  &nbsp;           [0,0,0,1,1]]
  <strong>输出：</strong>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

rows == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cols == mat[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= rows, cols <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i][j] 是 0 或 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
