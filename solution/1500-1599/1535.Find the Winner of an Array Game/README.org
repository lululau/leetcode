* [[https://leetcode-cn.com/problems/find-the-winner-of-an-array-game][1535.
找出数组游戏的赢家]]
  :PROPERTIES:
  :CUSTOM_ID: 找出数组游戏的赢家
  :END:
[[./solution/1500-1599/1535.Find the Winner of an Array Game/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个由 不同 整数组成的整数数组 arr 和一个整数 k 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每回合游戏都在数组的前两个元素（即 arr[0] 和 arr[1] ）之间进行。比较
arr[0] 与 arr[1] 的大小，较大的整数将会取得这一回合的胜利并保留在位置 0
，较小的整数移至数组的末尾。当一个整数赢得 k
个连续回合时，游戏结束，该整数就是比赛的 赢家 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回赢得比赛的整数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

题目数据 保证 游戏存在赢家。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [2,1,3,5,4,6,7], k = 2
  <strong>输出：</strong>5
  <strong>解释：</strong>一起看一下本场游戏每回合的情况：
  <img alt="" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/1500-1599/1535.Find the Winner of an Array Game/images/q-example.png" style="height: 90px; width: 400px;">
  因此将进行 4 回合比赛，其中 5 是赢家，因为它连胜 2 回合。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [3,2,1], k = 10
  <strong>输出：</strong>3
  <strong>解释：</strong>3 将会在前 10 个回合中连续获胜。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,9,8,2,3,7,6,4,5], k = 7
  <strong>输出：</strong>9
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,11,22,33,44,55,66,77,88,99], k = 1000000000
  <strong>输出：</strong>99
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= arr.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

arr 所含的整数 各不相同 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
