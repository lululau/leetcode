* [[https://leetcode.com/problems/remove-covered-intervals][1288. Remove
Covered Intervals]]
  :PROPERTIES:
  :CUSTOM_ID: remove-covered-intervals
  :END:
[[./solution/1200-1299/1288.Remove Covered Intervals/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a list of intervals, remove all intervals that are covered by
another interval in the list.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Interval [a,b) is covered by interval [c,d) if and only if c <= a and b
<= d.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

After doing so, return the number of remaining intervals.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> intervals = [[1,4],[3,6],[2,8]]

  <strong>Output:</strong> 2

  <b>Explanation: </b>Interval [3,6] is covered by [2,8], therefore it is removed.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> intervals = [[1,4],[2,3]]

  <strong>Output:</strong> 1

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> intervals = [[0,10],[5,12]]

  <strong>Output:</strong> 2

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> intervals = [[3,10],[4,10],[5,11]]

  <strong>Output:</strong> 2

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> intervals = [[1,2],[1,4],[3,4]]

  <strong>Output:</strong> 1

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= intervals.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

intervals[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= intervals[i][0] < intervals[i][1] <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

All the intervals are unique.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
