* [[https://leetcode.com/problems/queens-that-can-attack-the-king][1222.
Queens That Can Attack the King]]
  :PROPERTIES:
  :CUSTOM_ID: queens-that-can-attack-the-king
  :END:
[[./solution/1200-1299/1222.Queens That Can Attack the King/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

On an 8x8 chessboard, there can be multiple Black Queens and one White
King.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an array of integer coordinates queens that represents the
positions of the Black Queens, and a pair of coordinates king that
represent the position of the White King, return the coordinates of all
the queens (in any order) that can attack the King.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> queens = [[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], king = [0,0]

  <strong>Output:</strong> [[0,1],[1,0],[3,3]]

  <strong>Explanation:</strong>&nbsp; 

  The queen at [0,1] can attack the king cause they&#39;re in the same row. 

  The queen at [1,0] can attack the king cause they&#39;re in the same column. 

  The queen at [3,3] can attack the king cause they&#39;re in the same diagnal. 

  The queen at [0,4] can&#39;t attack the king cause it&#39;s blocked by the queen at [0,1]. 

  The queen at [4,0] can&#39;t attack the king cause it&#39;s blocked by the queen at [1,0]. 

  The queen at [2,4] can&#39;t attack the king cause it&#39;s not in the same row/column/diagnal as the king.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> queens = [[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], king = [3,3]

  <strong>Output:</strong> [[2,2],[3,4],[4,4]]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> queens = [[5,6],[7,7],[2,1],[0,7],[1,6],[5,1],[3,7],[0,3],[4,0],[1,2],[6,3],[5,0],[0,4],[2,2],[1,1],[6,4],[5,4],[0,0],[2,6],[4,5],[5,2],[1,4],[7,5],[2,3],[0,5],[4,2],[1,0],[2,7],[0,1],[4,6],[6,1],[0,6],[4,3],[1,7]], king = [3,4]

  <strong>Output:</strong> [[2,3],[1,4],[1,6],[3,7],[4,3],[5,4],[4,5]]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= queens.length <= 63

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

queens[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= queens[i][j] < 8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

king.length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= king[0], king[1] < 8

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

At most one piece is allowed in a cell.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
