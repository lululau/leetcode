* [[https://leetcode-cn.com/problems/find-the-smallest-divisor-given-a-threshold][1283.
使结果不超过阈值的最小除数]]
  :PROPERTIES:
  :CUSTOM_ID: 使结果不超过阈值的最小除数
  :END:
[[./solution/1200-1299/1283.Find the Smallest Divisor Given a Threshold/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums 和一个正整数 threshold
 ，你需要选择一个正整数作为除数，然后将数组里每个数都除以它，并对除法结果求和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你找出能够使上述结果小于等于阈值 threshold 的除数中 最小 的那个。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每个数除以除数后都向上取整，比方说 7/3 = 3 ， 10/2 = 5 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

题目保证一定有解。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [1,2,5,9], threshold = 6
  <strong>输出：</strong>5
  <strong>解释：</strong>如果除数为 1 ，我们可以得到和为 17 （1+2+5+9）。
  如果除数为 4 ，我们可以得到和为 7 (1+1+2+3) 。如果除数为 5 ，和为 5 (1+1+1+2)。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [2,3,5,7,11], threshold = 11
  <strong>输出：</strong>3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [19], threshold = 5
  <strong>输出：</strong>4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 5 * 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length <= threshold <= 10^6

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
