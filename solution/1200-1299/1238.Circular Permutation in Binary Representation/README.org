* [[https://leetcode-cn.com/problems/circular-permutation-in-binary-representation][1238.
循环码排列]]
  :PROPERTIES:
  :CUSTOM_ID: 循环码排列
  :END:
[[./solution/1200-1299/1238.Circular Permutation in Binary Representation/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你两个整数 n 和 start。你的任务是返回任意 (0,1,2,,...,2^n-1) 的排列
p，并且满足：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

p[0] = start

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

p[i] 和 p[i+1] 的二进制表示形式只有一位不同

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

p[0] 和 p[2^n -1] 的二进制表示形式也只有一位不同

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>n = 2, start = 3
  <strong>输出：</strong>[3,2,0,1]
  <strong>解释：</strong>这个排列的二进制表示是 (11,10,00,01)
       所有的相邻元素都有一位是不同的，另一个有效的排列是 [3,1,0,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输出：</strong>n = 3, start = 2
  <strong>输出：</strong>[2,6,7,5,4,0,1,3]
  <strong>解释：</strong>这个排列的二进制表示是 (010,110,111,101,100,000,001,011)
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 16

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= start < 2^n

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
