* [[https://leetcode.com/problems/circular-permutation-in-binary-representation][1238.
Circular Permutation in Binary Representation]]
  :PROPERTIES:
  :CUSTOM_ID: circular-permutation-in-binary-representation
  :END:
[[./solution/1200-1299/1238.Circular Permutation in Binary Representation/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given 2 integers n and start. Your task is return any permutation p of
(0,1,2.....,2^n -1) such that :

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

p[0] = start

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

p[i] and p[i+1] differ by only one bit in their binary representation.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

p[0] and p[2^n -1] must also differ by only one bit in their binary
representation.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = 2, start = 3

  <strong>Output:</strong> [3,2,0,1]

  <strong>Explanation:</strong> The binary representation of the permutation is (11,10,00,01). 

  All the adjacent element differ by one bit. Another valid permutation is [3,1,0,2]

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> n = 3, start = 2

  <strong>Output:</strong> [2,6,7,5,4,0,1,3]

  <strong>Explanation:</strong> The binary representation of the permutation is (010,110,111,101,100,000,001,011).

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 16

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= start < 2 ^ n

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
