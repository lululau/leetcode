* [[https://leetcode-cn.com/problems/remove-interval][1272. 删除区间]]
  :PROPERTIES:
  :CUSTOM_ID: 删除区间
  :END:
[[./solution/1200-1299/1272.Remove Interval/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

实数集合可以表示为若干不相交区间的并集，其中每个区间的形式为 [a,
b)（左闭右开），表示满足 a <= x < b 的所有实数 
x 的集合。如果某个区间 [a, b) 中包含实数 x ，则称实数 x 在集合中。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个 有序的 不相交区间列表 intervals 和一个要删除的区间 toBeRemoved
。intervals 表示一个实数集合，其中每一项 intervals[i] = [ai, bi]
都表示一个区间 [ai, bi) 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你 intervals 中任意区间与 toBeRemoved
有交集的部分都删除。返回删除所有交集区间后， intervals 剩余部分的 有序
列表。换句话说，返回实数集合，并满足集合中的每个实数 x 都在 intervals
中，但不在 toBeRemoved 中。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>intervals = [[0,2],[3,4],[5,7]], toBeRemoved = [1,6]
  <strong>输出：</strong>[[0,1],[6,7]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>intervals = [[0,5]], toBeRemoved = [2,3]
  <strong>输出：</strong>[[0,2],[3,5]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>intervals = [[-5,-4],[-3,-2],[1,2],[3,5],[8,9]], toBeRemoved = [-1,4]
  <strong>输出：</strong>[[-5,-4],[-3,-2],[4,5],[8,9]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= intervals.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= ai < bi <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
