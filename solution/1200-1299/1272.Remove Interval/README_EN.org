* [[https://leetcode.com/problems/remove-interval][1272. Remove
Interval]]
  :PROPERTIES:
  :CUSTOM_ID: remove-interval
  :END:
[[./solution/1200-1299/1272.Remove Interval/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

A set of real numbers can be represented as the union of several
disjoint intervals, where each interval is in the form [a, b). A real
number x is in the set if one of its intervals [a, b) contains x (i.e. a
<= x < b).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given a sorted list of disjoint intervals intervals representing
a set of real numbers as described above, where intervals[i] = [ai, bi]
represents the interval [ai, bi). You are also given another interval
toBeRemoved.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the set of real numbers with the interval toBeRemoved removed
from intervals. In other words, return the set of real numbers such that
every x in the set is in intervals but not in toBeRemoved. Your answer
should be a sorted list of disjoint intervals as described above.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> intervals = [[0,2],[3,4],[5,7]], toBeRemoved = [1,6]
  <strong>Output:</strong> [[0,1],[6,7]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> intervals = [[0,5]], toBeRemoved = [2,3]
  <strong>Output:</strong> [[0,2],[3,5]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> intervals = [[-5,-4],[-3,-2],[1,2],[3,5],[8,9]], toBeRemoved = [-1,4]
  <strong>Output:</strong> [[-5,-4],[-3,-2],[4,5],[8,9]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= intervals.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-109 <= ai < bi <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
