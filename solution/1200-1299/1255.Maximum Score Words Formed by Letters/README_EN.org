* [[https://leetcode.com/problems/maximum-score-words-formed-by-letters][1255.
Maximum Score Words Formed by Letters]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-score-words-formed-by-letters
  :END:
[[./solution/1200-1299/1255.Maximum Score Words Formed by Letters/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a list of words, list of  single letters (might be repeating) and
score of every character.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the maximum score of any valid set of words formed by using the
given letters (words[i] cannot be used two or more times).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It is not necessary to use all characters in letters and each letter can
only be used once. Score of letters 'a', 'b', 'c', ... ,'z' is given
by score[0], score[1], ... , score[25] respectively.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;dog&quot;,&quot;cat&quot;,&quot;dad&quot;,&quot;good&quot;], letters = [&quot;a&quot;,&quot;a&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d&quot;,&quot;d&quot;,&quot;g&quot;,&quot;o&quot;,&quot;o&quot;], score = [1,0,9,5,0,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0]
  <strong>Output:</strong> 23
  <strong>Explanation:</strong>
  Score  a=1, c=9, d=5, g=3, o=2
  Given letters, we can form the words &quot;dad&quot; (5+1+5) and &quot;good&quot; (3+2+2+5) with a score of 23.
  Words &quot;dad&quot; and &quot;dog&quot; only get a score of 21.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;xxxz&quot;,&quot;ax&quot;,&quot;bx&quot;,&quot;cx&quot;], letters = [&quot;z&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;x&quot;,&quot;x&quot;,&quot;x&quot;], score = [4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,10]
  <strong>Output:</strong> 27
  <strong>Explanation:</strong>
  Score  a=4, b=4, c=4, x=5, z=10
  Given letters, we can form the words &quot;ax&quot; (4+5), &quot;bx&quot; (4+5) and &quot;cx&quot; (4+5) with a score of 27.
  Word &quot;xxxz&quot; only get a score of 25.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> words = [&quot;leetcode&quot;], letters = [&quot;l&quot;,&quot;e&quot;,&quot;t&quot;,&quot;c&quot;,&quot;o&quot;,&quot;d&quot;], score = [0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong>
  Letter &quot;e&quot; can only be used once.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 14

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 15

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= letters.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

letters[i].length == 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

score.length == 26

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= score[i] <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i], letters[i] contains only lower case English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
