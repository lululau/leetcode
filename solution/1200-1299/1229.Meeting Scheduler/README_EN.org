* [[https://leetcode.com/problems/meeting-scheduler][1229. Meeting
Scheduler]]
  :PROPERTIES:
  :CUSTOM_ID: meeting-scheduler
  :END:
[[./solution/1200-1299/1229.Meeting Scheduler/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given the availability time slots arrays slots1 and slots2 of two people
and a meeting duration duration, return the earliest time slot that
works for both of them and is of duration duration.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

If there is no common time slot that satisfies the requirements, return
an empty array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The format of a time slot is an array of two elements [start, end]
representing an inclusive time range from start to end.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

It is guaranteed that no two availability slots of the same person
intersect with each other. That is, for any two time slots [start1,
end1] and [start2, end2] of the same person, either start1 > end2 or
start2 > end1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> slots1 = [[10,50],[60,120],[140,210]], slots2 = [[0,15],[60,70]], duration = 8
  <strong>Output:</strong> [60,68]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> slots1 = [[10,50],[60,120],[140,210]], slots2 = [[0,15],[60,70]], duration = 12
  <strong>Output:</strong> []
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= slots1.length, slots2.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

slots1[i].length, slots2[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

slots1[i][0] < slots1[i][1]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

slots2[i][0] < slots2[i][1]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= slots1[i][j], slots2[i][j] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= duration <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
