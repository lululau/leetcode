* [[https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii][1209.
Remove All Adjacent Duplicates in String II]]
  :PROPERTIES:
  :CUSTOM_ID: remove-all-adjacent-duplicates-in-string-ii
  :END:
[[./solution/1200-1299/1209.Remove All Adjacent Duplicates in String II/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given a string s and an integer k, a k duplicate removal
consists of choosing k adjacent and equal letters from s and removing
them, causing the left and the right side of the deleted substring to
concatenate together.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We repeatedly make k duplicate removals on s until we no longer can.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the final string after all such duplicate removals have been
made. It is guaranteed that the answer is unique.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;abcd&quot;, k = 2
  <strong>Output:</strong> &quot;abcd&quot;
  <strong>Explanation: </strong>There&#39;s nothing to delete.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;deeedbbcccbdaa&quot;, k = 3
  <strong>Output:</strong> &quot;aa&quot;
  <strong>Explanation: 
  </strong>First delete &quot;eee&quot; and &quot;ccc&quot;, get &quot;ddbbbdaa&quot;
  Then delete &quot;bbb&quot;, get &quot;dddaa&quot;
  Finally delete &quot;ddd&quot;, get &quot;aa&quot;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;pbbcggttciiippooaais&quot;, k = 2
  <strong>Output:</strong> &quot;ps&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= k <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s only contains lower case English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
