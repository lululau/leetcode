* [[https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string-ii][1209.
删除字符串中的所有相邻重复项 II]]
  :PROPERTIES:
  :CUSTOM_ID: 删除字符串中的所有相邻重复项-ii
  :END:
[[./solution/1200-1299/1209.Remove All Adjacent Duplicates in String II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串 s，「k 倍重复项删除操作」将会从
s 中选择 k 个相邻且相等的字母，并删除它们，使被删去的字符串的左侧和右侧连在一起。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你需要对 s 重复进行无限次这样的删除操作，直到无法继续为止。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在执行完所有删除操作后，返回最终得到的字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

本题答案保证唯一。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;abcd&quot;, k = 2
  <strong>输出：</strong>&quot;abcd&quot;
  <strong>解释：</strong>没有要删除的内容。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;deeedbbcccbdaa&quot;, k = 3
  <strong>输出：</strong>&quot;aa&quot;
  <strong>解释： 
  </strong>先删除 &quot;eee&quot; 和 &quot;ccc&quot;，得到 &quot;ddbbbdaa&quot;
  再删除 &quot;bbb&quot;，得到 &quot;dddaa&quot;
  最后删除 &quot;ddd&quot;，得到 &quot;aa&quot;</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;pbbcggttciiippooaais&quot;, k = 2
  <strong>输出：</strong>&quot;ps&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= k <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 中只含有小写英文字母。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
