* [[https://leetcode.com/problems/array-transformation][1243. Array
Transformation]]
  :PROPERTIES:
  :CUSTOM_ID: array-transformation
  :END:
[[./solution/1200-1299/1243.Array Transformation/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an initial array arr, every day you produce a new array using the
array of the previous day.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

On the i-th day, you do the following operations on the array of
day i-1 to produce the array of day i:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

If an element is smaller than both its left neighbor and its right
neighbor, then this element is incremented.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If an element is bigger than both its left neighbor and its right
neighbor, then this element is decremented.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The first and last elements never change.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

After some days, the array does not change. Return that final array.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [6,2,3,4]
  <strong>Output:</strong> [6,3,3,4]
  <strong>Explanation: </strong>
  On the first day, the array is changed from [6,2,3,4] to [6,3,3,4].
  No more operations can be done to this array.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> arr = [1,6,3,4,3,5]
  <strong>Output:</strong> [1,4,4,4,4,5]
  <strong>Explanation: </strong>
  On the first day, the array is changed from [1,6,3,4,3,5] to [1,5,4,3,4,5].
  On the second day, the array is changed from [1,5,4,3,4,5] to [1,4,4,4,4,5].
  No more operations can be done to this array.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

3 <= arr.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def transformArray(self, arr: List[int]) -> List[int]:
          copy = [e for e in arr]
          has_change, n = True, len(arr)
          while has_change:
              has_change = False
              for i in range(1, n - 1):
                  if arr[i] < copy[i - 1] and arr[i] < copy[i + 1]:
                      arr[i] += 1
                      has_change = True
                  elif arr[i] > copy[i - 1] and arr[i] > copy[i + 1]:
                      arr[i] -= 1
                      has_change = True
              copy = [e for e in arr]
          return arr
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public List<Integer> transformArray(int[] arr) {
          int n = arr.length;
          int[] copy = Arrays.copyOf(arr, n);
          boolean hasChange = true;
          while (hasChange) {
              hasChange = false;
              for (int i = 1; i < n - 1; ++i) {
                  if (arr[i] < copy[i - 1] && arr[i] < copy[i + 1]) {
                      ++arr[i];
                      hasChange = true;
                  } else if (arr[i] > copy[i - 1] && arr[i] > copy[i + 1]) {
                      --arr[i];
                      hasChange = true;
                  }
              }
              System.arraycopy(arr, 0, copy, 0, n);
          }
          List<Integer> res = new ArrayList<>();
          for (int e : arr) {
              res.add(e);
          }
          return res;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
