* [[https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix][1284.
Minimum Number of Flips to Convert Binary Matrix to Zero Matrix]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix
  :END:
[[./solution/1200-1299/1284.Minimum Number of Flips to Convert Binary Matrix to Zero Matrix/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a m x n binary matrix mat. In one step, you can choose one cell
and flip it and all the four neighbours of it if they exist (Flip is
changing 1 to 0 and 0 to 1). A pair of cells are called neighboors if
they share one edge.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the minimum number of steps required to convert mat to a zero
matrix or -1 if you cannot.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Binary matrix is a matrix with all cells equal to 0 or 1 only.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Zero matrix is a matrix with all cells equal to 0.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[0,0],[0,1]]
  <strong>Output:</strong> 3
  <strong>Explanation:</strong> One possible solution is to flip (1, 0) then (0, 1) and finally (1, 1) as shown.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[0]]
  <strong>Output:</strong> 0
  <strong>Explanation:</strong> Given matrix is a zero matrix. We don&#39;t need to change it.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,1,1],[1,0,1],[0,0,0]]
  <strong>Output:</strong> 6
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,0,0],[1,0,0]]
  <strong>Output:</strong> -1
  <strong>Explanation:</strong> Given matrix can&#39;t be a zero matrix
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == mat[0].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m <= 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= n <= 3

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i][j] is 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
