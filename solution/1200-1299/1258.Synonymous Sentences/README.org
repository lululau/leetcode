* [[https://leetcode-cn.com/problems/synonymous-sentences][1258.
近义词句子]]
  :PROPERTIES:
  :CUSTOM_ID: 近义词句子
  :END:
[[./solution/1200-1299/1258.Synonymous Sentences/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个近义词表 synonyms 和一个句子 text ， synonyms 表中是一些近义词对
，你可以将句子 text 中每个单词用它的近义词来替换。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你找出所有用近义词替换后的句子，按 字典序排序 后返回。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：
  </strong>synonyms = [[&quot;happy&quot;,&quot;joy&quot;],[&quot;sad&quot;,&quot;sorrow&quot;],[&quot;joy&quot;,&quot;cheerful&quot;]],
  text = &quot;I am happy today but was sad yesterday&quot;
  <strong>输出：
  </strong>[&quot;I am cheerful today but was sad yesterday&quot;,
  &quot;I am cheerful today but was sorrow yesterday&quot;,
  &quot;I am happy today but was sad yesterday&quot;,
  &quot;I am happy today but was sorrow yesterday&quot;,
  &quot;I am joy today but was sad yesterday&quot;,
  &quot;I am joy today but was sorrow yesterday&quot;]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= synonyms.length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

synonyms[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

synonyms[0] != synonyms[1]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

所有单词仅包含英文字母，且长度最多为 10 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

text 最多包含 10 个单词，且单词间用单个空格分隔开。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
