* [[https://leetcode-cn.com/problems/tree-diameter][1245. 树的直径]]
  :PROPERTIES:
  :CUSTOM_ID: 树的直径
  :END:
[[./solution/1200-1299/1245.Tree Diameter/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你这棵「无向树」，请你测算并返回它的「直径」：这棵树上最长简单路径的
边数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们用一个由所有「边」组成的数组 edges 来表示一棵无向树，其中 edges[i] =
[u, v] 表示节点 u 和 v 之间的双向边。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

树上的节点都已经用 {0, 1, ...,
edges.length} 中的数做了标记，每个节点上的标记都是独一无二的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>edges = [[0,1],[0,2]]
  <strong>输出：</strong>2
  <strong>解释：</strong>
  这棵树上最长的路径是 1 - 0 - 2，边数为 2。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>edges = [[0,1],[1,2],[2,3],[1,4],[4,5]]
  <strong>输出：</strong>4
  <strong>解释： </strong>
  这棵树上最长的路径是 3 - 2 - 1 - 4 - 5，边数为 4。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= edges.length < 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges[i][0] != edges[i][1]

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= edges[i][j] <= edges.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

edges 会形成一棵无向树

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
