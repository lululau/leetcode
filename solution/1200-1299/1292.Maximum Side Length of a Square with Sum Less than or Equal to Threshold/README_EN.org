* [[https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold][1292.
Maximum Side Length of a Square with Sum Less than or Equal to
Threshold]]
  :PROPERTIES:
  :CUSTOM_ID: maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold
  :END:
[[./solution/1200-1299/1292.Maximum Side Length of a Square with Sum Less than or Equal to Threshold/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a m x n matrix mat and an integer threshold. Return the maximum
side-length of a square with a sum less than or equal to threshold or
return 0 if there is no such square.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> The maximum side length of square with sum less than 4 is 2 as shown.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1
  <strong>Output:</strong> 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,1,1,1],[1,0,0,0],[1,0,0,0],[1,0,0,0]], threshold = 6
  <strong>Output:</strong> 3
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[18,70],[61,1],[25,85],[14,40],[11,96],[97,96],[63,45]], threshold = 40184
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 300

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

m == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == mat[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= mat[i][j] <= 10000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= threshold <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
