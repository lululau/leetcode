* [[https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses][1249.
移除无效的括号]]
  :PROPERTIES:
  :CUSTOM_ID: 移除无效的括号
  :END:
[[./solution/1200-1299/1249.Minimum Remove to Make Valid Parentheses/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个由 '('、')' 和小写字母组成的字符串 s。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你需要从字符串中删除最少数目的 '(' 或者
')' （可以删除任意位置的括号)，使得剩下的「括号字符串」有效。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请返回任意一个合法字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

有效「括号字符串」应当符合以下 任意一条 要求：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

空字符串或只包含小写字母的字符串

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

可以被写作 AB（A 连接 B）的字符串，其中 A 和 B 都是有效「括号字符串」

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

可以被写作 (A) 的字符串，其中 A 是一个有效的「括号字符串」

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;lee(t(c)o)de)&quot;
  <strong>输出：</strong>&quot;lee(t(c)o)de&quot;
  <strong>解释：</strong>&quot;lee(t(co)de)&quot; , &quot;lee(t(c)ode)&quot; 也是一个可行答案。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;a)b(c)d&quot;
  <strong>输出：</strong>&quot;ab(c)d&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;))((&quot;
  <strong>输出：</strong>&quot;&quot;
  <strong>解释：</strong>空字符串也是有效的
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>s = &quot;(a(b(c)d)&quot;
  <strong>输出：</strong>&quot;a(b(c)d)&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s[i] 可能是 '('、')' 或英文小写字母

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
