* [[https://leetcode.com/problems/print-immutable-linked-list-in-reverse][1265.
Print Immutable Linked List in Reverse]]
  :PROPERTIES:
  :CUSTOM_ID: print-immutable-linked-list-in-reverse
  :END:
[[./solution/1200-1299/1265.Print Immutable Linked List in Reverse/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an immutable linked list, print out all values of each
node in reverse with the help of the following interface:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

ImmutableListNode: An interface of immutable linked list, you are given
the head of the list.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

You need to use the following functions to access the linked list (you
can't access the ImmutableListNode directly):

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

ImmutableListNode.printValue(): Print value of the current node.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ImmutableListNode.getNext(): Return the next node.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

The input is only given to initialize the linked list internally. You
must solve this problem without modifying the linked list. In other
words, you must operate the linked list using only the mentioned APIs.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> head = [1,2,3,4]
  <strong>Output:</strong> [4,3,2,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> head = [0,-4,-1,3,-5]
  <strong>Output:</strong> [-5,3,-1,-4,0]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> head = [-2,0,6,4,4,-6]
  <strong>Output:</strong> [-6,4,4,6,0,-2]
  </pre>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The length of the linked list is between [1, 1000].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The value of each node in the linked list is between [-1000, 1000].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Follow up:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Could you solve this problem in:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Constant space complexity?

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Linear time complexity and less than linear space complexity?

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
