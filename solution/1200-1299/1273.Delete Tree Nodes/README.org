* [[https://leetcode-cn.com/problems/delete-tree-nodes][1273.
删除树节点]]
  :PROPERTIES:
  :CUSTOM_ID: 删除树节点
  :END:
[[./solution/1200-1299/1273.Delete Tree Nodes/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一棵以节点 0 为根节点的树，定义如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

节点的总数为 nodes 个；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

第 i 个节点的值为 value[i] ；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

第 i 个节点的父节点是 parent[i] 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请你删除节点值之和为 0 的每一棵子树。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

在完成所有删除之后，返回树中剩余节点的数目。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nodes = 7, parent = [-1,0,0,1,2,2,2], value = [1,-2,4,0,-2,-1,-1]
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nodes = 7, parent = [-1,0,0,1,2,2,2], value = [1,-2,4,0,-2,-1,-2]
  <strong>输出：</strong>6
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nodes = 5, parent = [-1,0,1,0,0], value = [-672,441,18,728,378]
  <strong>输出：</strong>5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nodes = 5, parent = [-1,0,0,1,1], value = [-686,-842,616,-739,-746]
  <strong>输出：</strong>5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nodes <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

parent.length == nodes

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= parent[i] <= nodes - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

parent[0] == -1 表示节点 0 是树的根。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

value.length == nodes

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^5 <= value[i] <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

题目输入数据 保证 是一棵 有效的树 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
