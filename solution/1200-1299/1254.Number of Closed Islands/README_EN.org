* [[https://leetcode.com/problems/number-of-closed-islands][1254. Number
of Closed Islands]]
  :PROPERTIES:
  :CUSTOM_ID: number-of-closed-islands
  :END:
[[./solution/1200-1299/1254.Number of Closed Islands/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a 2D grid consists of 0s (land) and 1s (water).  An island is a
maximal 4-directionally connected group of 0s and a closed island is an
island totally (all left, top, right, bottom) surrounded by 1s.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the number of closed islands.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]
  <strong>Output:</strong> 2
  <strong>Explanation:</strong> 
  Islands in gray are closed because they are completely surrounded by water (group of 1s).</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1,1,1,1,1,1],
  &nbsp;              [1,0,0,0,0,0,1],
  &nbsp;              [1,0,1,1,1,0,1],
  &nbsp;              [1,0,1,0,1,0,1],
  &nbsp;              [1,0,1,1,1,0,1],
  &nbsp;              [1,0,0,0,0,0,1],
                 [1,1,1,1,1,1,1]]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid.length, grid[0].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= grid[i][j] <=1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
