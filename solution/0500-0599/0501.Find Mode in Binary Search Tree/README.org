* [[https://leetcode-cn.com/problems/find-mode-in-binary-search-tree][501.
二叉搜索树中的众数]]
  :PROPERTIES:
  :CUSTOM_ID: 二叉搜索树中的众数
  :END:
[[./solution/0500-0599/0501.Find Mode in Binary Search Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个有相同值的二叉搜索树（BST），找出 BST
中的所有众数（出现频率最高的元素）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

假定 BST 有如下定义：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

结点左子树中所含结点的值小于等于当前结点的值

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

结点右子树中所含结点的值大于等于当前结点的值

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

左子树和右子树都是二叉搜索树

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

例如： 给定 BST [1,null,2,2],

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>   1
      \
       2
      /
     2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

返回[2].

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：如果众数超过1个，不需考虑输出顺序

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

进阶：你可以不使用额外的空间吗？（假设由递归产生的隐式调用栈的开销不被计算在内）

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
