* [[https://leetcode.com/problems/construct-binary-tree-from-string][536.
Construct Binary Tree from String]]
  :PROPERTIES:
  :CUSTOM_ID: construct-binary-tree-from-string
  :END:
[[./solution/0500-0599/0536.Construct Binary Tree from String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You need to construct a binary tree from a string consisting of
parenthesis and integers.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The whole input represents a binary tree. It contains an integer
followed by zero, one or two pairs of parenthesis. The integer
represents the root's value and a pair of parenthesis contains a child
binary tree with the same structure.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You always start to construct the left child node of the parent first if
it exists.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;4(2(3)(1))(6(5))&quot;
  <strong>Output:</strong> [4,2,6,3,1,5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;4(2(3)(1))(6(5)(7))&quot;
  <strong>Output:</strong> [4,2,6,3,1,5,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> s = &quot;-4(2(3)(1))(6(5)(7))&quot;
  <strong>Output:</strong> [-4,2,6,3,1,5,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= s.length <= 3 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s consists of digits, '(', ')', and '-' only.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
