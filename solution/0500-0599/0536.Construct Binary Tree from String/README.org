* [[https://leetcode-cn.com/problems/construct-binary-tree-from-string][536.
从字符串生成二叉树]]
  :PROPERTIES:
  :CUSTOM_ID: 从字符串生成二叉树
  :END:
[[./solution/0500-0599/0536.Construct Binary Tree from String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你需要从一个包括括号和整数的字符串构建一棵二叉树。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输入的字符串代表一棵二叉树。它包括整数和随后的 0 ，1 或 2
对括号。整数代表根的值，一对括号内表示同样结构的子树。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

若存在左子结点，则从左子结点开始构建。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>&quot;4(2(3)(1))(6(5))&quot;
  <strong>输出：</strong>返回代表下列二叉树的根节点:

         4
       /   \
      2     6
     / \   / 
    3   1 5   
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

输入字符串中只包含 '(', ')', '-' 和 '0' ~ '9' 

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

空树由 "" 而非"()"表示。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
