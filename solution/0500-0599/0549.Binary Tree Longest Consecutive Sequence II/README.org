* [[https://leetcode-cn.com/problems/binary-tree-longest-consecutive-sequence-ii][549.
二叉树中最长的连续序列]]
  :PROPERTIES:
  :CUSTOM_ID: 二叉树中最长的连续序列
  :END:
[[./solution/0500-0599/0549.Binary Tree Longest Consecutive Sequence II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个二叉树，你需要找出二叉树中最长的连续序列路径的长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请注意，该路径可以是递增的或者是递减。例如，[1,2,3,4] 和 [4,3,2,1]
都被认为是合法的，而路径 [1,2,4,3] 则不合法。另一方面，路径可以是
子-父-子 顺序，并不一定是 父-子 顺序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong>
          1
         / \
        2   3
  <strong>输出:</strong> 2
  <strong>解释:</strong> 最长的连续路径是 [1, 2] 或者 [2, 1]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong>
          2
         / \
        1   3
  <strong>输出:</strong> 3
  <strong>解释:</strong> 最长的连续路径是 [1, 2, 3] 或者 [3, 2, 1]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意: 树上所有节点的值都在 [-1e7, 1e7] 范围内。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
