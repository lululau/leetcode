* [[https://leetcode.com/problems/range-addition-ii][598. Range Addition
II]]
  :PROPERTIES:
  :CUSTOM_ID: range-addition-ii
  :END:
[[./solution/0500-0599/0598.Range Addition II/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given an m x n matrix M initialized with all 0's and an array of
operations ops, where ops[i] = [ai, bi] means M[x][y] should be
incremented by one for all 0 <= x < ai and 0 <= y < bi.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Count and return the number of maximum integers in the matrix after
performing all the operations.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> m = 3, n = 3, ops = [[2,2],[3,3]]
  <strong>Output:</strong> 4
  <strong>Explanation:</strong> The maximum integer in M is 2, and there are four of it in M. So return 4.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> m = 3, n = 3, ops = [[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3]]
  <strong>Output:</strong> 4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> m = 3, n = 3, ops = []
  <strong>Output:</strong> 9
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 4 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ops.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

ops[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= ai <= m

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= bi <= n

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
