* [[https://leetcode-cn.com/problems/squirrel-simulation][573.
松鼠模拟]]
  :PROPERTIES:
  :CUSTOM_ID: 松鼠模拟
  :END:
[[./solution/0500-0599/0573.Squirrel Simulation/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

现在有一棵树，一只松鼠和一些坚果。位置由二维网格的单元格表示。你的目标是找到松鼠收集所有坚果的最小路程，且坚果是一颗接一颗地被放在树下。松鼠一次最多只能携带一颗坚果，松鼠可以向上，向下，向左和向右四个方向移动到相邻的单元格。移动次数表示路程。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

输入 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 
  高度 : 5
  宽度 : 7
  树的位置 : [2,2]
  松鼠 : [4,4]
  坚果 : [[3,0], [2,5]]
  <strong>输出:</strong> 12
  <strong>解释:</strong>
  <img src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0500-0599/0573.Squirrel Simulation/images/squirrel_simulation.png" style="width: 40%;">​​​​​
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

所有给定的位置不会重叠。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

松鼠一次最多只能携带一颗坚果。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

给定的坚果位置没有顺序。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

高度和宽度是正整数。 3 <= 高度 * 宽度 <= 10,000。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

给定的网格至少包含一颗坚果，唯一的一棵树和一只松鼠。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
