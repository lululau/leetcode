* [[https://leetcode-cn.com/problems/complex-number-multiplication][537.
复数乘法]]
  :PROPERTIES:
  :CUSTOM_ID: 复数乘法
  :END:
[[./solution/0500-0599/0537.Complex Number Multiplication/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定两个表示复数的字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回表示它们乘积的字符串。注意，根据定义 i2 = -1 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> &quot;1+1i&quot;, &quot;1+1i&quot;
  <strong>输出:</strong> &quot;0+2i&quot;
  <strong>解释:</strong> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i ，你需要将它转换为 0+2i 的形式。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> &quot;1+-1i&quot;, &quot;1+-1i&quot;
  <strong>输出:</strong> &quot;0+-2i&quot;
  <strong>解释:</strong> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i ，你需要将它转换为 0+-2i 的形式。 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

输入字符串不包含额外的空格。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入字符串将以 a+bi 的形式给出，其中整数 a 和 b 的范围均在 [-100, 100]
之间。输出也应当符合这种形式。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
