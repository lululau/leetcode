* [[https://leetcode-cn.com/problems/random-pick-with-weight][528.
按权重随机选择]]
  :PROPERTIES:
  :CUSTOM_ID: 按权重随机选择
  :END:
[[./solution/0500-0599/0528.Random Pick with Weight/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个正整数数组 w ，其中 w[i] 代表下标 i 的权重（下标从 0
开始），请写一个函数 pickIndex ，它可以随机地获取下标 i，选取下标
i 的概率与 w[i] 成正比。

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

例如，对于 w = [1, 3]，挑选下标 0 的概率为 1 / (1 + 3) = 0.25
（即，25%），而选取下标 1 的概率为 3 / (1 + 3) = 0.75（即，75%）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

也就是说，选取下标 i 的概率为 w[i] / sum(w) 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  [&quot;Solution&quot;,&quot;pickIndex&quot;]
  [[[1]],[]]
  <strong>输出：</strong>
  [null,0]
  <strong>解释：</strong>
  Solution solution = new Solution([1]);
  solution.pickIndex(); // 返回 0，因为数组中只有一个元素，所以唯一的选择是返回下标 0。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>
  [&quot;Solution&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;]
  [[[1,3]],[],[],[],[],[]]
  <strong>输出：</strong>
  [null,1,1,1,1,0]
  <strong>解释：</strong>
  Solution solution = new Solution([1, 3]);
  solution.pickIndex(); // 返回 1，返回下标 1，返回该下标概率为 3/4 。
  solution.pickIndex(); // 返回 1
  solution.pickIndex(); // 返回 1
  solution.pickIndex(); // 返回 1
  solution.pickIndex(); // 返回 0，返回下标 0，返回该下标概率为 1/4 。

  由于这是一个随机问题，允许多个答案，因此下列输出都可以被认为是正确的:
  [null,1,1,1,1,0]
  [null,1,1,1,1,1]
  [null,1,1,1,0,0]
  [null,1,1,1,0,1]
  [null,1,0,1,0,0]
  ......
  诸若此类。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= w.length <= 10000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= w[i] <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

pickIndex 将被调用不超过 10000 次

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
