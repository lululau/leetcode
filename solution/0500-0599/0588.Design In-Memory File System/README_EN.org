* [[https://leetcode.com/problems/design-in-memory-file-system][588.
Design In-Memory File System]]
  :PROPERTIES:
  :CUSTOM_ID: design-in-memory-file-system
  :END:
[[./solution/0500-0599/0588.Design In-Memory File System/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Design an in-memory file system to simulate the following functions:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

ls: Given a path in string format. If it is a file path, return a list
that only contains this file's name. If it is a directory path, return
the list of file and directory names in this directory. Your output
(file and directory names together) should in lexicographic order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

mkdir: Given a directory path that does not exist, you should make a new
directory according to the path. If the middle directories in the path
don't exist either, you should create them as well. This function has
void return type.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

addContentToFile: Given a file path and file content in string format.
If the file doesn't exist, you need to create that file containing given
content. If the file already exists, you need to append given content to
original content. This function has void return type.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

readContentFromFile: Given a file path, return its content in string
format.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <b>Input:</b> 

  [&quot;FileSystem&quot;,&quot;ls&quot;,&quot;mkdir&quot;,&quot;addContentToFile&quot;,&quot;ls&quot;,&quot;readContentFromFile&quot;]

  [[],[&quot;/&quot;],[&quot;/a/b/c&quot;],[&quot;/a/b/c/d&quot;,&quot;hello&quot;],[&quot;/&quot;],[&quot;/a/b/c/d&quot;]]



  <b>Output:</b>

  [null,[],null,null,[&quot;a&quot;],&quot;hello&quot;]



  <b>Explanation:</b>

  <img alt="filesystem" src="https://cdn.jsdelivr.net/gh/doocs/leetcode@main/solution/0500-0599/0588.Design In-Memory File System/images/filesystem.png" style="width: 640px;" />

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

You can assume all file or directory paths are absolute paths which
begin with / and do not end with / except that the path is just "/".

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

You can assume that all operations will be passed valid parameters and
users will not attempt to retrieve file content or list a directory or
file that does not exist.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

You can assume that all directory names and file names only contain
lower-case letters, and same names won't exist in the same directory.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
