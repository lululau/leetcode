* [[https://leetcode.com/problems/split-concatenated-strings][555. Split
Concatenated Strings]]
  :PROPERTIES:
  :CUSTOM_ID: split-concatenated-strings
  :END:
[[./solution/0500-0599/0555.Split Concatenated Strings/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a list of strings, you could concatenate these strings together
into a loop, where for each string you could choose to reverse it or
not. Among all the possible loops, you need to find the
lexicographically biggest string after cutting the loop, which will make
the looped string into a regular one.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Specifically, to find the lexicographically biggest string, you need to
experience two phases:

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

Concatenate all the strings into a loop, where you can reverse some
strings or not and connect them in the same order as given.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Cut and make one breakpoint in any place of the loop, which will make
the looped string into a regular one starting from the character at the
cutpoint.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

And your job is to find the lexicographically biggest one among all the
possible regular strings.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example:

#+begin_html
  <pre>

  <b>Input:</b> "abc", "xyz"

  <b>Output:</b> "zyxcba"

  <b>Explanation:</b> You can get the looped string "-abcxyz-", "-abczyx-", "-cbaxyz-", "-cbazyx-", <br/>where '-' represents the looped status. <br/>The answer string came from the fourth looped one, <br/>where you could cut from the middle character 'a' and get "zyxcba".

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

The input strings will only contain lowercase letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The total length of all the strings will not over 1,000.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
