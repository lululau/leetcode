* [[https://leetcode-cn.com/problems/permutation-in-string][567.
字符串的排列]]
  :PROPERTIES:
  :CUSTOM_ID: 字符串的排列
  :END:
[[./solution/0500-0599/0567.Permutation in String/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定两个字符串 s1 和 s2，写一个函数来判断 s2 是否包含 s1 的排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

换句话说，第一个字符串的排列之一是第二个字符串的 子串 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: </strong>s1 = "ab" s2 = "eidbaooo"
  <strong>输出: </strong>True
  <strong>解释:</strong> s2 包含 s1 的排列之一 ("ba").
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: </strong>s1= "ab" s2 = "eidboaoo"
  <strong>输出:</strong> False
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

输入的字符串只包含小写字母

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

两个字符串的长度都在 [1, 10,000] 之间

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
