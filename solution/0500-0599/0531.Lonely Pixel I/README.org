* [[https://leetcode-cn.com/problems/lonely-pixel-i][531. 孤独像素 I]]
  :PROPERTIES:
  :CUSTOM_ID: 孤独像素-i
  :END:
[[./solution/0500-0599/0531.Lonely Pixel I/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一幅黑白像素组成的图像, 计算黑色孤独像素的数量。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

图像由一个由‘B'和‘W'组成二维字符数组表示,
‘B'和‘W'分别代表黑色像素和白色像素。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

黑色孤独像素指的是在同一行和同一列不存在其他黑色像素的黑色像素。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 
  [[&#39;W&#39;, &#39;W&#39;, &#39;B&#39;],
   [&#39;W&#39;, &#39;B&#39;, &#39;W&#39;],
   [&#39;B&#39;, &#39;W&#39;, &#39;W&#39;]]

  <strong>输出:</strong> 3
  <strong>解析:</strong> 全部三个&#39;B&#39;都是黑色孤独像素。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

输入二维数组行和列的范围是 [1,500]。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
