* [[https://leetcode-cn.com/problems/friend-requests-i-overall-acceptance-rate][597.
好友申请 I：总体通过率]]
  :PROPERTIES:
  :CUSTOM_ID: 好友申请-i总体通过率
  :END:
[[./solution/0500-0599/0597.Friend Requests I Overall Acceptance Rate/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在 Facebook 或者 Twitter
这样的社交应用中，人们经常会发好友申请也会收到其他人的好友申请。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

表：FriendRequest

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +----------------+---------+
  | Column Name    | Type    |
  +----------------+---------+
  | sender_id      | int     |
  | send_to_id     | int     |
  | request_date   | date    |
  +----------------+---------+
  此表没有主键，它可能包含重复项。
  该表包含发送请求的用户的 ID ，接受请求的用户的 ID 以及请求的日期。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

表：RequestAccepted

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +----------------+---------+
  | Column Name    | Type    |
  +----------------+---------+
  | requester_id   | int     |
  | accepter_id    | int     |
  | accept_date    | date    |
  +----------------+---------+
  此表没有主键，它可能包含重复项。
  该表包含发送请求的用户的 ID ，接受请求的用户的 ID 以及请求通过的日期。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

写一个查询语句，求出好友申请的通过率，用 2
位小数表示。通过率由接受好友申请的数目除以申请总数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

通过的好友申请不一定都在表 friend_request 中。你只需要统计总的被通过的申请数（不管它们在不在表 FriendRequest 中），并将它除以申请总数，得到通过率

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

一个好友申请发送者有可能会给接受者发几条好友申请，也有可能一个好友申请会被通过好几次。这种情况下，重复的好友申请只统计一次。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果一个好友申请都没有，通过率为 0.00 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

查询结果应该如下例所示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  FriendRequest 表：
  +-----------+------------+--------------+
  | sender_id | send_to_id | request_date |
  +-----------+------------+--------------+
  | 1         | 2          | 2016/06/01   |
  | 1         | 3          | 2016/06/01   |
  | 1         | 4          | 2016/06/01   |
  | 2         | 3          | 2016/06/02   |
  | 3         | 4          | 2016/06/09   |
  +-----------+------------+--------------+

  RequestAccepted 表：
  +--------------+-------------+-------------+
  | requester_id | accepter_id | accept_date |
  +--------------+-------------+-------------+
  | 1            | 2           | 2016/06/03  |
  | 1            | 3           | 2016/06/08  |
  | 2            | 3           | 2016/06/08  |
  | 3            | 4           | 2016/06/09  |
  | 3            | 4           | 2016/06/10  |
  +--------------+-------------+-------------+

  Result 表：
  +-------------+
  | accept_rate |
  +-------------+
  | 0.8         |
  +-------------+
  总共有 5 个请求，有 4 个不同的通过请求，所以通过率是 0.80</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

进阶:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

你能写一个查询语句得到每个月的通过率吗？

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

你能求出每一天的累计通过率吗？

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *SQL*
    :PROPERTIES:
    :CUSTOM_ID: sql
    :END:
#+begin_src sql
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
