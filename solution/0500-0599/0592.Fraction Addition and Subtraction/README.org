* [[https://leetcode-cn.com/problems/fraction-addition-and-subtraction][592.
分数加减运算]]
  :PROPERTIES:
  :CUSTOM_ID: 分数加减运算
  :END:
[[./solution/0500-0599/0592.Fraction Addition and Subtraction/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个表示分数加减运算表达式的字符串，你需要返回一个字符串形式的计算结果。 这个结果应该是不可约分的分数，即最简分数。 如果最终结果是一个整数，例如 2，你需要将它转换成分数形式，其分母为 1。所以在上述例子中,
2 应该被转换为 2/1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong>&quot;-1/2+1/2&quot;
  <strong>输出:</strong> &quot;0/1&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong>&quot;-1/2+1/2+1/3&quot;
  <strong>输出:</strong> &quot;1/3&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong>&quot;1/3-1/2&quot;
  <strong>输出:</strong> &quot;-1/6&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong>&quot;5/3+1/3&quot;
  <strong>输出:</strong> &quot;2/1&quot;
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

输入和输出字符串只包含 '0' 到 '9' 的数字，以及 '/', '+' 和 '-'。 

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入和输出分数格式均为 ±分子/分母。如果输入的第一个分数或者输出的分数是正数，则 '+' 会被省略掉。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入只包含合法的最简分数，每个分数的分子与分母的范围是  [1,10]。 如果分母是1，意味着这个分数实际上是一个整数。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入的分数个数范围是 [1,10]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

最终结果的分子与分母保证是 32 位整数范围内的有效整数。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
