* [[https://leetcode-cn.com/problems/binary-tree-longest-consecutive-sequence][298.
二叉树最长连续序列]]
  :PROPERTIES:
  :CUSTOM_ID: 二叉树最长连续序列
  :END:
[[./solution/0200-0299/0298.Binary Tree Longest Consecutive Sequence/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一棵指定的二叉树，请你计算它最长连续序列路径的长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

该路径，可以是从某个初始结点到树中任意结点，通过「父 -
子」关系连接而产生的任意路径。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

这个最长连续的路径，必须从父结点到子结点，反过来是不可以的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong>

     1
      \
       3
      / \
     2   4
          \
           5

  <strong>输出:</strong> <code>3</code>

  <strong>解析: </strong>当中，最长连续序列是 <code>3-4-5，所以</code>返回结果为 <code>3</code></pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:

  </strong>   2
      \
       3
      / 
     2    
    / 
   1

  <strong>输出: 2 

  解析: </strong>当中，最长连续序列是 <code>2-3。注意，不是</code> <code>3-2-1，所以</code>返回 <code>2。</code></pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
