* [[https://leetcode-cn.com/problems/palindrome-permutation-ii][267.
回文排列 II]]
  :PROPERTIES:
  :CUSTOM_ID: 回文排列-ii
  :END:
[[./solution/0200-0299/0267.Palindrome Permutation II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个字符串
s ，返回其通过重新排列组合后所有可能的回文字符串，并去除重复的组合。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如不能形成任何回文排列时，则返回一个空列表。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong><code>&quot;aabb&quot;</code>
  <strong>输出: </strong><code>[&quot;abba&quot;, &quot;baab&quot;]</code></pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong><code>&quot;abc&quot;</code>
  <strong>输出: </strong><code>[]</code></pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
