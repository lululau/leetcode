* [[https://leetcode.com/problems/meeting-rooms][252. Meeting Rooms]]
  :PROPERTIES:
  :CUSTOM_ID: meeting-rooms
  :END:
[[./solution/0200-0299/0252.Meeting Rooms/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array of meeting time intervals where intervals[i] = [starti,
endi], determine if a person could attend all meetings.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> intervals = [[0,30],[5,10],[15,20]]
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> intervals = [[7,10],[2,4]]
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= intervals.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

intervals[i].length == 2

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= starti < endi <= 106

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def canAttendMeetings(self, intervals: List[List[int]]) -> bool:
          intervals.sort(key=lambda x: x[0])
          for i in range(len(intervals) - 1):
              if intervals[i][1] > intervals[i + 1][0]:
                  return False
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean canAttendMeetings(int[][] intervals) {
          Arrays.sort(intervals, Comparator.comparingInt(a -> a[0]));
          for (int i = 0, n = intervals.length; i < n - 1; ++i) {
              if (intervals[i][1] > intervals[i + 1][0]) return false;
          }
          return true;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
