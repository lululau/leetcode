* [[https://leetcode-cn.com/problems/alien-dictionary][269. 火星词典]]
  :PROPERTIES:
  :CUSTOM_ID: 火星词典
  :END:
[[./solution/0200-0299/0269.Alien Dictionary/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

现有一种使用英语字母的火星语言，这门语言的字母顺序与英语顺序不同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个字符串列表 words ，作为这门语言的词典，words 中的字符串已经
按这门新语言的字母顺序进行了排序 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你根据该词典还原出此语言中已知的字母顺序，并 按字母递增顺序
排列。若不存在合法字母顺序，返回 ““
。若存在多种可能的合法字母顺序，返回其中 任意一种 顺序即可。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

字符串 s 字典顺序小于 字符串 t 有两种情况：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

在第一个不同字母处，如果 s 中的字母在这门外星语言的字母顺序中位于 t
中字母之前，那么 s 的字典顺序小于 t 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果前面 min(s.length, t.length) 字母都相同，那么 s.length < t.length
时，s 的字典顺序也小于 t 。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>words = ["wrt","wrf","er","ett","rftt"]
  <strong>输出：</strong>"wertf"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>words = ["z","x"]
  <strong>输出：</strong>"zx"
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>words = ["z","x","z"]
  <strong>输出：</strong>""
  <strong>解释：</strong>不存在合法字母顺序，因此返回 <code>"" 。</code>
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words[i].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

words[i] 仅由小写英文字母组成

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
