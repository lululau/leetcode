* [[https://leetcode-cn.com/problems/the-skyline-problem][218.
天际线问题]]
  :PROPERTIES:
  :CUSTOM_ID: 天际线问题
  :END:
[[./solution/0200-0299/0218.The Skyline Problem/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

城市的天际线是从远处观看该城市中所有建筑物形成的轮廓的外部轮廓。给你所有建筑物的位置和高度，请返回由这些建筑物形成的
天际线 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每个建筑物的几何信息由数组 buildings 表示，其中三元组 buildings[i] =
[lefti, righti, heighti] 表示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

lefti 是第 i 座建筑物左边缘的 x 坐标。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

righti 是第 i 座建筑物右边缘的 x 坐标。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

heighti 是第 i 座建筑物的高度。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

天际线 应该表示为由 "关键点" 组成的列表，格式 [[x1,y1],[x2,y2],...]
，并按 x 坐标 进行 排序
。关键点是水平线段的左端点。列表中最后一个点是最右侧建筑物的终点，y
坐标始终为 0
，仅用于标记天际线的终点。此外，任何两个相邻建筑物之间的地面都应被视为天际线轮廓的一部分。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：输出天际线中不得有连续的相同高度的水平线。例如 [...[2 3], [4 5],
[7 5], [11 5], [12 7]...] 是不正确的答案；三条高度为 5
的线应该在最终输出中合并为一个：[...[2 3], [4 5], [12 7], ...]

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>buildings = [[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]]
  <strong>输出：</strong>[[2,10],[3,15],[7,12],[12,0],[15,10],[20,8],[24,0]]
  <strong>解释：</strong>
  图 A<strong> </strong>显示输入的所有建筑物的位置和高度，
  图 B 显示由这些建筑物形成的天际线。图 B 中的红点表示输出列表中的关键点。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>buildings = [[0,2,3],[2,5,3]]
  <strong>输出：</strong>[[0,3],[5,0]]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= buildings.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= lefti < righti <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= heighti <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

buildings 按 lefti 非递减排序

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
