* [[https://leetcode.com/problems/wiggle-sort][280. Wiggle Sort]]
  :PROPERTIES:
  :CUSTOM_ID: wiggle-sort
  :END:
[[./solution/0200-0299/0280.Wiggle Sort/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an integer array nums, reorder it such that nums[0] <= nums[1] >=
nums[2] <= nums[3]....

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You may assume the input array always has a valid answer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [3,5,2,1,6,4]
  <strong>Output:</strong> [3,5,1,6,2,4]
  <strong>Explanation:</strong> [1,6,2,5,3,4] is also accepted.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [6,6,5,6,3,8]
  <strong>Output:</strong> [6,6,5,6,3,8]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It is guaranteed that there will be an answer for the given input nums.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

Follow up: Could you do it without sorting the array?

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
