* [[https://leetcode.com/problems/ugly-number][263. Ugly Number]]
  :PROPERTIES:
  :CUSTOM_ID: ugly-number
  :END:
[[./solution/0200-0299/0263.Ugly Number/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

An ugly number is a positive integer whose prime factors are limited to
2, 3, and 5.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Given an integer n, return true if n is an ugly number.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 6
  <strong>Output:</strong> true
  <strong>Explanation:</strong> 6 = 2 &times; 3</pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 8
  <strong>Output:</strong> true
  <strong>Explanation:</strong> 8 = 2 &times; 2 &times; 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 14
  <strong>Output:</strong> false
  <strong>Explanation:</strong> 14 is not ugly since it includes the prime factor 7.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> n = 1
  <strong>Output:</strong> true
  <strong>Explanation:</strong> 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

-231 <= n <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def isUgly(self, n: int) -> bool:
          if n < 1:
              return False
          while n % 2 == 0:
              n //= 2
          while n % 3 == 0:
              n //= 3
          while n % 5 == 0:
              n //= 5
          return n == 1
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean isUgly(int n) {
          if (n < 1) return false;
          while (n % 2 == 0) {
              n /= 2;
          }
          while (n % 3 == 0) {
              n /= 3;
          }
          while (n % 5 == 0) {
              n /= 5;
          }
          return n == 1;
      }
  }
#+end_src

*** *C++*
    :PROPERTIES:
    :CUSTOM_ID: c
    :END:
#+begin_src cpp
  class Solution {
  public:
      bool isUgly(int n) {
          if (n < 1) return false;
          while (n % 2 == 0) {
              n /= 2;
          }
          while (n % 3 == 0) {
              n /= 3;
          }
          while (n % 5 == 0) {
              n /= 5;
          }
          return n == 1;
      }
  };
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number} n
   * @return {boolean}
   */
  var isUgly = function (n) {
    if (n < 1) return false;
    while (n % 2 == 0) {
      n /= 2;
    }
    while (n % 3 == 0) {
      n /= 3;
    }
    while (n % 5 == 0) {
      n /= 5;
    }
    return n == 1;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
