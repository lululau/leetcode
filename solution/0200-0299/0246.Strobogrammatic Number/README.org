* [[https://leetcode-cn.com/problems/strobogrammatic-number][246.
中心对称数]]
  :PROPERTIES:
  :CUSTOM_ID: 中心对称数
  :END:
[[./solution/0200-0299/0246.Strobogrammatic Number/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

中心对称数是指一个数字在旋转了 180
度之后看起来依旧相同的数字（或者上下颠倒地看）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请写一个函数来判断该数字是否是中心对称数，其输入将会以一个字符串的形式来表达数字。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> num = &quot;69&quot;
  <strong>输出:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> num = &quot;88&quot;
  <strong>输出:</strong> true</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> num = &quot;962&quot;
  <strong>输出:</strong> false</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>num = &quot;1&quot;
  <strong>输出：</strong>true
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def isStrobogrammatic(self, num: str) -> bool:
          def match(a, b):
              if a in {'0', '1', '8'}:
                  return a == b
              if a == '6':
                  return b == '9'
              if a == '9':
                  return b == '6'
              return False
          n = len(num)
          i, j = 0, n - 1
          while i <= j:
              if not match(num[i], num[j]):
                  return False
              i += 1
              j -= 1
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean isStrobogrammatic(String num) {
          int n = num.length();
          for (int i = 0, j = n - 1; i <= j; ++i, --j) {
              if (!match(num.charAt(i), num.charAt(j))) return false;
          }
          return true;
      }

      private boolean match(char a, char b) {
          switch (a) {
              case '0':
              case '1':
              case '8':
                  return a == b;
              case '6':
                  return b == '9';
              case '9':
                  return b == '6';
              default:
                  return false;
          }
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
