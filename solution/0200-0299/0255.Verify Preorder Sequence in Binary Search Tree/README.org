* [[https://leetcode-cn.com/problems/verify-preorder-sequence-in-binary-search-tree][255.
验证前序遍历序列二叉搜索树]]
  :PROPERTIES:
  :CUSTOM_ID: 验证前序遍历序列二叉搜索树
  :END:
[[./solution/0200-0299/0255.Verify Preorder Sequence in Binary Search Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个整数数组，你需要验证它是否是一个二叉搜索树正确的先序遍历序列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你可以假定该序列中的数都是不相同的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

参考以下这颗二叉搜索树：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>     5
      / \
     2   6
    / \
   1   3</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong>[5,2,6,1,3]
  <strong>输出: </strong>false</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入: </strong>[5,2,1,3,6]
  <strong>输出: </strong>true</pre>
#+end_html

#+begin_html
  <p>
#+end_html

进阶挑战：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

您能否使用恒定的空间复杂度来完成此题？

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
