* [[https://leetcode.com/problems/isomorphic-strings][205. Isomorphic
Strings]]
  :PROPERTIES:
  :CUSTOM_ID: isomorphic-strings
  :END:
[[./solution/0200-0299/0205.Isomorphic Strings/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given two strings s and t, determine if they are isomorphic.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Two strings s and t are isomorphic if the characters in s can be
replaced to get t.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

All occurrences of a character must be replaced with another character
while preserving the order of characters. No two characters may map to
the same character, but a character may map to itself.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "egg", t = "add"
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "foo", t = "bar"
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "paper", t = "title"
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 5 * 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

t.length == s.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s and t consist of any valid ascii character.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def isIsomorphic(self, s: str, t: str) -> bool:
          a2b, b2a = {}, {}
          n = len(s)
          for i in range(n):
              a, b = s[i], t[i]
              if (a in a2b and a2b[a] != b) or (b in b2a and b2a[b] != a):
                  return False
              a2b[a] = b
              b2a[b] = a
          return True
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean isIsomorphic(String s, String t) {
          int n = s.length();
          Map<Character, Character> a2b = new HashMap<>();
          Map<Character, Character> b2a = new HashMap<>();
          for (int i = 0; i < n; ++i) {
              char a = s.charAt(i), b = t.charAt(i);
              if ((a2b.containsKey(a) && a2b.get(a) != b) || (b2a.containsKey(b) && b2a.get(b) != a)) return false;
              a2b.put(a, b);
              b2a.put(b, a);
          }
          return true;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
