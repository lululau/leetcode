* [[https://leetcode-cn.com/problems/contains-duplicate][217.
存在重复元素]]
  :PROPERTIES:
  :CUSTOM_ID: 存在重复元素
  :END:
[[./solution/0200-0299/0217.Contains Duplicate/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个整数数组，判断是否存在重复元素。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果存在一值在数组中出现至少两次，函数返回 true
。如果数组中每个元素都不相同，则返回 false 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> [1,2,3,1]
  <strong>输出:</strong> true</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: </strong>[1,2,3,4]
  <strong>输出:</strong> false</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入: </strong>[1,1,1,3,3,4,3,2,4,2]
  <strong>输出:</strong> true</pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def containsDuplicate(self, nums: List[int]) -> bool:
          return len(nums) != len(set(nums))
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean containsDuplicate(int[] nums) {
          Set<Integer> set = new HashSet<>();
          for (int e : nums) {
              if (set.contains(e)) return true;
              set.add(e);
          }
          return false;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
