* [[https://leetcode.com/problems/best-meeting-point][296. Best Meeting
Point]]
  :PROPERTIES:
  :CUSTOM_ID: best-meeting-point
  :END:
[[./solution/0200-0299/0296.Best Meeting Point/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an m x n binary grid grid where each 1 marks the home of one
friend, return the minimal total travel distance.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The total travel distance is the sum of the distances between the houses
of the friends and the meeting point.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The distance is calculated using Manhattan Distance, where distance(p1,
p2) = |p2.x - p1.x| + |p2.y - p1.y|.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,0,0,0,1],[0,0,0,0,0],[0,0,1,0,0]]
  <strong>Output:</strong> 6
  <strong>Explanation:</strong> Given three friends living at (0,0), (0,4), and (2,2).
  The point (0,2) is an ideal meeting point, as the total travel distance of 2 + 2 + 2 = 6 is minimal.
  So return 6.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> grid = [[1,1]]
  <strong>Output:</strong> 1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == grid.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == grid[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 200

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i][j] is either 0 or 1.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

There will be at least two friends in the grid.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
