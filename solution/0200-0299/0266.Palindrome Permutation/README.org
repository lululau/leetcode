* [[https://leetcode-cn.com/problems/palindrome-permutation][266.
回文排列]]
  :PROPERTIES:
  :CUSTOM_ID: 回文排列
  :END:
[[./solution/0200-0299/0266.Palindrome Permutation/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个字符串，判断该字符串中是否可以通过重新排列组合，形成一个回文字符串。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> <code>&quot;code&quot;</code>
  <strong>输出:</strong> false</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> <code>&quot;aab&quot;</code>
  <strong>输出:</strong> true</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> <code>&quot;carerac&quot;</code>
  <strong>输出:</strong> true</pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

利用
HashMap（字典表）统计每个字符出现的频率，至多有一个字符出现奇数次数即可。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def canPermutePalindrome(self, s: str) -> bool:
          mapper = {}
          for ch in s:
              mapper[ch] = mapper.get(ch, 0) + 1
          cnt = 0
          for _, v in mapper.items():
              if v % 2 != 0:
                  cnt += 1
          return cnt <= 1
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean canPermutePalindrome(String s) {
          Map<Character, Integer> map = new HashMap<>();
          for (int i = 0, n = s.length(); i < n; ++i) {
              char ch = s.charAt(i);
              map.put(ch, map.getOrDefault(ch, 0) + 1);
          }
          int cnt = 0;
          for (Map.Entry<Character, Integer> entry : map.entrySet()) {
              if (entry.getValue() % 2 != 0) {
                  ++cnt;
              }
          }
          return cnt <= 1;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
