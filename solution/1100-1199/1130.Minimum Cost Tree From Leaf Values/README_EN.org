* [[https://leetcode.com/problems/minimum-cost-tree-from-leaf-values][1130.
Minimum Cost Tree From Leaf Values]]
  :PROPERTIES:
  :CUSTOM_ID: minimum-cost-tree-from-leaf-values
  :END:
[[./solution/1100-1199/1130.Minimum Cost Tree From Leaf Values/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array arr of positive integers, consider all binary trees such
that:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Each node has either 0 or 2 children;

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The values of arr correspond to the values of each leaf in an in-order
traversal of the tree.  (Recall that a node is a leaf if and only if it
has 0 children.)

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The value of each non-leaf node is equal to the product of the largest
leaf value in its left and right subtree respectively.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

Among all possible binary trees considered, return the smallest possible
sum of the values of each non-leaf node.  It is guaranteed this sum fits
into a 32-bit integer.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input:</strong> arr = [6,2,4]

  <strong>Output:</strong> 32

  <strong>Explanation:</strong>

  There are two possible trees.  The first has non-leaf node sum 36, and the second has non-leaf node sum 32.



      24            24

     /  \          /  \

    12   4        6    8

   /  \               / \

  6    2             2   4

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

2 <= arr.length <= 40

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr[i] <= 15

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

It is guaranteed that the answer fits into a 32-bit signed integer
(ie. it is less than 2^31).

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
