* [[https://leetcode-cn.com/problems/armstrong-number][1134.
阿姆斯特朗数]]
  :PROPERTIES:
  :CUSTOM_ID: 阿姆斯特朗数
  :END:
[[./solution/1100-1199/1134.Armstrong Number/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

假设存在一个 k 位数 N，其每一位上的数字的 k
次幂的总和也是 N，那么这个数是阿姆斯特朗数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个正整数 N，让你来判定他是否是阿姆斯特朗数，是则返回
true，不是则返回 false。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>153
  <strong>输出：</strong>true
  <strong>示例： </strong>
  153 是一个 3 位数，且 153 = 1^3 + 5^3 + 3^3。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>123
  <strong>输出：</strong>false
  <strong>解释： </strong>
  123 是一个 3 位数，且 123 != 1^3 + 2^3 + 3^3 = 36。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= N <= 10^8

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

先求数字 n 的长度 k，然后累加 n 上每一位的数字的 k
次幂。最后判断累加的结果是否与 n 相等即可。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def isArmstrong(self, n: int) -> bool:
          k = len(str(n))
          s, t = 0, n
          while t:
              t, v = divmod(t, 10)
              s += pow(v, k)
          return n == s
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean isArmstrong(int n) {
          int k = String.valueOf(n).length();
          int s = 0, t = n;
          while (t != 0) {
              s += Math.pow(t % 10, k);
              t /= 10;
          }
          return n == s;
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number} n
   * @return {boolean}
   */
  var isArmstrong = function (n) {
    const k = String(n).length;
    let s = 0;
    let t = n;
    while (t) {
      s += Math.pow(t % 10, k);
      t = Math.floor(t / 10);
    }
    return n == s;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
