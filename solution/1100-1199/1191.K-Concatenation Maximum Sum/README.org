* [[https://leetcode-cn.com/problems/k-concatenation-maximum-sum][1191.
K 次串联后最大子数组之和]]
  :PROPERTIES:
  :CUSTOM_ID: k-次串联后最大子数组之和
  :END:
[[./solution/1100-1199/1191.K-Concatenation Maximum Sum/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 arr 和一个整数 k。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

首先，我们要对该数组进行修改，即把原数组 arr 重复 k 次。

#+begin_html
  </p>
#+end_html

#+begin_html
  <blockquote>
#+end_html

#+begin_html
  <p>
#+end_html

举个例子，如果 arr = [1, 2] 且 k = 3，那么修改后的数组就是 [1, 2, 1, 2,
1, 2]。

#+begin_html
  </p>
#+end_html

#+begin_html
  </blockquote>
#+end_html

#+begin_html
  <p>
#+end_html

然后，请你返回修改后的数组中的最大的子数组之和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意，子数组长度可以是 0，在这种情况下它的总和也是 0。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

由于 结果可能会很大，所以需要 模（mod） 10^9 + 7 后再返回。 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,2], k = 3
  <strong>输出：</strong>9
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [1,-2,1], k = 5
  <strong>输出：</strong>2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>arr = [-1,-2], k = 7
  <strong>输出：</strong>0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= arr.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-10^4 <= arr[i] <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
