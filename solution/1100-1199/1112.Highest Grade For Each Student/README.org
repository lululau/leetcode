* [[https://leetcode-cn.com/problems/highest-grade-for-each-student][1112.
每位学生的最高成绩]]
  :PROPERTIES:
  :CUSTOM_ID: 每位学生的最高成绩
  :END:
[[./solution/1100-1199/1112.Highest Grade For Each Student/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

表：Enrollments

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +---------------+---------+
  | Column Name   | Type    |
  +---------------+---------+
  | student_id    | int     |
  | course_id     | int     |
  | grade         | int     |
  +---------------+---------+
  (student_id, course_id) 是该表的主键。

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

编写一个 SQL
查询，查询每位学生获得的最高成绩和它所对应的科目，若科目成绩并列，取 course_id 最小的一门。查询结果需按 student_id 增序进行排序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

查询结果格式如下所示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  Enrollments 表：
  +------------+-------------------+
  | student_id | course_id | grade |
  +------------+-----------+-------+
  | 2          | 2         | 95    |
  | 2          | 3         | 95    |
  | 1          | 1         | 90    |
  | 1          | 2         | 99    |
  | 3          | 1         | 80    |
  | 3          | 2         | 75    |
  | 3          | 3         | 82    |
  +------------+-----------+-------+

  Result 表：
  +------------+-------------------+
  | student_id | course_id | grade |
  +------------+-----------+-------+
  | 1          | 2         | 99    |
  | 2          | 2         | 95    |
  | 3          | 3         | 82    |
  +------------+-----------+-------+
  </pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *SQL*
    :PROPERTIES:
    :CUSTOM_ID: sql
    :END:
#+begin_src sql
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
