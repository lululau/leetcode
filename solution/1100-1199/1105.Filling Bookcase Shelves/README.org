* [[https://leetcode-cn.com/problems/filling-bookcase-shelves][1105.
填充书架]]
  :PROPERTIES:
  :CUSTOM_ID: 填充书架
  :END:
[[./solution/1100-1199/1105.Filling Bookcase Shelves/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

附近的家居城促销，你买回了一直心仪的可调节书架，打算把自己的书都整理到新的书架上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

你把要摆放的书 books 都整理好，叠成一摞：从上往下，第 i 本书的厚度为
books[i][0]，高度为 books[i][1]。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

按顺序 将这些书摆放到总宽度为 shelf_width 的书架上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

先选几本书放在书架上（它们的厚度之和小于等于书架的宽度
shelf_width），然后再建一层书架。重复这个过程，直到把所有的书都放在书架上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

需要注意的是，在上述过程的每个步骤中，摆放书的顺序与你整理好的顺序相同。
例如，如果这里有 5
本书，那么可能的一种摆放情况是：第一和第二本书放在第一层书架上，第三本书放在第二层书架上，第四和第五本书放在最后一层书架上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每一层所摆放的书的最大高度就是这一层书架的层高，书架整体的高度为各层高之和。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

以这种方式布置书架，返回书架整体可能的最小高度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4
  <strong>输出：</strong>6
  <strong>解释：</strong>
  3 层书架的高度和为 1 + 3 + 2 = 6 。
  第 2 本书不必放在第一层书架上。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= books.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= books[i][0] <= shelf_width <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= books[i][1] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
