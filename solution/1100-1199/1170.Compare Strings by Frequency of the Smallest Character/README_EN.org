* [[https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character][1170.
Compare Strings by Frequency of the Smallest Character]]
  :PROPERTIES:
  :CUSTOM_ID: compare-strings-by-frequency-of-the-smallest-character
  :END:
[[./solution/1100-1199/1170.Compare Strings by Frequency of the Smallest Character/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Let the function f(s) be the frequency of the lexicographically smallest
character in a non-empty string s. For example, if s = "dcce" then f(s)
= 2 because the lexicographically smallest character is 'c', which has a
frequency of 2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are given an array of strings words and another array of query
strings queries. For each query queries[i], count the number of words in
words such that f(queries[i]) < f(W) for each W in words.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an integer array answer, where each answer[i] is the answer to
the ith query.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> queries = [&quot;cbd&quot;], words = [&quot;zaaaz&quot;]
  <strong>Output:</strong> [1]
  <strong>Explanation:</strong> On the first query we have f(&quot;cbd&quot;) = 1, f(&quot;zaaaz&quot;) = 3 so f(&quot;cbd&quot;) &lt; f(&quot;zaaaz&quot;).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> queries = [&quot;bbb&quot;,&quot;cc&quot;], words = [&quot;a&quot;,&quot;aa&quot;,&quot;aaa&quot;,&quot;aaaa&quot;]
  <strong>Output:</strong> [1,2]
  <strong>Explanation:</strong> On the first query only f(&quot;bbb&quot;) &lt; f(&quot;aaaa&quot;). On the second query both f(&quot;aaa&quot;) and f(&quot;aaaa&quot;) are both &gt; f(&quot;cc&quot;).
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= queries.length <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= words.length <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= queries[i].length, words[i].length <= 10

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

queries[i][j], words[i][j] consist of lowercase English letters.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
