* [[https://leetcode-cn.com/problems/diet-plan-performance][1176.
健身计划评估]]
  :PROPERTIES:
  :CUSTOM_ID: 健身计划评估
  :END:
[[./solution/1100-1199/1176.Diet Plan Performance/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你的好友是一位健身爱好者。前段日子，他给自己制定了一份健身计划。现在想请你帮他评估一下这份计划是否合理。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

他会有一份计划消耗的卡路里表，其中 calories[i] 给出了你的这位好友在第 i 天需要消耗的卡路里总量。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

为了更好地评估这份计划，对于卡路里表中的每一天，你都需要计算他
「这一天以及之后的连续几天」 （共 k 天）内消耗的总卡路里 T：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

如果 T < lower，那么这份计划相对糟糕，并失去 1 分； 

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

如果 T > upper，那么这份计划相对优秀，并获得 1 分；

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

否则，这份计划普普通通，分值不做变动。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

请返回统计完所有 calories.length 天后得到的总分作为评估结果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：总分可能是负数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>calories = [1,2,3,4,5], k = 1, lower = 3, upper = 3
  <strong>输出：</strong>0
  <strong>解释：</strong>calories[0], calories[1] &lt; lower 而 calories[3], calories[4] &gt; upper, 总分 = 0.</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>calories = [3,2], k = 2, lower = 0, upper = 1
  <strong>输出：</strong>1
  <strong>解释：</strong>calories[0] + calories[1] &gt; upper, 总分 = 1.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>calories = [6,5,0,0], k = 2, lower = 1, upper = 5
  <strong>输出：</strong>0
  <strong>解释：</strong>calories[0] + calories[1] &gt; upper, calories[2] + calories[3] &lt; lower, 总分 = 0.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= calories.length <= 10^5

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= calories[i] <= 20000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= lower <= upper

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
