* [[https://leetcode-cn.com/problems/article-views-ii][1149. 文章浏览
II]]
  :PROPERTIES:
  :CUSTOM_ID: 文章浏览-ii
  :END:
[[./solution/1100-1199/1149.Article Views II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

Table: Views

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +---------------+---------+
  | Column Name   | Type    |
  +---------------+---------+
  | article_id    | int     |
  | author_id     | int     |
  | viewer_id     | int     |
  | view_date     | date    |
  +---------------+---------+
  此表无主键，因此可能会存在重复行。此表的每一行都表示某人在某天浏览了某位作者的某篇文章。 请注意，同一人的 author_id 和 viewer_id 是相同的。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

编写一条 SQL 查询来找出在同一天阅读至少两篇文章的人，结果按照 id
升序排序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

查询结果的格式如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  Views table:
  +------------+-----------+-----------+------------+
  | article_id | author_id | viewer_id | view_date  |
  +------------+-----------+-----------+------------+
  | 1          | 3         | 5         | 2019-08-01 |
  | 3          | 4         | 5         | 2019-08-01 |
  | 1          | 3         | 6         | 2019-08-02 |
  | 2          | 7         | 7         | 2019-08-01 |
  | 2          | 7         | 6         | 2019-08-02 |
  | 4          | 7         | 1         | 2019-07-22 |
  | 3          | 4         | 4         | 2019-07-21 |
  | 3          | 4         | 4         | 2019-07-21 |
  +------------+-----------+-----------+------------+

  Result table:
  +------+
  | id   |
  +------+
  | 5    |
  | 6    |
  +------+</pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

"=DISTINCT= + =GROUP BY=" 实现。

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *SQL*
    :PROPERTIES:
    :CUSTOM_ID: sql
    :END:
#+begin_src sql
  # Write your MySQL query statement below
  SELECT
      DISTINCT(viewer_id) as id
  FROM
      Views
  GROUP BY
      view_date, viewer_id
  HAVING
      COUNT(DISTINCT(article_id)) > 1
  ORDER BY
      id;
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
