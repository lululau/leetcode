* [[https://leetcode.com/problems/stone-game-ii][1140. Stone Game II]]
  :PROPERTIES:
  :CUSTOM_ID: stone-game-ii
  :END:
[[./solution/1100-1199/1140.Stone Game II/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Alice and Bob continue their games with piles of stones.  There are a
number of piles arranged in a row, and each pile has a positive integer
number of stones piles[i].  The objective of the game is to end with the
most stones. 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Alice and Bob take turns, with Alice starting first.  Initially, M = 1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

On each player's turn, that player can take all the stones in the first
X remaining piles, where 1 <= X <= 2M.  Then, we set M = max(M, X).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The game continues until all the stones have been taken.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Assuming Alice and Bob play optimally, return the maximum number of
stones Alice can get.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> piles = [2,7,9,4,4]
  <strong>Output:</strong> 10
  <strong>Explanation:</strong>  If Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get 2 + 4 + 4 = 10 piles in total. If Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get 2 + 7 = 9 piles in total. So we return 10 since it&#39;s larger. 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> piles = [1,2,3,4,5,100]
  <strong>Output:</strong> 104
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= piles.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= piles[i] <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
