* [[https://leetcode-cn.com/problems/minimum-cost-to-connect-sticks][1167.
连接棒材的最低费用]]
  :PROPERTIES:
  :CUSTOM_ID: 连接棒材的最低费用
  :END:
[[./solution/1100-1199/1167.Minimum Cost to Connect Sticks/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

为了装修新房，你需要加工一些长度为正整数的棒材 。棒材以数组 sticks
的形式给出，其中 sticks[i] 是第 i 根棒材的长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果要将长度分别为 x 和 y 的两根棒材连接在一起，你需要支付 x + y
的费用。 由于施工需要，你必须将所有棒材连接成一根。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回你把所有棒材 sticks 连成一根所需要的最低费用。注意你可以任意选择棒材连接的顺序。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>sticks = [2,4,3]
  <strong>输出：</strong>14
  <strong>解释：</strong>从 sticks = [2,4,3] 开始。
  1. 连接 2 和 3 ，费用为 2 + 3 = 5 。现在 sticks = [5,4]
  2. 连接 5 和 4 ，费用为 5 + 4 = 9 。现在 sticks = [9]
  所有棒材已经连成一根，总费用 5 + 9 = 14
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>sticks = [1,8,3,5]
  <strong>输出：</strong>30
  <strong>解释：</strong>从 sticks = [1,8,3,5] 开始。
  1. 连接 1 和 3 ，费用为 1 + 3 = 4 。现在 sticks = [4,8,5]
  2. 连接 4 和 5 ，费用为 4 + 5 = 9 。现在 sticks = [9,8]
  3. 连接 9 和 8 ，费用为 9 + 8 = 17 。现在 sticks = [17]
  所有棒材已经连成一根，总费用 4 + 9 + 17 = 30
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>sticks = [5]
  <strong>输出：</strong>0
  <strong>解释：</strong>只有一根棒材，不必再连接。总费用 0
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sticks.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sticks[i] <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
