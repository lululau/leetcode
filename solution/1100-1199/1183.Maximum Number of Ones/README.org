* [[https://leetcode-cn.com/problems/maximum-number-of-ones][1183.
矩阵中 1 的最大数量]]
  :PROPERTIES:
  :CUSTOM_ID: 矩阵中-1-的最大数量
  :END:
[[./solution/1100-1199/1183.Maximum Number of Ones/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

现在有一个尺寸为 width *
height 的矩阵 M，矩阵中的每个单元格的值不是 0 就是 1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

而且矩阵 M 中每个大小为 sideLength * sideLength 的 正方形 子阵中，1
的数量不得超过 maxOnes。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你设计一个算法，计算矩阵中最多可以有多少个 1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>width = 3, height = 3, sideLength = 2, maxOnes = 1
  <strong>输出：</strong>4
  <strong>解释：</strong>
  题目要求：在一个 3*3 的矩阵中，每一个 2*2 的子阵中的 1 的数目不超过 1 个。
  最好的解决方案中，矩阵 M 里最多可以有 4 个 1，如下所示：
  [1,0,1]
  [0,0,0]
  [1,0,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>width = 3, height = 3, sideLength = 2, maxOnes = 2
  <strong>输出：</strong>6
  <strong>解释：</strong>
  [1,0,1]
  [1,0,1]
  [1,0,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= width, height <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= sideLength <= width, height

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= maxOnes <= sideLength * sideLength

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
