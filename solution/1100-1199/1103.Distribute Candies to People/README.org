* [[https://leetcode-cn.com/problems/distribute-candies-to-people][1103.
分糖果 II]]
  :PROPERTIES:
  :CUSTOM_ID: 分糖果-ii
  :END:
[[./solution/1100-1199/1103.Distribute Candies to People/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

排排坐，分糖果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们买了一些糖果 candies，打算把它们分给排好队的 n = num_people
个小朋友。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给第一个小朋友 1 颗糖果，第二个小朋友 2
颗，依此类推，直到给最后一个小朋友 n 颗糖果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

然后，我们再回到队伍的起点，给第一个小朋友 n + 1 颗糖果，第二个小朋友
n + 2 颗，依此类推，直到给最后一个小朋友 2 * n 颗糖果。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

重复上述过程（每次都比上一次多给出一颗糖果，当到达队伍终点后再次从队伍起点开始），直到我们分完所有的糖果。注意，就算我们手中的剩下糖果数不够（不比前一次发出的糖果多），这些糖果也会全部发给当前的小朋友。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

返回一个长度为 num_people、元素之和为 candies
的数组，以表示糖果的最终分发情况（即 ans[i] 表示第 i
个小朋友分到的糖果数）。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>candies = 7, num_people = 4
  <strong>输出：</strong>[1,2,3,1]
  <strong>解释：</strong>
  第一次，ans[0] += 1，数组变为 [1,0,0,0]。
  第二次，ans[1] += 2，数组变为 [1,2,0,0]。
  第三次，ans[2] += 3，数组变为 [1,2,3,0]。
  第四次，ans[3] += 1（因为此时只剩下 1 颗糖果），最终数组变为 [1,2,3,1]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>candies = 10, num_people = 3
  <strong>输出：</strong>[5,2,3]
  <strong>解释：</strong>
  第一次，ans[0] += 1，数组变为 [1,0,0]。
  第二次，ans[1] += 2，数组变为 [1,2,0]。
  第三次，ans[2] += 3，数组变为 [1,2,3]。
  第四次，ans[0] += 4，最终数组变为 [5,2,3]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= candies <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= num_people <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
