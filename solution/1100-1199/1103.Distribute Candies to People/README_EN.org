* [[https://leetcode.com/problems/distribute-candies-to-people][1103.
Distribute Candies to People]]
  :PROPERTIES:
  :CUSTOM_ID: distribute-candies-to-people
  :END:
[[./solution/1100-1199/1103.Distribute Candies to People/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

We distribute some number of candies, to a row of n = num_people people
in the following way:

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We then give 1 candy to the first person, 2 candies to the second
person, and so on until we give n candies to the last person.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Then, we go back to the start of the row, giving n + 1 candies to the
first person, n + 2 candies to the second person, and so on until we
give 2 * n candies to the last person.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

This process repeats (with us giving one more candy each time, and
moving to the start of the row after we reach the end) until we run out
of candies.  The last person will receive all of our remaining candies
(not necessarily one more than the previous gift).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return an array (of length num_people and sum candies) that represents
the final distribution of candies.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> candies = 7, num_people = 4
  <strong>Output:</strong> [1,2,3,1]
  <strong>Explanation:</strong>
  On the first turn, ans[0] += 1, and the array is [1,0,0,0].
  On the second turn, ans[1] += 2, and the array is [1,2,0,0].
  On the third turn, ans[2] += 3, and the array is [1,2,3,0].
  On the fourth turn, ans[3] += 1 (because there is only one candy left), and the final array is [1,2,3,1].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> candies = 10, num_people = 3
  <strong>Output:</strong> [5,2,3]
  <strong>Explanation: </strong>
  On the first turn, ans[0] += 1, and the array is [1,0,0].
  On the second turn, ans[1] += 2, and the array is [1,2,0].
  On the third turn, ans[2] += 3, and the array is [1,2,3].
  On the fourth turn, ans[0] += 4, and the final array is [5,2,3].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= candies <= 10^9

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= num_people <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
