* [[https://leetcode.com/problems/find-smallest-common-element-in-all-rows][1198.
Find Smallest Common Element in All Rows]]
  :PROPERTIES:
  :CUSTOM_ID: find-smallest-common-element-in-all-rows
  :END:
[[./solution/1100-1199/1198.Find Smallest Common Element in All Rows/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an m x n matrix mat where every row is sorted in strictly
increasing order, return the smallest common element in all rows.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

If there is no common element, return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,2,3,4,5],[2,4,5,8,10],[3,5,7,9,11],[1,3,5,7,9]]
  <strong>Output:</strong> 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> mat = [[1,2,3],[2,3,4],[2,3,5]]
  <strong>Output:</strong> 2
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == mat.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == mat[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= mat[i][j] <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

mat[i] is sorted in strictly increasing order.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def smallestCommonElement(self, mat: List[List[int]]) -> int:
          counter = collections.Counter()
          for row in mat:
              for num in row:
                  counter[num] += 1
                  if counter[num] == len(mat):
                      return num
          return -1
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int smallestCommonElement(int[][] mat) {
          int[] counter = new int[10001];
          for (int[] row : mat) {
              for (int num : row) {
                  ++counter[num];
                  if (counter[num] == mat.length) {
                      return num;
                  }
              }
          }
          return -1;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
