* [[https://leetcode.com/problems/largest-unique-number][1133. Largest
Unique Number]]
  :PROPERTIES:
  :CUSTOM_ID: largest-unique-number
  :END:
[[./solution/1100-1199/1133.Largest Unique Number/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an array of integers A, return the largest integer that only
occurs once.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

If no integer occurs once, return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[5,7,3,9,4,9,8,3,1]</span>

  <strong>Output: </strong><span id="example-output-1">8</span>

  <strong>Explanation: </strong>

  The maximum integer in the array is 9 but it is repeated. The number 8 occurs only once, so it&#39;s the answer.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>

  <strong>Input: </strong><span id="example-input-1-1">[9,9,8,8]</span>

  <strong>Output: </strong><span id="example-output-1">-1</span>

  <strong>Explanation: </strong>

  There is no number that occurs only once.

  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= A.length <= 2000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= A[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution:
      def largestUniqueNumber(self, A: List[int]) -> int:
          counter = collections.Counter(A)
          for i in range(1000, -1, -1):
              if counter[i] == 1:
                  return i
          return -1
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public int largestUniqueNumber(int[] A) {
          int[] counter = new int[1001];
          for (int a : A) {
              ++counter[a];
          }
          for (int i = 1000; i >= 0; --i) {
              if (counter[i] == 1) {
                  return i;
              }
          }
          return -1;
      }
  }
#+end_src

*** *JavaScript*
    :PROPERTIES:
    :CUSTOM_ID: javascript
    :END:
#+begin_src js
  /**
   * @param {number[]} A
   * @return {number}
   */
  var largestUniqueNumber = function (A) {
    let counter = {};
    for (const a of A) {
      counter[a] = (counter[a] || 0) + 1;
    }
    for (let i = 1000; i >= 0; --i) {
      if (counter[i] == 1) {
        return i;
      }
    }
    return -1;
  };
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
