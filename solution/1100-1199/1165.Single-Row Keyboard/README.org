* [[https://leetcode-cn.com/problems/single-row-keyboard][1165.
单行键盘]]
  :PROPERTIES:
  :CUSTOM_ID: 单行键盘
  :END:
[[./solution/1100-1199/1165.Single-Row Keyboard/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

我们定制了一款特殊的力扣键盘，所有的键都排列在一行上。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们可以按从左到右的顺序，用一个长度为 26 的字符串 keyboard （索引从 0
开始，到 25 结束）来表示该键盘的键位布局。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

现在需要测试这个键盘是否能够有效工作，那么我们就需要个机械手来测试这个键盘。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

最初的时候，机械手位于左边起第一个键（也就是索引为 0
的键）的上方。当机械手移动到某一字符所在的键位时，就会在终端上输出该字符。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

机械手从索引 i 移动到索引 j 所需要的时间是 |i - j|。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

当前测试需要你使用机械手输出指定的单词 word，请你编写一个函数来计算机械手输出该单词所需的时间。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>keyboard = &quot;abcdefghijklmnopqrstuvwxyz&quot;, word = &quot;cba&quot;
  <strong>输出：</strong>4
  <strong>解释：
  </strong>机械手从 0 号键移动到 2 号键来输出 &#39;c&#39;，又移动到 1 号键来输出 &#39;b&#39;，接着移动到 0 号键来输出 &#39;a&#39;。
  总用时 = 2 + 1 + 1 = 4. 
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>keyboard = &quot;pqrstuvwxyzabcdefghijklmno&quot;, word = &quot;leetcode&quot;
  <strong>输出：</strong>73
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

keyboard.length == 26

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

keyboard 按某种特定顺序排列，并包含每个小写英文字母一次。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= word.length <= 10^4

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

word[i] 是一个小写英文字母

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
