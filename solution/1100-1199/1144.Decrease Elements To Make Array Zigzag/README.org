* [[https://leetcode-cn.com/problems/decrease-elements-to-make-array-zigzag][1144.
递减元素使数组呈锯齿状]]
  :PROPERTIES:
  :CUSTOM_ID: 递减元素使数组呈锯齿状
  :END:
[[./solution/1100-1199/1144.Decrease Elements To Make Array Zigzag/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一个整数数组 nums，每次 操作 会从中选择一个元素并
将该元素的值减少 1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果符合下列情况之一，则数组 A 就是 锯齿数组：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

每个偶数索引对应的元素都大于相邻的元素，即 A[0] > A[1] < A[2] > A[3] <
A[4] > ...

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

或者，每个奇数索引对应的元素都大于相邻的元素，即 A[0] < A[1] > A[2] <
A[3] > A[4] < ...

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

返回将数组 nums 转换为锯齿数组所需的最小操作次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [1,2,3]
  <strong>输出：</strong>2
  <strong>解释：</strong>我们可以把 2 递减到 0，或把 3 递减到 1。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>nums = [9,6,1,6,2]
  <strong>输出：</strong>4
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
