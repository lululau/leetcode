* [[https://leetcode-cn.com/problems/as-far-from-land-as-possible][1162.
地图分析]]
  :PROPERTIES:
  :CUSTOM_ID: 地图分析
  :END:
[[./solution/1100-1199/1162.As Far from Land as Possible/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

你现在手里有一份大小为 N x N 的 网格 grid，上面的每个 单元格
都用 0 和 1 标记好了。其中 0 代表海洋，1 代表陆地，请你找出一个海洋单元格，这个海洋单元格到离它最近的陆地单元格的距离是最大的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们这里说的距离是「曼哈顿距离」（ Manhattan Distance）：(x0, y0)
和 (x1, y1) 这两个单元格之间的距离是 |x0 - x1| + |y0 - y1| 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果网格上只有陆地或者海洋，请返回 -1。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[1,0,1],[0,0,0],[1,0,1]]
  <strong>输出：</strong>2
  <strong>解释： </strong>
  海洋单元格 (1, 1) 和所有陆地单元格之间的距离都达到最大，最大距离为 2。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>[[1,0,0],[0,0,0],[0,0,0]]
  <strong>输出：</strong>4
  <strong>解释： </strong>
  海洋单元格 (2, 2) 和所有陆地单元格之间的距离都达到最大，最大距离为 4。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= grid.length == grid[0].length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

grid[i][j] 不是 0 就是 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
