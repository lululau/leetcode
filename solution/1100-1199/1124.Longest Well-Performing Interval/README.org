* [[https://leetcode-cn.com/problems/longest-well-performing-interval][1124.
表现良好的最长时间段]]
  :PROPERTIES:
  :CUSTOM_ID: 表现良好的最长时间段
  :END:
[[./solution/1100-1199/1124.Longest Well-Performing Interval/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给你一份工作时间表 hours，上面记录着某一位员工每天的工作小时数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

我们认为当员工一天中的工作小时数大于 8
小时的时候，那么这一天就是「劳累的一天」。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

所谓「表现良好的时间段」，意味在这段时间内，「劳累的天数」是严格
大于「不劳累的天数」。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

请你返回「表现良好时间段」的最大长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入：</strong>hours = [9,9,6,0,6,6,9]
  <strong>输出：</strong>3
  <strong>解释：</strong>最长的表现良好时间段是 [9,9,6]。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= hours.length <= 10000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= hours[i] <= 16

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
