* [[https://leetcode.com/problems/split-array-into-consecutive-subsequences][659.
Split Array into Consecutive Subsequences]]
  :PROPERTIES:
  :CUSTOM_ID: split-array-into-consecutive-subsequences
  :END:
[[./solution/0600-0699/0659.Split Array into Consecutive Subsequences/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given an integer array nums that is sorted in ascending order, return
true if and only if you can split it into one or more subsequences such
that each subsequence consists of consecutive integers and has a length
of at least 3.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,3,4,5]
  <strong>Output:</strong> true
  <b>Explanation:</b>
  You can split them into two consecutive subsequences : 
  1, 2, 3
  3, 4, 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,3,4,4,5,5]
  <strong>Output:</strong> true
  <b>Explanation:</b>
  You can split them into two consecutive subsequences : 
  1, 2, 3, 4, 5
  3, 4, 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [1,2,3,4,4,5]
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-1000 <= nums[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums is sorted in an ascending order.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
