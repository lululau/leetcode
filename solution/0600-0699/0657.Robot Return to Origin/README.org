* [[https://leetcode-cn.com/problems/robot-return-to-origin][657.
机器人能否返回原点]]
  :PROPERTIES:
  :CUSTOM_ID: 机器人能否返回原点
  :END:
[[./solution/0600-0699/0657.Robot Return to Origin/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在二维平面上，有一个机器人从原点 (0, 0)
开始。给出它的移动顺序，判断这个机器人在完成移动后是否在 (0, 0) 处结束。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

移动顺序由字符串表示。字符 move[i] 表示其第 i
次移动。机器人的有效动作有 R（右），L（左），U（上）和
D（下）。如果机器人在完成所有动作后返回原点，则返回 true。否则，返回
false。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注意：机器人“面朝”的方向无关紧要。 “R” 将始终使机器人向右移动一次，“L”
将始终向左移动等。此外，假设每次移动机器人的移动幅度相同。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> &quot;UD&quot;
  <strong>输出:</strong> true
  <strong>解释：</strong>机器人向上移动一次，然后向下移动一次。所有动作都具有相同的幅度，因此它最终回到它开始的原点。因此，我们返回 true。</pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> &quot;LL&quot;
  <strong>输出:</strong> false
  <strong>解释：</strong>机器人向左移动两次。它最终位于原点的左侧，距原点有两次 &ldquo;移动&rdquo; 的距离。我们返回 false，因为它在移动结束时没有返回原点。</pre>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
  class Solution:
      def judgeCircle(self, moves: str) -> bool:
          x = y = 0
          for c in moves:
              if c == 'R':
                  x += 1
              elif c == 'L':
                  x -= 1
              elif c == 'U':
                  y += 1
              elif c == 'D':
                  y -= 1
          return x == 0 and y == 0
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
  class Solution {
      public boolean judgeCircle(String moves) {
          int x = 0, y = 0;
          for (int i = 0; i < moves.length(); ++i) {
              char c = moves.charAt(i);
              if (c == 'R') ++x;
              else if (c == 'L') --x;
              else if (c == 'U') ++y;
              else if (c == 'D') --y;
          }
          return x == 0 && y == 0;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
