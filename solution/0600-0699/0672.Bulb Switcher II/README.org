* [[https://leetcode-cn.com/problems/bulb-switcher-ii][672. 灯泡开关 Ⅱ]]
  :PROPERTIES:
  :CUSTOM_ID: 灯泡开关-ⅱ
  :END:
[[./solution/0600-0699/0672.Bulb Switcher II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

现有一个房间，墙上挂有 n 只已经打开的灯泡和 4
个按钮。在进行了 m 次未知操作后，你需要返回这 n 只灯泡可能有多少种不同的状态。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

假设这 n 只灯泡被编号为 [1, 2, 3 ..., n]，这 4 个按钮的功能如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

将所有灯泡的状态反转（即开变为关，关变为开）

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

将编号为偶数的灯泡的状态反转

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

将编号为奇数的灯泡的状态反转

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

将编号为 3k+1 的灯泡的状态反转（k = 0, 1, 2, ...)

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> n = 1, m = 1.
  <strong>输出:</strong> 2
  <strong>说明:</strong> 状态为: [开], [关]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> n = 2, m = 1.
  <strong>输出:</strong> 3
  <strong>说明:</strong> 状态为: [开, 关], [关, 开], [关, 关]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> n = 3, m = 1.
  <strong>输出:</strong> 4
  <strong>说明:</strong> 状态为: [关, 开, 关], [开, 关, 开], [关, 关, 关], [关, 开, 开].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意： n 和 m 都属于 [0, 1000].

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
