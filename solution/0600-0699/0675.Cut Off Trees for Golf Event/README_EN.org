* [[https://leetcode.com/problems/cut-off-trees-for-golf-event][675. Cut
Off Trees for Golf Event]]
  :PROPERTIES:
  :CUSTOM_ID: cut-off-trees-for-golf-event
  :END:
[[./solution/0600-0699/0675.Cut Off Trees for Golf Event/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are asked to cut off all the trees in a forest for a golf event. The
forest is represented as an m x n matrix. In this matrix:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 means the cell cannot be walked through.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 represents an empty cell that can be walked through.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

A number greater than 1 represents a tree in a cell that can be walked
through, and this number is the tree's height.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

In one step, you can walk in any of the four directions: north, east,
south, and west. If you are standing in a cell with a tree, you can
choose whether to cut it off.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You must cut off the trees in order from shortest to tallest. When you
cut off a tree, the value at its cell becomes 1 (an empty cell).

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Starting from the point (0, 0), return the minimum steps you need to
walk to cut off all the trees. If you cannot cut off all the trees,
return -1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

You are guaranteed that no two trees have the same height, and there is
at least one tree needs to be cut off.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> forest = [[1,2,3],[0,0,4],[7,6,5]]
  <strong>Output:</strong> 6
  <strong>Explanation:</strong> Following the path above allows you to cut off the trees from shortest to tallest in 6 steps.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> forest = [[1,2,3],[0,0,0],[7,6,5]]
  <strong>Output:</strong> -1
  <strong>Explanation:</strong> The trees in the bottom row cannot be accessed as the middle row is blocked.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> forest = [[2,3,4],[0,0,5],[8,7,6]]
  <strong>Output:</strong> 6
  <b>Explanation:</b> You can follow the same path as Example 1 to cut off all the trees.
  Note that you can cut off the first tree at (0, 0) before making any steps.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

m == forest.length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

n == forest[i].length

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= m, n <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= forest[i][j] <= 109

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
