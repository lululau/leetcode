* [[https://leetcode-cn.com/problems/k-empty-slots][683. K
个关闭的灯泡]]
  :PROPERTIES:
  :CUSTOM_ID: k-个关闭的灯泡
  :END:
[[./solution/0600-0699/0683.K Empty Slots/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

N 个灯泡排成一行，编号从 1 到 N
。最初，所有灯泡都关闭。每天只打开一个灯泡，直到 N 天后所有灯泡都打开。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给你一个长度为 N 的灯泡数组 blubs ，其中 bulls[i] = x 意味着在第 (i+1)
天，我们会把在位置 x 的灯泡打开，其中 i 从 0 开始，x 从 1 开始。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p class="MachineTrans-lang-zh-CN">
#+end_html

给你一个整数 K ，请你输出在第几天恰好有两个打开的灯泡，使得它们中间 正好
有 K 个灯泡且这些灯泡 全部是关闭的 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p class="MachineTrans-lang-zh-CN">
#+end_html

如果不存在这种情况，返回 -1 。如果有多天都出现这种情况，请返回
最小的天数 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <b>输入：</b>
  bulbs: [1,3,2]
  K: 1
  <b>输出：</b>2
  <b>解释：</b>
  第一天 bulbs[0] = 1，打开第一个灯泡 [1,0,0]
  第二天 bulbs[1] = 3，打开第三个灯泡 [1,0,1]
  第三天 bulbs[2] = 2，打开第二个灯泡 [1,1,1]
  返回2，因为在第二天，两个打开的灯泡之间恰好有一个关闭的灯泡。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>
  bulbs: [1,2,3]
  k: 1
  <strong>输出：</strong>-1
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= N <= 20000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= bulbs[i] <= N

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

bulbs 是一个由从 1 到 N 的数字构成的排列

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= K <= 20000

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
