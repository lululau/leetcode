* [[https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists][632.
Smallest Range Covering Elements from K Lists]]
  :PROPERTIES:
  :CUSTOM_ID: smallest-range-covering-elements-from-k-lists
  :END:
[[./solution/0600-0699/0632.Smallest Range Covering Elements from K Lists/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You have k lists of sorted integers in non-decreasing order. Find the
smallest range that includes at least one number from each of the k
lists.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

We define the range [a, b] is smaller than range [c, d] if b - a < d - c
or a < c if b - a == d - c.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [[4,10,15,24,26],[0,9,12,20],[5,18,22,30]]
  <strong>Output:</strong> [20,24]
  <strong>Explanation: </strong>
  List 1: [4, 10, 15, 24,26], 24 is in range [20,24].
  List 2: [0, 9, 12, 20], 20 is in range [20,24].
  List 3: [5, 18, 22, 30], 22 is in range [20,24].
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [[1,2,3],[1,2,3],[1,2,3]]
  <strong>Output:</strong> [1,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [[10,10],[11,11]]
  <strong>Output:</strong> [10,11]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [[10],[11]]
  <strong>Output:</strong> [10,11]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> nums = [[1],[2],[3],[4],[5],[6],[7]]
  <strong>Output:</strong> [1,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

nums.length == k

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= k <= 3500

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums[i].length <= 50

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-105 <= nums[i][j] <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums[i] is sorted in non-decreasing order.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
