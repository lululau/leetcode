* [[https://leetcode.com/problems/sum-of-square-numbers][633. Sum of
Square Numbers]]
  :PROPERTIES:
  :CUSTOM_ID: sum-of-square-numbers
  :END:
[[./solution/0600-0699/0633.Sum of Square Numbers/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a non-negative integer c, decide whether there're two integers a
and b such that a2 + b2 = c.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> c = 5
  <strong>Output:</strong> true
  <strong>Explanation:</strong> 1 * 1 + 2 * 2 = 5
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> c = 3
  <strong>Output:</strong> false
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> c = 4
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> c = 2
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 5:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> c = 1
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= c <= 231 - 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:
[[./images/table.png]]

The picture above shows the relationship between =a=, =b=, and =c=. This
question is actually looking up =c= in this table

From the upper right corner of the table, it is not difficult to find
that it is similar to a binary search tree, so just start from the upper
right corner and search according to the law of the binary search tree

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
  class Solution(object):
      def judgeSquareSum(self, c):
          i, j = 0, int(math.sqrt(c))
          while i <= j:
              s = i * i + j * j
              if s < c:
                  i += 1
              elif s > c:
                  j -= 1
              else:
                  return True
          return False
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
  class Solution {
      public boolean judgeSquareSum(int c) {
          int i = 0, j = (int) Math.sqrt(c);
          while (i <= j) {
              int s = i * i + j * j;
              if (s < c) {
                  ++i;
              } else if (s > c) {
                  --j;
              } else {
                  return true;
              }
          }
          return false;
      }
  }
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
