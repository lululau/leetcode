* [[https://leetcode-cn.com/problems/count-binary-substrings][696.
计数二进制子串]]
  :PROPERTIES:
  :CUSTOM_ID: 计数二进制子串
  :END:
[[./solution/0600-0699/0696.Count Binary Substrings/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个字符串 s，计算具有相同数量 0 和 1
的非空（连续）子字符串的数量，并且这些子字符串中的所有 0 和所有 1
都是连续的。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

重复出现的子串要计算它们出现的次数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1 :

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> "00110011"
  <strong>输出:</strong> 6
  <strong>解释:</strong> 有6个子串具有相同数量的连续1和0：“0011”，“01”，“1100”，“10”，“0011” 和 “01”。

  请注意，一些重复出现的子串要计算它们出现的次数。

  另外，“00110011”不是有效的子串，因为所有的0（和1）没有组合在一起。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2 :

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> "10101"
  <strong>输出:</strong> 4
  <strong>解释:</strong> 有4个子串：“10”，“01”，“10”，“01”，它们具有相同数量的连续1和0。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

s.length 在1到50,000之间。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s 只包含“0”或“1”字符。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
