* [[https://leetcode-cn.com/problems/find-the-derangement-of-an-array][634.
寻找数组的错位排列]]
  :PROPERTIES:
  :CUSTOM_ID: 寻找数组的错位排列
  :END:
[[./solution/0600-0699/0634.Find the Derangement of An Array/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

在组合数学中，如果一个排列中所有元素都不在原先的位置上，那么这个排列就被称为错位排列。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一个从 1 到
n 升序排列的数组，你可以计算出总共有多少个不同的错位排列吗？

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

由于答案可能非常大，你只需要将答案对 109+7 取余输出即可。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

样例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> 3
  <strong>输出:</strong> 2
  <strong>解释:</strong> 原始的数组为 [1,2,3]。两个错位排列的数组为 [2,3,1] 和 [3,1,2]。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

注释: n 的范围是 [1, 106]。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
