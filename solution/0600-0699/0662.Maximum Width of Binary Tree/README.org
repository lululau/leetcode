* [[https://leetcode-cn.com/problems/maximum-width-of-binary-tree][662.
二叉树最大宽度]]
  :PROPERTIES:
  :CUSTOM_ID: 二叉树最大宽度
  :END:
[[./solution/0600-0699/0662.Maximum Width of Binary Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个二叉树，编写一个函数来获取这个树的最大宽度。树的宽度是所有层中的最大宽度。这个二叉树与满二叉树（full
binary tree）结构相同，但一些节点为空。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

每一层的宽度被定义为两个端点（该层最左和最右的非空节点，两端点间的null节点也计入长度）之间的长度。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> 

             1
           /   \
          3     2
         / \     \  
        5   3     9 

  <strong>输出:</strong> 4
  <strong>解释:</strong> 最大值出现在树的第 3 层，宽度为 4 (5,3,null,9)。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> 

            1
           /  
          3    
         / \       
        5   3     

  <strong>输出:</strong> 2
  <strong>解释:</strong> 最大值出现在树的第 3 层，宽度为 2 (5,3)。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> 

            1
           / \
          3   2 
         /        
        5      

  <strong>输出:</strong> 2
  <strong>解释:</strong> 最大值出现在树的第 2 层，宽度为 2 (3,2)。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 4:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入:</strong> 

            1
           / \
          3   2
         /     \  
        5       9 
       /         \
      6           7
  <strong>输出:</strong> 8
  <strong>解释:</strong> 最大值出现在树的第 4 层，宽度为 8 (6,null,null,null,null,null,null,7)。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

注意: 答案在32位有符号整数的表示范围内。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
