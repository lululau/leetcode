* [[https://leetcode-cn.com/problems/tree-node][608. 树节点]]
  :PROPERTIES:
  :CUSTOM_ID: 树节点
  :END:
[[./solution/0600-0699/0608.Tree Node/README_EN.org][English Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个表 tree，id 是树节点的编号， p_id 是它父节点的 id 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>+----+------+
  | id | p_id |
  +----+------+
  | 1  | null |
  | 2  | 1    |
  | 3  | 1    |
  | 4  | 2    |
  | 5  | 2    |
  +----+------+</pre>
#+end_html

#+begin_html
  <p>
#+end_html

树中每个节点属于以下三种类型之一：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

叶子：如果这个节点没有任何孩子节点。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

根：如果这个节点是整棵树的根，即没有父节点。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

内部节点：如果这个节点既不是叶子节点也不是根节点。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

写一个查询语句，输出所有节点的编号和节点的类型，并将结果按照节点编号排序。上面样例的结果为：

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>+----+------+
  | id | Type |
  +----+------+
  | 1  | Root |
  | 2  | Inner|
  | 3  | Leaf |
  | 4  | Leaf |
  | 5  | Leaf |
  +----+------+
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

解释

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

节点 '1' 是根节点，因为它的父节点是 NULL ，同时它有孩子节点 '2' 和 '3'
。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

节点 '2' 是内部节点，因为它有父节点 '1' ，也有孩子节点 '4' 和 '5' 。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

节点 '3', '4' 和 '5' 都是叶子节点，因为它们都有父节点同时没有孩子节点。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

样例中树的形态如下：

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_example
  <pre>             1
          /   \
                    2       3
                  /   \
                4       5
#+end_example

#+begin_html
  </pre>
#+end_html

#+begin_example
  <p>&nbsp;</p>
  </li>
#+end_example

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

注意

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

如果树中只有一个节点，你只需要输出它的根属性。

#+begin_html
  </p>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *SQL*
    :PROPERTIES:
    :CUSTOM_ID: sql
    :END:
#+begin_src sql
#+end_src

#+begin_html
  <!-- tabs:end -->
#+end_html
