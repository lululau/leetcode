* [[https://leetcode.com/problems/valid-parenthesis-string][678. Valid
Parenthesis String]]
  :PROPERTIES:
  :CUSTOM_ID: valid-parenthesis-string
  :END:
[[./solution/0600-0699/0678.Valid Parenthesis String/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a string s containing only three types of characters: '(', ')' and
'*', return true if s is valid.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The following rules define a valid string:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Any left parenthesis '(' must have a corresponding right parenthesis
')'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Any right parenthesis ')' must have a corresponding left parenthesis
'('.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

Left parenthesis '(' must go before the corresponding right parenthesis
')'.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

'*' could be treated as a single right parenthesis ')' or a single left
parenthesis '(' or an empty string "".

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "()"
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "(*)"
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 3:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>Input:</strong> s = "(*))"
  <strong>Output:</strong> true
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= s.length <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

s[i] is '(', ')' or '*'.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
