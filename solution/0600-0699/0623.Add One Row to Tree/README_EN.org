* [[https://leetcode.com/problems/add-one-row-to-tree][623. Add One Row
to Tree]]
  :PROPERTIES:
  :CUSTOM_ID: add-one-row-to-tree
  :END:
[[./solution/0600-0699/0623.Add One Row to Tree/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given the root of a binary tree and two integers val and depth, add a
row of nodes with value val at the given depth depth.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note that the root node is at depth 1.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The adding rule is:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

Given the integer depth, for each not null tree node cur at the depth
depth - 1, create two tree nodes with value val as cur's left subtree
root and right subtree root.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cur's original left subtree should be the left subtree of the new left
subtree root.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

cur's original right subtree should be the right subtree of the new
right subtree root.

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

If depth == 1 that means there is no depth depth - 1 at all, then create
a tree node with value val as the new root of the whole original tree,
and the original tree is the new root's left subtree.

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [4,2,6,3,1,5], val = 1, depth = 2
  <strong>Output:</strong> [4,1,1,2,null,null,6,3,1,5]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root = [4,2,null,3,1], val = 1, depth = 3
  <strong>Output:</strong> [4,2,null,1,1,3,null,null,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in the tree is in the range [1, 104].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The depth of the tree is in the range [1, 104].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-100 <= Node.val <= 100

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-105 <= val <= 105

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= depth <= the depth of tree + 1

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
