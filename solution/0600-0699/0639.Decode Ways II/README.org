* [[https://leetcode-cn.com/problems/decode-ways-ii][639. 解码方法 II]]
  :PROPERTIES:
  :CUSTOM_ID: 解码方法-ii
  :END:
[[./solution/0600-0699/0639.Decode Ways II/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

一条包含字母 A-Z 的消息通过以下的方式进行了编码：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>&#39;A&#39; -&gt; 1
  &#39;B&#39; -&gt; 2
  ...
  &#39;Z&#39; -&gt; 26
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

除了上述的条件以外，现在加密字符串可以包含字符
'/'了，字符'/'可以被当做1到9当中的任意一个数字。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

给定一条包含数字和字符'*'的加密信息，请确定解码方法的总数。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

同时，由于结果值可能会相当的大，所以你应当对109 +
7取模。（翻译者标注：此处取模主要是为了防止溢出）

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1 :

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> &quot;*&quot;
  <strong>输出:</strong> 9
  <strong>解释:</strong> 加密的信息可以被解密为: &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2 :

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre><strong>输入:</strong> &quot;1*&quot;
  <strong>输出:</strong> 9 + 9 = 18（翻译者标注：这里1*可以分解为1,* 或者当做1*来处理，所以结果是9+9=18）
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

说明 :

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

输入的字符串长度范围是 [1, 105]。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

输入的字符串只会包含字符 '*' 和 数字'0' - '9'。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
