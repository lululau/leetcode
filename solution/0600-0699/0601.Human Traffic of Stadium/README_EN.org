* [[https://leetcode.com/problems/human-traffic-of-stadium][601. Human
Traffic of Stadium]]
  :PROPERTIES:
  :CUSTOM_ID: human-traffic-of-stadium
  :END:
[[./solution/0600-0699/0601.Human Traffic of Stadium/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Table: Stadium

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  +---------------+---------+
  | Column Name   | Type    |
  +---------------+---------+
  | id            | int     |
  | visit_date    | date    |
  | people        | int     |
  +---------------+---------+
  visit_date is the primary key for this table.
  Each row of this table contains the visit date and visit id to the stadium with the number of people during the visit.
  No two rows will have the same visit_date, and as the id increases, the dates increase as well.
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Write an SQL query to display the records with three or more rows with
consecutive id's, and the number of people is greater than or equal to
100 for each.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the result table ordered by visit_date in ascending order.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

The query result format is in the following example.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <code>Stadium</code> table:
  +------+------------+-----------+
  | id   | visit_date | people    |
  +------+------------+-----------+
  | 1    | 2017-01-01 | 10        |
  | 2    | 2017-01-02 | 109       |
  | 3    | 2017-01-03 | 150       |
  | 4    | 2017-01-04 | 99        |
  | 5    | 2017-01-05 | 145       |
  | 6    | 2017-01-06 | 1455      |
  | 7    | 2017-01-07 | 199       |
  | 8    | 2017-01-09 | 188       |
  +------+------------+-----------+

  Result table:
  +------+------------+-----------+
  | id   | visit_date | people    |
  +------+------------+-----------+
  | 5    | 2017-01-05 | 145       |
  | 6    | 2017-01-06 | 1455      |
  | 7    | 2017-01-07 | 199       |
  | 8    | 2017-01-09 | 188       |
  +------+------------+-----------+
  The four rows with ids 5, 6, 7, and 8 have consecutive ids and each of them has &gt;= 100 people attended. Note that row 8 was included even though the visit_date was not the next day after row 7.
  The rows with ids 2 and 3 are not included because we need at least three consecutive ids.</pre>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
