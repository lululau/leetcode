* [[https://leetcode-cn.com/problems/maximum-binary-tree][654.
最大二叉树]]
  :PROPERTIES:
  :CUSTOM_ID: 最大二叉树
  :END:
[[./solution/0600-0699/0654.Maximum Binary Tree/README_EN.org][English
Version]]

** 题目描述
   :PROPERTIES:
   :CUSTOM_ID: 题目描述
   :END:

#+begin_html
  <!-- 这里写题目描述 -->
#+end_html

#+begin_html
  <p>
#+end_html

给定一个不含重复元素的整数数组 nums 。一个以此数组直接递归构建的
最大二叉树 定义如下：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

二叉树的根是数组 nums 中的最大元素。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

左子树是通过数组中 最大值左边部分 递归构造出的最大二叉树。

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

右子树是通过数组中 最大值右边部分 递归构造出的最大二叉树。

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  <p>
#+end_html

返回有给定数组 nums 构建的 最大二叉树 。

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

示例 1：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [3,2,1,6,0,5]
  <strong>输出：</strong>[6,3,5,null,2,0,null,null,1]
  <strong>解释：</strong>递归调用如下所示：
  - [3,2,1,6,0,5] 中的最大值是 6 ，左边部分是 [3,2,1] ，右边部分是 [0,5] 。
      - [3,2,1] 中的最大值是 3 ，左边部分是 [] ，右边部分是 [2,1] 。
          - 空数组，无子节点。
          - [2,1] 中的最大值是 2 ，左边部分是 [] ，右边部分是 [1] 。
              - 空数组，无子节点。
              - 只有一个元素，所以子节点是一个值为 1 的节点。
      - [0,5] 中的最大值是 5 ，左边部分是 [0] ，右边部分是 [] 。
          - 只有一个元素，所以子节点是一个值为 0 的节点。
          - 空数组，无子节点。
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

示例 2：

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>输入：</strong>nums = [3,2,1]
  <strong>输出：</strong>[3,null,2,null,1]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

提示：

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

1 <= nums.length <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

0 <= nums[i] <= 1000

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

nums 中的所有整数 互不相同

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** 解法
   :PROPERTIES:
   :CUSTOM_ID: 解法
   :END:

#+begin_html
  <!-- 这里可写通用的实现逻辑 -->
#+end_html

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:

#+begin_html
  <!-- 这里可写当前语言的特殊实现逻辑 -->
#+end_html

#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
