* [[https://leetcode.com/problems/image-smoother][661. Image Smoother]]
  :PROPERTIES:
  :CUSTOM_ID: image-smoother
  :END:
[[./solution/0600-0699/0661.Image Smoother/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

Given a 2D integer matrix M representing the gray scale of an image, you
need to design a smoother to make the gray scale of each cell becomes
the average gray scale (rounding down) of all the 8 surrounding cells
and itself. If a cell has less than 8 surrounding cells, then use as
many as you can.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  <pre>

  <b>Input:</b>

  [[1,1,1],

   [1,0,1],

   [1,1,1]]

  <b>Output:</b>

  [[0, 0, 0],

   [0, 0, 0],

   [0, 0, 0]]

  <b>Explanation:</b>

  For the point (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0

  For the point (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0

  For the point (1,1): floor(8/9) = floor(0.88888889) = 0

  </pre>
#+end_html

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note:

#+begin_html
  <ol>
#+end_html

#+begin_html
  <li>
#+end_html

The value in the given matrix is in the range of [0, 255].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

The length and width of the given matrix are in the range of [1, 150].

#+begin_html
  </li>
#+end_html

#+begin_html
  </ol>
#+end_html

#+begin_html
  </p>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
