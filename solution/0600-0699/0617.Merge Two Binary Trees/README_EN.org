* [[https://leetcode.com/problems/merge-two-binary-trees][617. Merge Two
Binary Trees]]
  :PROPERTIES:
  :CUSTOM_ID: merge-two-binary-trees
  :END:
[[./solution/0600-0699/0617.Merge Two Binary Trees/README.org][中文文档]]

** Description
   :PROPERTIES:
   :CUSTOM_ID: description
   :END:

#+begin_html
  <p>
#+end_html

You are given two binary trees root1 and root2.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Imagine that when you put one of them to cover the other, some nodes of
the two trees are overlapped while the others are not. You need to merge
the two trees into a new binary tree. The merge rule is that if two
nodes overlap, then sum node values up as the new value of the merged
node. Otherwise, the NOT null node will be used as the node of the new
tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Return the merged tree.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Note: The merging process must start from the root nodes of both trees.

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Example 1:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [1,3,2,5], root2 = [2,1,3,null,4,null,7]
  <strong>Output:</strong> [3,4,5,5,4,null,7]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

Example 2:

#+begin_html
  </p>
#+end_html

#+begin_html
  <pre>
  <strong>Input:</strong> root1 = [1], root2 = [1,2]
  <strong>Output:</strong> [2,2]
  </pre>
#+end_html

#+begin_html
  <p>
#+end_html

 

#+begin_html
  </p>
#+end_html

#+begin_html
  <p>
#+end_html

Constraints:

#+begin_html
  </p>
#+end_html

#+begin_html
  <ul>
#+end_html

#+begin_html
  <li>
#+end_html

The number of nodes in both trees is in the range [0, 2000].

#+begin_html
  </li>
#+end_html

#+begin_html
  <li>
#+end_html

-104 <= Node.val <= 104

#+begin_html
  </li>
#+end_html

#+begin_html
  </ul>
#+end_html

** Solutions
   :PROPERTIES:
   :CUSTOM_ID: solutions
   :END:

#+begin_html
  <!-- tabs:start -->
#+end_html

*** *Python3*
    :PROPERTIES:
    :CUSTOM_ID: python3
    :END:
#+begin_src python
#+end_src

*** *Java*
    :PROPERTIES:
    :CUSTOM_ID: java
    :END:
#+begin_src java
#+end_src

*** *...*
    :PROPERTIES:
    :CUSTOM_ID: section
    :END:
#+begin_example
#+end_example

#+begin_html
  <!-- tabs:end -->
#+end_html
